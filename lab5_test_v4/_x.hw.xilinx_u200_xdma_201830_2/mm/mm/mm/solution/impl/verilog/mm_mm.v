// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mm_mm,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.433000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=433,HLS_SYN_DSP=326,HLS_SYN_FF=28262,HLS_SYN_LUT=30385,HLS_VERSION=2019_2}" *)

module mm_mm (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (512 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [63:0] A_p_V;
wire   [63:0] B_p_V;
wire   [63:0] AB_p_V;
wire   [31:0] N;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
wire   [511:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
wire    gmem1_AWREADY;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [511:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
wire    gmem2_AWREADY;
wire    gmem2_WREADY;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
wire   [511:0] gmem2_RDATA;
wire    gmem2_RLAST;
wire   [0:0] gmem2_RID;
wire   [0:0] gmem2_RUSER;
wire   [1:0] gmem2_RRESP;
wire    gmem2_BVALID;
wire   [1:0] gmem2_BRESP;
wire   [0:0] gmem2_BID;
wire   [0:0] gmem2_BUSER;
wire    mm_entry616_U0_ap_start;
wire    mm_entry616_U0_ap_done;
wire    mm_entry616_U0_ap_continue;
wire    mm_entry616_U0_ap_idle;
wire    mm_entry616_U0_ap_ready;
wire    mm_entry616_U0_start_out;
wire    mm_entry616_U0_start_write;
wire   [31:0] mm_entry616_U0_N_out_din;
wire    mm_entry616_U0_N_out_write;
wire   [31:0] mm_entry616_U0_N_out1_din;
wire    mm_entry616_U0_N_out1_write;
wire   [63:0] mm_entry616_U0_A_p_V_out_din;
wire    mm_entry616_U0_A_p_V_out_write;
wire   [63:0] mm_entry616_U0_B_p_V_out_din;
wire    mm_entry616_U0_B_p_V_out_write;
wire   [63:0] mm_entry616_U0_AB_p_V_out_din;
wire    mm_entry616_U0_AB_p_V_out_write;
wire    readA_U0_ap_start;
wire    readA_U0_ap_done;
wire    readA_U0_ap_continue;
wire    readA_U0_ap_idle;
wire    readA_U0_ap_ready;
wire    readA_U0_start_out;
wire    readA_U0_start_write;
wire    readA_U0_m_axi_A_p_V_AWVALID;
wire   [63:0] readA_U0_m_axi_A_p_V_AWADDR;
wire   [0:0] readA_U0_m_axi_A_p_V_AWID;
wire   [31:0] readA_U0_m_axi_A_p_V_AWLEN;
wire   [2:0] readA_U0_m_axi_A_p_V_AWSIZE;
wire   [1:0] readA_U0_m_axi_A_p_V_AWBURST;
wire   [1:0] readA_U0_m_axi_A_p_V_AWLOCK;
wire   [3:0] readA_U0_m_axi_A_p_V_AWCACHE;
wire   [2:0] readA_U0_m_axi_A_p_V_AWPROT;
wire   [3:0] readA_U0_m_axi_A_p_V_AWQOS;
wire   [3:0] readA_U0_m_axi_A_p_V_AWREGION;
wire   [0:0] readA_U0_m_axi_A_p_V_AWUSER;
wire    readA_U0_m_axi_A_p_V_WVALID;
wire   [511:0] readA_U0_m_axi_A_p_V_WDATA;
wire   [63:0] readA_U0_m_axi_A_p_V_WSTRB;
wire    readA_U0_m_axi_A_p_V_WLAST;
wire   [0:0] readA_U0_m_axi_A_p_V_WID;
wire   [0:0] readA_U0_m_axi_A_p_V_WUSER;
wire    readA_U0_m_axi_A_p_V_ARVALID;
wire   [63:0] readA_U0_m_axi_A_p_V_ARADDR;
wire   [0:0] readA_U0_m_axi_A_p_V_ARID;
wire   [31:0] readA_U0_m_axi_A_p_V_ARLEN;
wire   [2:0] readA_U0_m_axi_A_p_V_ARSIZE;
wire   [1:0] readA_U0_m_axi_A_p_V_ARBURST;
wire   [1:0] readA_U0_m_axi_A_p_V_ARLOCK;
wire   [3:0] readA_U0_m_axi_A_p_V_ARCACHE;
wire   [2:0] readA_U0_m_axi_A_p_V_ARPROT;
wire   [3:0] readA_U0_m_axi_A_p_V_ARQOS;
wire   [3:0] readA_U0_m_axi_A_p_V_ARREGION;
wire   [0:0] readA_U0_m_axi_A_p_V_ARUSER;
wire    readA_U0_m_axi_A_p_V_RREADY;
wire    readA_U0_m_axi_A_p_V_BREADY;
wire    readA_U0_A_p_V_offset_read;
wire   [511:0] readA_U0_AStreamWide_V_V_din;
wire    readA_U0_AStreamWide_V_V_write;
wire    readA_U0_N_read;
wire   [31:0] readA_U0_N_out_din;
wire    readA_U0_N_out_write;
wire    changeARate_U0_ap_start;
wire    changeARate_U0_ap_done;
wire    changeARate_U0_ap_continue;
wire    changeARate_U0_ap_idle;
wire    changeARate_U0_ap_ready;
wire    changeARate_U0_AStreamWide_V_V_read;
wire   [15:0] changeARate_U0_AStream_V_din;
wire    changeARate_U0_AStream_V_write;
wire    changeARate_U0_N_read;
wire   [31:0] changeARate_U0_N_out_din;
wire    changeARate_U0_N_out_write;
wire    readB_U0_ap_start;
wire    readB_U0_ap_done;
wire    readB_U0_ap_continue;
wire    readB_U0_ap_idle;
wire    readB_U0_ap_ready;
wire    readB_U0_start_out;
wire    readB_U0_start_write;
wire    readB_U0_m_axi_B_p_V_AWVALID;
wire   [63:0] readB_U0_m_axi_B_p_V_AWADDR;
wire   [0:0] readB_U0_m_axi_B_p_V_AWID;
wire   [31:0] readB_U0_m_axi_B_p_V_AWLEN;
wire   [2:0] readB_U0_m_axi_B_p_V_AWSIZE;
wire   [1:0] readB_U0_m_axi_B_p_V_AWBURST;
wire   [1:0] readB_U0_m_axi_B_p_V_AWLOCK;
wire   [3:0] readB_U0_m_axi_B_p_V_AWCACHE;
wire   [2:0] readB_U0_m_axi_B_p_V_AWPROT;
wire   [3:0] readB_U0_m_axi_B_p_V_AWQOS;
wire   [3:0] readB_U0_m_axi_B_p_V_AWREGION;
wire   [0:0] readB_U0_m_axi_B_p_V_AWUSER;
wire    readB_U0_m_axi_B_p_V_WVALID;
wire   [511:0] readB_U0_m_axi_B_p_V_WDATA;
wire   [63:0] readB_U0_m_axi_B_p_V_WSTRB;
wire    readB_U0_m_axi_B_p_V_WLAST;
wire   [0:0] readB_U0_m_axi_B_p_V_WID;
wire   [0:0] readB_U0_m_axi_B_p_V_WUSER;
wire    readB_U0_m_axi_B_p_V_ARVALID;
wire   [63:0] readB_U0_m_axi_B_p_V_ARADDR;
wire   [0:0] readB_U0_m_axi_B_p_V_ARID;
wire   [31:0] readB_U0_m_axi_B_p_V_ARLEN;
wire   [2:0] readB_U0_m_axi_B_p_V_ARSIZE;
wire   [1:0] readB_U0_m_axi_B_p_V_ARBURST;
wire   [1:0] readB_U0_m_axi_B_p_V_ARLOCK;
wire   [3:0] readB_U0_m_axi_B_p_V_ARCACHE;
wire   [2:0] readB_U0_m_axi_B_p_V_ARPROT;
wire   [3:0] readB_U0_m_axi_B_p_V_ARQOS;
wire   [3:0] readB_U0_m_axi_B_p_V_ARREGION;
wire   [0:0] readB_U0_m_axi_B_p_V_ARUSER;
wire    readB_U0_m_axi_B_p_V_RREADY;
wire    readB_U0_m_axi_B_p_V_BREADY;
wire    readB_U0_B_p_V_offset_read;
wire   [511:0] readB_U0_BStream_V_V_din;
wire    readB_U0_BStream_V_V_write;
wire    readB_U0_N_read;
wire    comp_U0_ap_start;
wire    comp_U0_ap_done;
wire    comp_U0_ap_continue;
wire    comp_U0_ap_idle;
wire    comp_U0_ap_ready;
wire    comp_U0_AStream_V_read;
wire    comp_U0_BStream_V_V_read;
wire   [511:0] comp_U0_ABStream_V_V_din;
wire    comp_U0_ABStream_V_V_write;
wire    comp_U0_N_read;
wire   [31:0] comp_U0_N_out_din;
wire    comp_U0_N_out_write;
wire    writeAB_U0_ap_start;
wire    writeAB_U0_ap_done;
wire    writeAB_U0_ap_continue;
wire    writeAB_U0_ap_idle;
wire    writeAB_U0_ap_ready;
wire    writeAB_U0_ABStream_V_V_read;
wire    writeAB_U0_m_axi_AB_V_AWVALID;
wire   [63:0] writeAB_U0_m_axi_AB_V_AWADDR;
wire   [0:0] writeAB_U0_m_axi_AB_V_AWID;
wire   [31:0] writeAB_U0_m_axi_AB_V_AWLEN;
wire   [2:0] writeAB_U0_m_axi_AB_V_AWSIZE;
wire   [1:0] writeAB_U0_m_axi_AB_V_AWBURST;
wire   [1:0] writeAB_U0_m_axi_AB_V_AWLOCK;
wire   [3:0] writeAB_U0_m_axi_AB_V_AWCACHE;
wire   [2:0] writeAB_U0_m_axi_AB_V_AWPROT;
wire   [3:0] writeAB_U0_m_axi_AB_V_AWQOS;
wire   [3:0] writeAB_U0_m_axi_AB_V_AWREGION;
wire   [0:0] writeAB_U0_m_axi_AB_V_AWUSER;
wire    writeAB_U0_m_axi_AB_V_WVALID;
wire   [511:0] writeAB_U0_m_axi_AB_V_WDATA;
wire   [63:0] writeAB_U0_m_axi_AB_V_WSTRB;
wire    writeAB_U0_m_axi_AB_V_WLAST;
wire   [0:0] writeAB_U0_m_axi_AB_V_WID;
wire   [0:0] writeAB_U0_m_axi_AB_V_WUSER;
wire    writeAB_U0_m_axi_AB_V_ARVALID;
wire   [63:0] writeAB_U0_m_axi_AB_V_ARADDR;
wire   [0:0] writeAB_U0_m_axi_AB_V_ARID;
wire   [31:0] writeAB_U0_m_axi_AB_V_ARLEN;
wire   [2:0] writeAB_U0_m_axi_AB_V_ARSIZE;
wire   [1:0] writeAB_U0_m_axi_AB_V_ARBURST;
wire   [1:0] writeAB_U0_m_axi_AB_V_ARLOCK;
wire   [3:0] writeAB_U0_m_axi_AB_V_ARCACHE;
wire   [2:0] writeAB_U0_m_axi_AB_V_ARPROT;
wire   [3:0] writeAB_U0_m_axi_AB_V_ARQOS;
wire   [3:0] writeAB_U0_m_axi_AB_V_ARREGION;
wire   [0:0] writeAB_U0_m_axi_AB_V_ARUSER;
wire    writeAB_U0_m_axi_AB_V_RREADY;
wire    writeAB_U0_m_axi_AB_V_BREADY;
wire    writeAB_U0_AB_V_offset_read;
wire    writeAB_U0_N_read;
wire    ap_sync_continue;
wire    N_c_full_n;
wire   [31:0] N_c_dout;
wire    N_c_empty_n;
wire    N_c8_full_n;
wire   [31:0] N_c8_dout;
wire    N_c8_empty_n;
wire    A_p_V_c_full_n;
wire   [63:0] A_p_V_c_dout;
wire    A_p_V_c_empty_n;
wire    B_p_V_c_full_n;
wire   [63:0] B_p_V_c_dout;
wire    B_p_V_c_empty_n;
wire    AB_p_V_c_full_n;
wire   [63:0] AB_p_V_c_dout;
wire    AB_p_V_c_empty_n;
wire    AStreamWide_V_V_full_n;
wire   [511:0] AStreamWide_V_V_dout;
wire    AStreamWide_V_V_empty_n;
wire    N_c9_full_n;
wire   [31:0] N_c9_dout;
wire    N_c9_empty_n;
wire    AStream_V_full_n;
wire   [15:0] AStream_V_dout;
wire    AStream_V_empty_n;
wire    N_c10_full_n;
wire   [31:0] N_c10_dout;
wire    N_c10_empty_n;
wire    BStream_V_V_full_n;
wire   [511:0] BStream_V_V_dout;
wire    BStream_V_V_empty_n;
wire    ABStream_V_V_full_n;
wire   [511:0] ABStream_V_V_dout;
wire    ABStream_V_V_empty_n;
wire    N_c11_full_n;
wire   [31:0] N_c11_dout;
wire    N_c11_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_mm_entry616_U0_ap_ready;
wire    ap_sync_mm_entry616_U0_ap_ready;
reg   [1:0] mm_entry616_U0_ap_ready_count;
reg    ap_sync_reg_readA_U0_ap_ready;
wire    ap_sync_readA_U0_ap_ready;
reg   [1:0] readA_U0_ap_ready_count;
reg    ap_sync_reg_readB_U0_ap_ready;
wire    ap_sync_readB_U0_ap_ready;
reg   [1:0] readB_U0_ap_ready_count;
wire   [0:0] start_for_writeAB_U0_din;
wire    start_for_writeAB_U0_full_n;
wire   [0:0] start_for_writeAB_U0_dout;
wire    start_for_writeAB_U0_empty_n;
wire   [0:0] start_for_changeARate_U0_din;
wire    start_for_changeARate_U0_full_n;
wire   [0:0] start_for_changeARate_U0_dout;
wire    start_for_changeARate_U0_empty_n;
wire    changeARate_U0_start_full_n;
wire    changeARate_U0_start_write;
wire   [0:0] start_for_comp_U0_din;
wire    start_for_comp_U0_full_n;
wire   [0:0] start_for_comp_U0_dout;
wire    start_for_comp_U0_empty_n;
wire    comp_U0_start_full_n;
wire    comp_U0_start_write;
wire    writeAB_U0_start_full_n;
wire    writeAB_U0_start_write;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_sync_reg_mm_entry616_U0_ap_ready = 1'b0;
#0 mm_entry616_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_readA_U0_ap_ready = 1'b0;
#0 readA_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_readB_U0_ap_ready = 1'b0;
#0 readB_U0_ap_ready_count = 2'd0;
end

mm_mm_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
mm_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .A_p_V(A_p_V),
    .B_p_V(B_p_V),
    .AB_p_V(AB_p_V),
    .N(N)
);

mm_mm_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
mm_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(readA_U0_m_axi_A_p_V_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(readA_U0_m_axi_A_p_V_ARADDR),
    .I_ARID(readA_U0_m_axi_A_p_V_ARID),
    .I_ARLEN(readA_U0_m_axi_A_p_V_ARLEN),
    .I_ARSIZE(readA_U0_m_axi_A_p_V_ARSIZE),
    .I_ARLOCK(readA_U0_m_axi_A_p_V_ARLOCK),
    .I_ARCACHE(readA_U0_m_axi_A_p_V_ARCACHE),
    .I_ARQOS(readA_U0_m_axi_A_p_V_ARQOS),
    .I_ARPROT(readA_U0_m_axi_A_p_V_ARPROT),
    .I_ARUSER(readA_U0_m_axi_A_p_V_ARUSER),
    .I_ARBURST(readA_U0_m_axi_A_p_V_ARBURST),
    .I_ARREGION(readA_U0_m_axi_A_p_V_ARREGION),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(readA_U0_m_axi_A_p_V_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

mm_mm_gmem1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
mm_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(readB_U0_m_axi_B_p_V_ARVALID),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(readB_U0_m_axi_B_p_V_ARADDR),
    .I_ARID(readB_U0_m_axi_B_p_V_ARID),
    .I_ARLEN(readB_U0_m_axi_B_p_V_ARLEN),
    .I_ARSIZE(readB_U0_m_axi_B_p_V_ARSIZE),
    .I_ARLOCK(readB_U0_m_axi_B_p_V_ARLOCK),
    .I_ARCACHE(readB_U0_m_axi_B_p_V_ARCACHE),
    .I_ARQOS(readB_U0_m_axi_B_p_V_ARQOS),
    .I_ARPROT(readB_U0_m_axi_B_p_V_ARPROT),
    .I_ARUSER(readB_U0_m_axi_B_p_V_ARUSER),
    .I_ARBURST(readB_U0_m_axi_B_p_V_ARBURST),
    .I_ARREGION(readB_U0_m_axi_B_p_V_ARREGION),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(readB_U0_m_axi_B_p_V_RREADY),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

mm_mm_gmem2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ))
mm_gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem2_RDATA),
    .I_RID(gmem2_RID),
    .I_RUSER(gmem2_RUSER),
    .I_RRESP(gmem2_RRESP),
    .I_RLAST(gmem2_RLAST),
    .I_AWVALID(writeAB_U0_m_axi_AB_V_AWVALID),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(writeAB_U0_m_axi_AB_V_AWADDR),
    .I_AWID(writeAB_U0_m_axi_AB_V_AWID),
    .I_AWLEN(writeAB_U0_m_axi_AB_V_AWLEN),
    .I_AWSIZE(writeAB_U0_m_axi_AB_V_AWSIZE),
    .I_AWLOCK(writeAB_U0_m_axi_AB_V_AWLOCK),
    .I_AWCACHE(writeAB_U0_m_axi_AB_V_AWCACHE),
    .I_AWQOS(writeAB_U0_m_axi_AB_V_AWQOS),
    .I_AWPROT(writeAB_U0_m_axi_AB_V_AWPROT),
    .I_AWUSER(writeAB_U0_m_axi_AB_V_AWUSER),
    .I_AWBURST(writeAB_U0_m_axi_AB_V_AWBURST),
    .I_AWREGION(writeAB_U0_m_axi_AB_V_AWREGION),
    .I_WVALID(writeAB_U0_m_axi_AB_V_WVALID),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(writeAB_U0_m_axi_AB_V_WDATA),
    .I_WID(writeAB_U0_m_axi_AB_V_WID),
    .I_WUSER(writeAB_U0_m_axi_AB_V_WUSER),
    .I_WLAST(writeAB_U0_m_axi_AB_V_WLAST),
    .I_WSTRB(writeAB_U0_m_axi_AB_V_WSTRB),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(writeAB_U0_m_axi_AB_V_BREADY),
    .I_BRESP(gmem2_BRESP),
    .I_BID(gmem2_BID),
    .I_BUSER(gmem2_BUSER)
);

mm_mm_entry616 mm_entry616_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(mm_entry616_U0_ap_start),
    .start_full_n(start_for_writeAB_U0_full_n),
    .ap_done(mm_entry616_U0_ap_done),
    .ap_continue(mm_entry616_U0_ap_continue),
    .ap_idle(mm_entry616_U0_ap_idle),
    .ap_ready(mm_entry616_U0_ap_ready),
    .start_out(mm_entry616_U0_start_out),
    .start_write(mm_entry616_U0_start_write),
    .N(N),
    .N_out_din(mm_entry616_U0_N_out_din),
    .N_out_full_n(N_c_full_n),
    .N_out_write(mm_entry616_U0_N_out_write),
    .N_out1_din(mm_entry616_U0_N_out1_din),
    .N_out1_full_n(N_c8_full_n),
    .N_out1_write(mm_entry616_U0_N_out1_write),
    .A_p_V(A_p_V),
    .B_p_V(B_p_V),
    .AB_p_V(AB_p_V),
    .A_p_V_out_din(mm_entry616_U0_A_p_V_out_din),
    .A_p_V_out_full_n(A_p_V_c_full_n),
    .A_p_V_out_write(mm_entry616_U0_A_p_V_out_write),
    .B_p_V_out_din(mm_entry616_U0_B_p_V_out_din),
    .B_p_V_out_full_n(B_p_V_c_full_n),
    .B_p_V_out_write(mm_entry616_U0_B_p_V_out_write),
    .AB_p_V_out_din(mm_entry616_U0_AB_p_V_out_din),
    .AB_p_V_out_full_n(AB_p_V_c_full_n),
    .AB_p_V_out_write(mm_entry616_U0_AB_p_V_out_write)
);

mm_readA readA_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(readA_U0_ap_start),
    .start_full_n(start_for_changeARate_U0_full_n),
    .ap_done(readA_U0_ap_done),
    .ap_continue(readA_U0_ap_continue),
    .ap_idle(readA_U0_ap_idle),
    .ap_ready(readA_U0_ap_ready),
    .start_out(readA_U0_start_out),
    .start_write(readA_U0_start_write),
    .m_axi_A_p_V_AWVALID(readA_U0_m_axi_A_p_V_AWVALID),
    .m_axi_A_p_V_AWREADY(1'b0),
    .m_axi_A_p_V_AWADDR(readA_U0_m_axi_A_p_V_AWADDR),
    .m_axi_A_p_V_AWID(readA_U0_m_axi_A_p_V_AWID),
    .m_axi_A_p_V_AWLEN(readA_U0_m_axi_A_p_V_AWLEN),
    .m_axi_A_p_V_AWSIZE(readA_U0_m_axi_A_p_V_AWSIZE),
    .m_axi_A_p_V_AWBURST(readA_U0_m_axi_A_p_V_AWBURST),
    .m_axi_A_p_V_AWLOCK(readA_U0_m_axi_A_p_V_AWLOCK),
    .m_axi_A_p_V_AWCACHE(readA_U0_m_axi_A_p_V_AWCACHE),
    .m_axi_A_p_V_AWPROT(readA_U0_m_axi_A_p_V_AWPROT),
    .m_axi_A_p_V_AWQOS(readA_U0_m_axi_A_p_V_AWQOS),
    .m_axi_A_p_V_AWREGION(readA_U0_m_axi_A_p_V_AWREGION),
    .m_axi_A_p_V_AWUSER(readA_U0_m_axi_A_p_V_AWUSER),
    .m_axi_A_p_V_WVALID(readA_U0_m_axi_A_p_V_WVALID),
    .m_axi_A_p_V_WREADY(1'b0),
    .m_axi_A_p_V_WDATA(readA_U0_m_axi_A_p_V_WDATA),
    .m_axi_A_p_V_WSTRB(readA_U0_m_axi_A_p_V_WSTRB),
    .m_axi_A_p_V_WLAST(readA_U0_m_axi_A_p_V_WLAST),
    .m_axi_A_p_V_WID(readA_U0_m_axi_A_p_V_WID),
    .m_axi_A_p_V_WUSER(readA_U0_m_axi_A_p_V_WUSER),
    .m_axi_A_p_V_ARVALID(readA_U0_m_axi_A_p_V_ARVALID),
    .m_axi_A_p_V_ARREADY(gmem0_ARREADY),
    .m_axi_A_p_V_ARADDR(readA_U0_m_axi_A_p_V_ARADDR),
    .m_axi_A_p_V_ARID(readA_U0_m_axi_A_p_V_ARID),
    .m_axi_A_p_V_ARLEN(readA_U0_m_axi_A_p_V_ARLEN),
    .m_axi_A_p_V_ARSIZE(readA_U0_m_axi_A_p_V_ARSIZE),
    .m_axi_A_p_V_ARBURST(readA_U0_m_axi_A_p_V_ARBURST),
    .m_axi_A_p_V_ARLOCK(readA_U0_m_axi_A_p_V_ARLOCK),
    .m_axi_A_p_V_ARCACHE(readA_U0_m_axi_A_p_V_ARCACHE),
    .m_axi_A_p_V_ARPROT(readA_U0_m_axi_A_p_V_ARPROT),
    .m_axi_A_p_V_ARQOS(readA_U0_m_axi_A_p_V_ARQOS),
    .m_axi_A_p_V_ARREGION(readA_U0_m_axi_A_p_V_ARREGION),
    .m_axi_A_p_V_ARUSER(readA_U0_m_axi_A_p_V_ARUSER),
    .m_axi_A_p_V_RVALID(gmem0_RVALID),
    .m_axi_A_p_V_RREADY(readA_U0_m_axi_A_p_V_RREADY),
    .m_axi_A_p_V_RDATA(gmem0_RDATA),
    .m_axi_A_p_V_RLAST(gmem0_RLAST),
    .m_axi_A_p_V_RID(gmem0_RID),
    .m_axi_A_p_V_RUSER(gmem0_RUSER),
    .m_axi_A_p_V_RRESP(gmem0_RRESP),
    .m_axi_A_p_V_BVALID(1'b0),
    .m_axi_A_p_V_BREADY(readA_U0_m_axi_A_p_V_BREADY),
    .m_axi_A_p_V_BRESP(2'd0),
    .m_axi_A_p_V_BID(1'd0),
    .m_axi_A_p_V_BUSER(1'd0),
    .A_p_V_offset_dout(A_p_V_c_dout),
    .A_p_V_offset_empty_n(A_p_V_c_empty_n),
    .A_p_V_offset_read(readA_U0_A_p_V_offset_read),
    .AStreamWide_V_V_din(readA_U0_AStreamWide_V_V_din),
    .AStreamWide_V_V_full_n(AStreamWide_V_V_full_n),
    .AStreamWide_V_V_write(readA_U0_AStreamWide_V_V_write),
    .N_dout(N_c_dout),
    .N_empty_n(N_c_empty_n),
    .N_read(readA_U0_N_read),
    .N_out_din(readA_U0_N_out_din),
    .N_out_full_n(N_c9_full_n),
    .N_out_write(readA_U0_N_out_write)
);

mm_changeARate changeARate_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(changeARate_U0_ap_start),
    .ap_done(changeARate_U0_ap_done),
    .ap_continue(changeARate_U0_ap_continue),
    .ap_idle(changeARate_U0_ap_idle),
    .ap_ready(changeARate_U0_ap_ready),
    .AStreamWide_V_V_dout(AStreamWide_V_V_dout),
    .AStreamWide_V_V_empty_n(AStreamWide_V_V_empty_n),
    .AStreamWide_V_V_read(changeARate_U0_AStreamWide_V_V_read),
    .AStream_V_din(changeARate_U0_AStream_V_din),
    .AStream_V_full_n(AStream_V_full_n),
    .AStream_V_write(changeARate_U0_AStream_V_write),
    .N_dout(N_c9_dout),
    .N_empty_n(N_c9_empty_n),
    .N_read(changeARate_U0_N_read),
    .N_out_din(changeARate_U0_N_out_din),
    .N_out_full_n(N_c10_full_n),
    .N_out_write(changeARate_U0_N_out_write)
);

mm_readB readB_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(readB_U0_ap_start),
    .start_full_n(start_for_comp_U0_full_n),
    .ap_done(readB_U0_ap_done),
    .ap_continue(readB_U0_ap_continue),
    .ap_idle(readB_U0_ap_idle),
    .ap_ready(readB_U0_ap_ready),
    .start_out(readB_U0_start_out),
    .start_write(readB_U0_start_write),
    .m_axi_B_p_V_AWVALID(readB_U0_m_axi_B_p_V_AWVALID),
    .m_axi_B_p_V_AWREADY(1'b0),
    .m_axi_B_p_V_AWADDR(readB_U0_m_axi_B_p_V_AWADDR),
    .m_axi_B_p_V_AWID(readB_U0_m_axi_B_p_V_AWID),
    .m_axi_B_p_V_AWLEN(readB_U0_m_axi_B_p_V_AWLEN),
    .m_axi_B_p_V_AWSIZE(readB_U0_m_axi_B_p_V_AWSIZE),
    .m_axi_B_p_V_AWBURST(readB_U0_m_axi_B_p_V_AWBURST),
    .m_axi_B_p_V_AWLOCK(readB_U0_m_axi_B_p_V_AWLOCK),
    .m_axi_B_p_V_AWCACHE(readB_U0_m_axi_B_p_V_AWCACHE),
    .m_axi_B_p_V_AWPROT(readB_U0_m_axi_B_p_V_AWPROT),
    .m_axi_B_p_V_AWQOS(readB_U0_m_axi_B_p_V_AWQOS),
    .m_axi_B_p_V_AWREGION(readB_U0_m_axi_B_p_V_AWREGION),
    .m_axi_B_p_V_AWUSER(readB_U0_m_axi_B_p_V_AWUSER),
    .m_axi_B_p_V_WVALID(readB_U0_m_axi_B_p_V_WVALID),
    .m_axi_B_p_V_WREADY(1'b0),
    .m_axi_B_p_V_WDATA(readB_U0_m_axi_B_p_V_WDATA),
    .m_axi_B_p_V_WSTRB(readB_U0_m_axi_B_p_V_WSTRB),
    .m_axi_B_p_V_WLAST(readB_U0_m_axi_B_p_V_WLAST),
    .m_axi_B_p_V_WID(readB_U0_m_axi_B_p_V_WID),
    .m_axi_B_p_V_WUSER(readB_U0_m_axi_B_p_V_WUSER),
    .m_axi_B_p_V_ARVALID(readB_U0_m_axi_B_p_V_ARVALID),
    .m_axi_B_p_V_ARREADY(gmem1_ARREADY),
    .m_axi_B_p_V_ARADDR(readB_U0_m_axi_B_p_V_ARADDR),
    .m_axi_B_p_V_ARID(readB_U0_m_axi_B_p_V_ARID),
    .m_axi_B_p_V_ARLEN(readB_U0_m_axi_B_p_V_ARLEN),
    .m_axi_B_p_V_ARSIZE(readB_U0_m_axi_B_p_V_ARSIZE),
    .m_axi_B_p_V_ARBURST(readB_U0_m_axi_B_p_V_ARBURST),
    .m_axi_B_p_V_ARLOCK(readB_U0_m_axi_B_p_V_ARLOCK),
    .m_axi_B_p_V_ARCACHE(readB_U0_m_axi_B_p_V_ARCACHE),
    .m_axi_B_p_V_ARPROT(readB_U0_m_axi_B_p_V_ARPROT),
    .m_axi_B_p_V_ARQOS(readB_U0_m_axi_B_p_V_ARQOS),
    .m_axi_B_p_V_ARREGION(readB_U0_m_axi_B_p_V_ARREGION),
    .m_axi_B_p_V_ARUSER(readB_U0_m_axi_B_p_V_ARUSER),
    .m_axi_B_p_V_RVALID(gmem1_RVALID),
    .m_axi_B_p_V_RREADY(readB_U0_m_axi_B_p_V_RREADY),
    .m_axi_B_p_V_RDATA(gmem1_RDATA),
    .m_axi_B_p_V_RLAST(gmem1_RLAST),
    .m_axi_B_p_V_RID(gmem1_RID),
    .m_axi_B_p_V_RUSER(gmem1_RUSER),
    .m_axi_B_p_V_RRESP(gmem1_RRESP),
    .m_axi_B_p_V_BVALID(1'b0),
    .m_axi_B_p_V_BREADY(readB_U0_m_axi_B_p_V_BREADY),
    .m_axi_B_p_V_BRESP(2'd0),
    .m_axi_B_p_V_BID(1'd0),
    .m_axi_B_p_V_BUSER(1'd0),
    .B_p_V_offset_dout(B_p_V_c_dout),
    .B_p_V_offset_empty_n(B_p_V_c_empty_n),
    .B_p_V_offset_read(readB_U0_B_p_V_offset_read),
    .BStream_V_V_din(readB_U0_BStream_V_V_din),
    .BStream_V_V_full_n(BStream_V_V_full_n),
    .BStream_V_V_write(readB_U0_BStream_V_V_write),
    .N_dout(N_c8_dout),
    .N_empty_n(N_c8_empty_n),
    .N_read(readB_U0_N_read)
);

mm_comp comp_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(comp_U0_ap_start),
    .ap_done(comp_U0_ap_done),
    .ap_continue(comp_U0_ap_continue),
    .ap_idle(comp_U0_ap_idle),
    .ap_ready(comp_U0_ap_ready),
    .AStream_V_dout(AStream_V_dout),
    .AStream_V_empty_n(AStream_V_empty_n),
    .AStream_V_read(comp_U0_AStream_V_read),
    .BStream_V_V_dout(BStream_V_V_dout),
    .BStream_V_V_empty_n(BStream_V_V_empty_n),
    .BStream_V_V_read(comp_U0_BStream_V_V_read),
    .ABStream_V_V_din(comp_U0_ABStream_V_V_din),
    .ABStream_V_V_full_n(ABStream_V_V_full_n),
    .ABStream_V_V_write(comp_U0_ABStream_V_V_write),
    .N_dout(N_c10_dout),
    .N_empty_n(N_c10_empty_n),
    .N_read(comp_U0_N_read),
    .N_out_din(comp_U0_N_out_din),
    .N_out_full_n(N_c11_full_n),
    .N_out_write(comp_U0_N_out_write)
);

mm_writeAB writeAB_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(writeAB_U0_ap_start),
    .ap_done(writeAB_U0_ap_done),
    .ap_continue(writeAB_U0_ap_continue),
    .ap_idle(writeAB_U0_ap_idle),
    .ap_ready(writeAB_U0_ap_ready),
    .ABStream_V_V_dout(ABStream_V_V_dout),
    .ABStream_V_V_empty_n(ABStream_V_V_empty_n),
    .ABStream_V_V_read(writeAB_U0_ABStream_V_V_read),
    .m_axi_AB_V_AWVALID(writeAB_U0_m_axi_AB_V_AWVALID),
    .m_axi_AB_V_AWREADY(gmem2_AWREADY),
    .m_axi_AB_V_AWADDR(writeAB_U0_m_axi_AB_V_AWADDR),
    .m_axi_AB_V_AWID(writeAB_U0_m_axi_AB_V_AWID),
    .m_axi_AB_V_AWLEN(writeAB_U0_m_axi_AB_V_AWLEN),
    .m_axi_AB_V_AWSIZE(writeAB_U0_m_axi_AB_V_AWSIZE),
    .m_axi_AB_V_AWBURST(writeAB_U0_m_axi_AB_V_AWBURST),
    .m_axi_AB_V_AWLOCK(writeAB_U0_m_axi_AB_V_AWLOCK),
    .m_axi_AB_V_AWCACHE(writeAB_U0_m_axi_AB_V_AWCACHE),
    .m_axi_AB_V_AWPROT(writeAB_U0_m_axi_AB_V_AWPROT),
    .m_axi_AB_V_AWQOS(writeAB_U0_m_axi_AB_V_AWQOS),
    .m_axi_AB_V_AWREGION(writeAB_U0_m_axi_AB_V_AWREGION),
    .m_axi_AB_V_AWUSER(writeAB_U0_m_axi_AB_V_AWUSER),
    .m_axi_AB_V_WVALID(writeAB_U0_m_axi_AB_V_WVALID),
    .m_axi_AB_V_WREADY(gmem2_WREADY),
    .m_axi_AB_V_WDATA(writeAB_U0_m_axi_AB_V_WDATA),
    .m_axi_AB_V_WSTRB(writeAB_U0_m_axi_AB_V_WSTRB),
    .m_axi_AB_V_WLAST(writeAB_U0_m_axi_AB_V_WLAST),
    .m_axi_AB_V_WID(writeAB_U0_m_axi_AB_V_WID),
    .m_axi_AB_V_WUSER(writeAB_U0_m_axi_AB_V_WUSER),
    .m_axi_AB_V_ARVALID(writeAB_U0_m_axi_AB_V_ARVALID),
    .m_axi_AB_V_ARREADY(1'b0),
    .m_axi_AB_V_ARADDR(writeAB_U0_m_axi_AB_V_ARADDR),
    .m_axi_AB_V_ARID(writeAB_U0_m_axi_AB_V_ARID),
    .m_axi_AB_V_ARLEN(writeAB_U0_m_axi_AB_V_ARLEN),
    .m_axi_AB_V_ARSIZE(writeAB_U0_m_axi_AB_V_ARSIZE),
    .m_axi_AB_V_ARBURST(writeAB_U0_m_axi_AB_V_ARBURST),
    .m_axi_AB_V_ARLOCK(writeAB_U0_m_axi_AB_V_ARLOCK),
    .m_axi_AB_V_ARCACHE(writeAB_U0_m_axi_AB_V_ARCACHE),
    .m_axi_AB_V_ARPROT(writeAB_U0_m_axi_AB_V_ARPROT),
    .m_axi_AB_V_ARQOS(writeAB_U0_m_axi_AB_V_ARQOS),
    .m_axi_AB_V_ARREGION(writeAB_U0_m_axi_AB_V_ARREGION),
    .m_axi_AB_V_ARUSER(writeAB_U0_m_axi_AB_V_ARUSER),
    .m_axi_AB_V_RVALID(1'b0),
    .m_axi_AB_V_RREADY(writeAB_U0_m_axi_AB_V_RREADY),
    .m_axi_AB_V_RDATA(512'd0),
    .m_axi_AB_V_RLAST(1'b0),
    .m_axi_AB_V_RID(1'd0),
    .m_axi_AB_V_RUSER(1'd0),
    .m_axi_AB_V_RRESP(2'd0),
    .m_axi_AB_V_BVALID(gmem2_BVALID),
    .m_axi_AB_V_BREADY(writeAB_U0_m_axi_AB_V_BREADY),
    .m_axi_AB_V_BRESP(gmem2_BRESP),
    .m_axi_AB_V_BID(gmem2_BID),
    .m_axi_AB_V_BUSER(gmem2_BUSER),
    .AB_V_offset_dout(AB_p_V_c_dout),
    .AB_V_offset_empty_n(AB_p_V_c_empty_n),
    .AB_V_offset_read(writeAB_U0_AB_V_offset_read),
    .N_dout(N_c11_dout),
    .N_empty_n(N_c11_empty_n),
    .N_read(writeAB_U0_N_read)
);

mm_fifo_w32_d2_A N_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mm_entry616_U0_N_out_din),
    .if_full_n(N_c_full_n),
    .if_write(mm_entry616_U0_N_out_write),
    .if_dout(N_c_dout),
    .if_empty_n(N_c_empty_n),
    .if_read(readA_U0_N_read)
);

mm_fifo_w32_d2_A N_c8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mm_entry616_U0_N_out1_din),
    .if_full_n(N_c8_full_n),
    .if_write(mm_entry616_U0_N_out1_write),
    .if_dout(N_c8_dout),
    .if_empty_n(N_c8_empty_n),
    .if_read(readB_U0_N_read)
);

mm_fifo_w64_d2_A A_p_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mm_entry616_U0_A_p_V_out_din),
    .if_full_n(A_p_V_c_full_n),
    .if_write(mm_entry616_U0_A_p_V_out_write),
    .if_dout(A_p_V_c_dout),
    .if_empty_n(A_p_V_c_empty_n),
    .if_read(readA_U0_A_p_V_offset_read)
);

mm_fifo_w64_d2_A B_p_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mm_entry616_U0_B_p_V_out_din),
    .if_full_n(B_p_V_c_full_n),
    .if_write(mm_entry616_U0_B_p_V_out_write),
    .if_dout(B_p_V_c_dout),
    .if_empty_n(B_p_V_c_empty_n),
    .if_read(readB_U0_B_p_V_offset_read)
);

mm_fifo_w64_d5_A AB_p_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mm_entry616_U0_AB_p_V_out_din),
    .if_full_n(AB_p_V_c_full_n),
    .if_write(mm_entry616_U0_AB_p_V_out_write),
    .if_dout(AB_p_V_c_dout),
    .if_empty_n(AB_p_V_c_empty_n),
    .if_read(writeAB_U0_AB_V_offset_read)
);

mm_fifo_w512_d2_A AStreamWide_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(readA_U0_AStreamWide_V_V_din),
    .if_full_n(AStreamWide_V_V_full_n),
    .if_write(readA_U0_AStreamWide_V_V_write),
    .if_dout(AStreamWide_V_V_dout),
    .if_empty_n(AStreamWide_V_V_empty_n),
    .if_read(changeARate_U0_AStreamWide_V_V_read)
);

mm_fifo_w32_d2_A N_c9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(readA_U0_N_out_din),
    .if_full_n(N_c9_full_n),
    .if_write(readA_U0_N_out_write),
    .if_dout(N_c9_dout),
    .if_empty_n(N_c9_empty_n),
    .if_read(changeARate_U0_N_read)
);

mm_fifo_w16_d2_A AStream_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(changeARate_U0_AStream_V_din),
    .if_full_n(AStream_V_full_n),
    .if_write(changeARate_U0_AStream_V_write),
    .if_dout(AStream_V_dout),
    .if_empty_n(AStream_V_empty_n),
    .if_read(comp_U0_AStream_V_read)
);

mm_fifo_w32_d2_A N_c10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(changeARate_U0_N_out_din),
    .if_full_n(N_c10_full_n),
    .if_write(changeARate_U0_N_out_write),
    .if_dout(N_c10_dout),
    .if_empty_n(N_c10_empty_n),
    .if_read(comp_U0_N_read)
);

mm_fifo_w512_d2_A BStream_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(readB_U0_BStream_V_V_din),
    .if_full_n(BStream_V_V_full_n),
    .if_write(readB_U0_BStream_V_V_write),
    .if_dout(BStream_V_V_dout),
    .if_empty_n(BStream_V_V_empty_n),
    .if_read(comp_U0_BStream_V_V_read)
);

mm_fifo_w512_d2_A ABStream_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(comp_U0_ABStream_V_V_din),
    .if_full_n(ABStream_V_V_full_n),
    .if_write(comp_U0_ABStream_V_V_write),
    .if_dout(ABStream_V_V_dout),
    .if_empty_n(ABStream_V_V_empty_n),
    .if_read(writeAB_U0_ABStream_V_V_read)
);

mm_fifo_w32_d2_A N_c11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(comp_U0_N_out_din),
    .if_full_n(N_c11_full_n),
    .if_write(comp_U0_N_out_write),
    .if_dout(N_c11_dout),
    .if_empty_n(N_c11_empty_n),
    .if_read(writeAB_U0_N_read)
);

mm_start_for_writeAB_U0 start_for_writeAB_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_writeAB_U0_din),
    .if_full_n(start_for_writeAB_U0_full_n),
    .if_write(mm_entry616_U0_start_write),
    .if_dout(start_for_writeAB_U0_dout),
    .if_empty_n(start_for_writeAB_U0_empty_n),
    .if_read(writeAB_U0_ap_ready)
);

mm_start_for_changeARate_U0 start_for_changeARate_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_changeARate_U0_din),
    .if_full_n(start_for_changeARate_U0_full_n),
    .if_write(readA_U0_start_write),
    .if_dout(start_for_changeARate_U0_dout),
    .if_empty_n(start_for_changeARate_U0_empty_n),
    .if_read(changeARate_U0_ap_ready)
);

mm_start_for_comp_U0 start_for_comp_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_comp_U0_din),
    .if_full_n(start_for_comp_U0_full_n),
    .if_write(readB_U0_start_write),
    .if_dout(start_for_comp_U0_dout),
    .if_empty_n(start_for_comp_U0_empty_n),
    .if_read(comp_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_mm_entry616_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_mm_entry616_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_mm_entry616_U0_ap_ready <= ap_sync_mm_entry616_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_readA_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_readA_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_readA_U0_ap_ready <= ap_sync_readA_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_readB_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_readB_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_readB_U0_ap_ready <= ap_sync_readB_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((mm_entry616_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        mm_entry616_U0_ap_ready_count <= (mm_entry616_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (mm_entry616_U0_ap_ready == 1'b1))) begin
        mm_entry616_U0_ap_ready_count <= (mm_entry616_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((readA_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        readA_U0_ap_ready_count <= (readA_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (readA_U0_ap_ready == 1'b1))) begin
        readA_U0_ap_ready_count <= (readA_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((readB_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        readB_U0_ap_ready_count <= (readB_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (readB_U0_ap_ready == 1'b1))) begin
        readB_U0_ap_ready_count <= (readB_U0_ap_ready_count + 2'd1);
    end
end

assign ap_done = writeAB_U0_ap_done;

assign ap_idle = (writeAB_U0_ap_idle & readB_U0_ap_idle & readA_U0_ap_idle & mm_entry616_U0_ap_idle & comp_U0_ap_idle & changeARate_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_continue = 1'b1;

assign ap_sync_done = writeAB_U0_ap_done;

assign ap_sync_mm_entry616_U0_ap_ready = (mm_entry616_U0_ap_ready | ap_sync_reg_mm_entry616_U0_ap_ready);

assign ap_sync_readA_U0_ap_ready = (readA_U0_ap_ready | ap_sync_reg_readA_U0_ap_ready);

assign ap_sync_readB_U0_ap_ready = (readB_U0_ap_ready | ap_sync_reg_readB_U0_ap_ready);

assign ap_sync_ready = (ap_sync_readB_U0_ap_ready & ap_sync_readA_U0_ap_ready & ap_sync_mm_entry616_U0_ap_ready);

assign changeARate_U0_ap_continue = 1'b1;

assign changeARate_U0_ap_start = start_for_changeARate_U0_empty_n;

assign changeARate_U0_start_full_n = 1'b1;

assign changeARate_U0_start_write = 1'b0;

assign comp_U0_ap_continue = 1'b1;

assign comp_U0_ap_start = start_for_comp_U0_empty_n;

assign comp_U0_start_full_n = 1'b1;

assign comp_U0_start_write = 1'b0;

assign mm_entry616_U0_ap_continue = 1'b1;

assign mm_entry616_U0_ap_start = ((ap_sync_reg_mm_entry616_U0_ap_ready ^ 1'b1) & ap_start);

assign readA_U0_ap_continue = 1'b1;

assign readA_U0_ap_start = ((ap_sync_reg_readA_U0_ap_ready ^ 1'b1) & ap_start);

assign readB_U0_ap_continue = 1'b1;

assign readB_U0_ap_start = ((ap_sync_reg_readB_U0_ap_ready ^ 1'b1) & ap_start);

assign start_for_changeARate_U0_din = 1'b1;

assign start_for_comp_U0_din = 1'b1;

assign start_for_writeAB_U0_din = 1'b1;

assign writeAB_U0_ap_continue = 1'b1;

assign writeAB_U0_ap_start = start_for_writeAB_U0_empty_n;

assign writeAB_U0_start_full_n = 1'b1;

assign writeAB_U0_start_write = 1'b0;

endmodule //mm_mm
