// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mm_writeAB_HH_
#define _mm_writeAB_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "mm_mm_mul_25ns_43ns_68_4_1.h"
#include "mm_mm_mul_32s_32s_32_4_1.h"
#include "mm_mm_mul_32s_24ns_32_4_1.h"

namespace ap_rtl {

struct mm_writeAB : public sc_module {
    // Port declarations 61
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > ABStream_V_V_dout;
    sc_in< sc_logic > ABStream_V_V_empty_n;
    sc_out< sc_logic > ABStream_V_V_read;
    sc_out< sc_logic > m_axi_AB_V_AWVALID;
    sc_in< sc_logic > m_axi_AB_V_AWREADY;
    sc_out< sc_lv<64> > m_axi_AB_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_AB_V_AWID;
    sc_out< sc_lv<32> > m_axi_AB_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_AB_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_AB_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_AB_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_AB_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_AB_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_AB_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_AB_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_AB_V_AWUSER;
    sc_out< sc_logic > m_axi_AB_V_WVALID;
    sc_in< sc_logic > m_axi_AB_V_WREADY;
    sc_out< sc_lv<512> > m_axi_AB_V_WDATA;
    sc_out< sc_lv<64> > m_axi_AB_V_WSTRB;
    sc_out< sc_logic > m_axi_AB_V_WLAST;
    sc_out< sc_lv<1> > m_axi_AB_V_WID;
    sc_out< sc_lv<1> > m_axi_AB_V_WUSER;
    sc_out< sc_logic > m_axi_AB_V_ARVALID;
    sc_in< sc_logic > m_axi_AB_V_ARREADY;
    sc_out< sc_lv<64> > m_axi_AB_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_AB_V_ARID;
    sc_out< sc_lv<32> > m_axi_AB_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_AB_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_AB_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_AB_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_AB_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_AB_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_AB_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_AB_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_AB_V_ARUSER;
    sc_in< sc_logic > m_axi_AB_V_RVALID;
    sc_out< sc_logic > m_axi_AB_V_RREADY;
    sc_in< sc_lv<512> > m_axi_AB_V_RDATA;
    sc_in< sc_logic > m_axi_AB_V_RLAST;
    sc_in< sc_lv<1> > m_axi_AB_V_RID;
    sc_in< sc_lv<1> > m_axi_AB_V_RUSER;
    sc_in< sc_lv<2> > m_axi_AB_V_RRESP;
    sc_in< sc_logic > m_axi_AB_V_BVALID;
    sc_out< sc_logic > m_axi_AB_V_BREADY;
    sc_in< sc_lv<2> > m_axi_AB_V_BRESP;
    sc_in< sc_lv<1> > m_axi_AB_V_BID;
    sc_in< sc_lv<1> > m_axi_AB_V_BUSER;
    sc_in< sc_lv<64> > AB_V_offset_dout;
    sc_in< sc_logic > AB_V_offset_empty_n;
    sc_out< sc_logic > AB_V_offset_read;
    sc_in< sc_lv<32> > N_dout;
    sc_in< sc_logic > N_empty_n;
    sc_out< sc_logic > N_read;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    mm_writeAB(sc_module_name name);
    SC_HAS_PROCESS(mm_writeAB);

    ~mm_writeAB();

    sc_trace_file* mVcdFile;

    mm_mm_mul_25ns_43ns_68_4_1<1,4,25,43,68>* mm_mul_25ns_43ns_68_4_1_U335;
    mm_mm_mul_32s_32s_32_4_1<1,4,32,32,32>* mm_mul_32s_32s_32_4_1_U336;
    mm_mm_mul_32s_24ns_32_4_1<1,4,32,24,32>* mm_mul_32s_24ns_32_4_1_U337;
    mm_mm_mul_32s_32s_32_4_1<1,4,32,32,32>* mm_mul_32s_32s_32_4_1_U338;
    mm_mm_mul_32s_32s_32_4_1<1,4,32,32,32>* mm_mul_32s_32s_32_4_1_U339;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ABStream_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln120_reg_993;
    sc_signal< sc_lv<1> > icmp_ln120_reg_993_pp0_iter7_reg;
    sc_signal< sc_logic > AB_V_blk_n_AW;
    sc_signal< sc_lv<1> > empty_14_reg_1016;
    sc_signal< sc_lv<1> > empty_14_reg_1016_pp0_iter7_reg;
    sc_signal< sc_logic > AB_V_blk_n_W;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_lv<1> > icmp_ln120_reg_993_pp0_iter8_reg;
    sc_signal< sc_logic > AB_V_blk_n_B;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_lv<1> > empty_17_reg_1077;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter13_reg;
    sc_signal< sc_logic > AB_V_offset_blk_n;
    sc_signal< sc_logic > N_blk_n;
    sc_signal< sc_lv<68> > indvar_flatten98_i_reg_188;
    sc_signal< sc_lv<44> > indvar_flatten44_i_reg_199;
    sc_signal< sc_lv<24> > ib_0_i_i_reg_210;
    sc_signal< sc_lv<13> > indvar_flatten_i_reg_221;
    sc_signal< sc_lv<9> > i_0_i_i_reg_232;
    sc_signal< sc_lv<4> > jj_0_i_i_reg_243;
    sc_signal< sc_lv<32> > jb_0_i_i_reg_254;
    sc_signal< sc_lv<58> > tmp_reg_933;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > N_read_reg_938;
    sc_signal< sc_lv<1> > tmp_1_reg_947;
    sc_signal< sc_lv<24> > tmp_1_i_reg_952;
    sc_signal< sc_lv<25> > select_ln120_fu_321_p3;
    sc_signal< sc_lv<25> > select_ln120_reg_957;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<43> > empty_fu_335_p1;
    sc_signal< sc_lv<43> > empty_reg_963;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<60> > zext_ln119_cast_i_fu_352_p1;
    sc_signal< sc_lv<60> > zext_ln119_cast_i_reg_978;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<44> > bound5_i_fu_355_p1;
    sc_signal< sc_lv<44> > bound5_i_reg_983;
    sc_signal< sc_lv<68> > grp_fu_346_p2;
    sc_signal< sc_lv<68> > bound49_i_reg_988;
    sc_signal< sc_lv<1> > icmp_ln120_fu_358_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state15_io;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state16_io;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter14;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln120_reg_993_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln120_reg_993_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln120_reg_993_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln120_reg_993_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln120_reg_993_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln120_reg_993_pp0_iter6_reg;
    sc_signal< sc_lv<68> > add_ln120_fu_363_p2;
    sc_signal< sc_lv<68> > add_ln120_reg_997;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln121_fu_369_p2;
    sc_signal< sc_lv<1> > icmp_ln121_reg_1003;
    sc_signal< sc_lv<1> > icmp_ln121_reg_1003_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln121_reg_1003_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln121_reg_1003_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln121_reg_1003_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln121_reg_1003_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln121_reg_1003_pp0_iter6_reg;
    sc_signal< sc_lv<1> > empty_14_fu_386_p2;
    sc_signal< sc_lv<1> > empty_14_reg_1016_pp0_iter1_reg;
    sc_signal< sc_lv<1> > empty_14_reg_1016_pp0_iter2_reg;
    sc_signal< sc_lv<1> > empty_14_reg_1016_pp0_iter3_reg;
    sc_signal< sc_lv<1> > empty_14_reg_1016_pp0_iter4_reg;
    sc_signal< sc_lv<1> > empty_14_reg_1016_pp0_iter5_reg;
    sc_signal< sc_lv<1> > empty_14_reg_1016_pp0_iter6_reg;
    sc_signal< sc_lv<44> > select_ln121_1_fu_398_p3;
    sc_signal< sc_lv<32> > add_ln125_fu_418_p2;
    sc_signal< sc_lv<32> > add_ln125_reg_1025;
    sc_signal< sc_lv<24> > add_ln120_1_fu_424_p2;
    sc_signal< sc_lv<24> > add_ln120_1_reg_1030;
    sc_signal< sc_lv<32> > select_ln120_2_fu_438_p3;
    sc_signal< sc_lv<32> > select_ln120_2_reg_1035;
    sc_signal< sc_lv<1> > and_ln120_1_fu_468_p2;
    sc_signal< sc_lv<1> > and_ln120_1_reg_1040;
    sc_signal< sc_lv<1> > and_ln120_1_reg_1040_pp0_iter2_reg;
    sc_signal< sc_lv<1> > and_ln120_1_reg_1040_pp0_iter3_reg;
    sc_signal< sc_lv<1> > and_ln120_1_reg_1040_pp0_iter4_reg;
    sc_signal< sc_lv<1> > and_ln120_1_reg_1040_pp0_iter5_reg;
    sc_signal< sc_lv<1> > and_ln120_1_reg_1040_pp0_iter6_reg;
    sc_signal< sc_lv<24> > select_ln120_4_fu_474_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > and_ln125_fu_505_p2;
    sc_signal< sc_lv<1> > and_ln125_reg_1052;
    sc_signal< sc_lv<1> > and_ln125_reg_1052_pp0_iter2_reg;
    sc_signal< sc_lv<1> > and_ln125_reg_1052_pp0_iter3_reg;
    sc_signal< sc_lv<1> > and_ln125_reg_1052_pp0_iter4_reg;
    sc_signal< sc_lv<1> > and_ln125_reg_1052_pp0_iter5_reg;
    sc_signal< sc_lv<1> > and_ln125_reg_1052_pp0_iter6_reg;
    sc_signal< sc_lv<32> > add_ln125_3_fu_532_p2;
    sc_signal< sc_lv<32> > add_ln125_3_reg_1057;
    sc_signal< sc_lv<9> > select_ln122_1_fu_538_p3;
    sc_signal< sc_lv<4> > jj_fu_552_p3;
    sc_signal< sc_lv<13> > select_ln122_2_fu_566_p3;
    sc_signal< sc_lv<1> > empty_17_fu_585_p2;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter2_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter3_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter4_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter5_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter6_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter7_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter8_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter9_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter10_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter11_reg;
    sc_signal< sc_lv<1> > empty_17_reg_1077_pp0_iter12_reg;
    sc_signal< sc_lv<32> > grp_fu_591_p2;
    sc_signal< sc_lv<32> > mul_ln125_reg_1086;
    sc_signal< sc_lv<32> > grp_fu_598_p2;
    sc_signal< sc_lv<32> > mul_ln125_1_reg_1091;
    sc_signal< sc_lv<32> > mul_ln125_1_reg_1091_pp0_iter6_reg;
    sc_signal< sc_lv<32> > grp_fu_603_p2;
    sc_signal< sc_lv<32> > mul_ln125_2_reg_1098;
    sc_signal< sc_lv<32> > grp_fu_607_p2;
    sc_signal< sc_lv<32> > mul_ln125_3_reg_1103;
    sc_signal< sc_lv<28> > select_ln125_fu_670_p3;
    sc_signal< sc_lv<28> > select_ln125_reg_1108;
    sc_signal< sc_lv<27> > tmp_7_i_reg_1113;
    sc_signal< sc_lv<32> > add_ln125_2_fu_732_p2;
    sc_signal< sc_lv<32> > add_ln125_2_reg_1118;
    sc_signal< sc_lv<32> > select_ln121_fu_737_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_lv<32> > add_ln125_4_fu_744_p2;
    sc_signal< sc_lv<32> > add_ln125_4_reg_1130;
    sc_signal< sc_lv<60> > add_ln180_fu_918_p2;
    sc_signal< sc_lv<60> > add_ln180_reg_1137;
    sc_signal< sc_lv<512> > tmp_V_reg_1142;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter6_state13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_lv<68> > ap_phi_mux_indvar_flatten98_i_phi_fu_192_p4;
    sc_signal< sc_lv<64> > sext_ln180_fu_923_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > tmp_1_fu_275_p1;
    sc_signal< sc_lv<32> > tmp_1_i_fu_283_p1;
    sc_signal< sc_lv<32> > sub_ln120_fu_293_p2;
    sc_signal< sc_lv<24> > tmp_i_fu_298_p4;
    sc_signal< sc_lv<25> > zext_ln120_fu_308_p1;
    sc_signal< sc_lv<25> > sub_ln120_1_fu_312_p2;
    sc_signal< sc_lv<25> > zext_ln120_1_fu_318_p1;
    sc_signal< sc_lv<36> > tmp_2_i_fu_328_p3;
    sc_signal< sc_lv<25> > grp_fu_346_p0;
    sc_signal< sc_lv<43> > grp_fu_346_p1;
    sc_signal< sc_lv<3> > empty_13_fu_374_p1;
    sc_signal< sc_lv<68> > tmp_6_fu_378_p3;
    sc_signal< sc_lv<44> > add_ln121_1_fu_392_p2;
    sc_signal< sc_lv<32> > zext_ln122_fu_414_p1;
    sc_signal< sc_lv<32> > shl_ln_i_fu_406_p3;
    sc_signal< sc_lv<32> > shl_ln125_mid1_i_fu_430_p3;
    sc_signal< sc_lv<1> > icmp_ln123_fu_450_p2;
    sc_signal< sc_lv<1> > xor_ln120_fu_445_p2;
    sc_signal< sc_lv<1> > icmp_ln122_fu_462_p2;
    sc_signal< sc_lv<1> > or_ln125_fu_481_p2;
    sc_signal< sc_lv<1> > xor_ln125_fu_494_p2;
    sc_signal< sc_lv<1> > and_ln120_fu_456_p2;
    sc_signal< sc_lv<1> > or_ln125_1_fu_500_p2;
    sc_signal< sc_lv<9> > select_ln125_1_fu_486_p3;
    sc_signal< sc_lv<1> > or_ln122_fu_517_p2;
    sc_signal< sc_lv<9> > add_ln122_fu_511_p2;
    sc_signal< sc_lv<32> > zext_ln122_1_fu_528_p1;
    sc_signal< sc_lv<1> > or_ln122_1_fu_523_p2;
    sc_signal< sc_lv<4> > add_ln123_fu_546_p2;
    sc_signal< sc_lv<13> > add_ln122_1_fu_560_p2;
    sc_signal< sc_lv<3> > empty_16_fu_574_p1;
    sc_signal< sc_lv<68> > tmp_7_fu_577_p3;
    sc_signal< sc_lv<24> > grp_fu_598_p1;
    sc_signal< sc_lv<32> > shl_ln125_fu_611_p2;
    sc_signal< sc_lv<32> > add_ln125_1_fu_617_p2;
    sc_signal< sc_lv<32> > sub_ln125_fu_630_p2;
    sc_signal< sc_lv<27> > tmp_4_i_fu_636_p4;
    sc_signal< sc_lv<28> > zext_ln125_fu_646_p1;
    sc_signal< sc_lv<27> > tmp_5_i_fu_656_p4;
    sc_signal< sc_lv<1> > tmp_2_fu_622_p3;
    sc_signal< sc_lv<28> > sub_ln125_1_fu_650_p2;
    sc_signal< sc_lv<28> > zext_ln125_1_fu_666_p1;
    sc_signal< sc_lv<32> > shl_ln125_1_fu_692_p2;
    sc_signal< sc_lv<32> > sub_ln125_2_fu_697_p2;
    sc_signal< sc_lv<32> > select_ln120_1_fu_678_p3;
    sc_signal< sc_lv<32> > add_ln121_fu_713_p2;
    sc_signal< sc_lv<32> > shl_ln125_2_fu_719_p2;
    sc_signal< sc_lv<32> > select_ln120_3_fu_685_p3;
    sc_signal< sc_lv<32> > select_ln125_2_fu_725_p3;
    sc_signal< sc_lv<28> > zext_ln125_2_fu_759_p1;
    sc_signal< sc_lv<24> > trunc_ln125_fu_749_p1;
    sc_signal< sc_lv<27> > lshr_ln125_2_mid_i_fu_768_p3;
    sc_signal< sc_lv<32> > sub_ln125_4_fu_787_p2;
    sc_signal< sc_lv<27> > tmp_9_i_fu_792_p4;
    sc_signal< sc_lv<28> > zext_ln125_4_fu_802_p1;
    sc_signal< sc_lv<27> > tmp_10_i_fu_812_p4;
    sc_signal< sc_lv<32> > sub_ln125_6_fu_832_p2;
    sc_signal< sc_lv<27> > tmp_11_i_fu_837_p4;
    sc_signal< sc_lv<28> > zext_ln125_6_fu_847_p1;
    sc_signal< sc_lv<27> > tmp_12_i_fu_857_p4;
    sc_signal< sc_lv<1> > tmp_5_fu_825_p3;
    sc_signal< sc_lv<28> > sub_ln125_7_fu_851_p2;
    sc_signal< sc_lv<28> > zext_ln125_7_fu_866_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_780_p3;
    sc_signal< sc_lv<28> > sub_ln125_5_fu_806_p2;
    sc_signal< sc_lv<28> > zext_ln125_5_fu_821_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_752_p3;
    sc_signal< sc_lv<28> > sub_ln125_3_fu_762_p2;
    sc_signal< sc_lv<28> > zext_ln125_3_fu_776_p1;
    sc_signal< sc_lv<28> > select_ln125_5_fu_886_p3;
    sc_signal< sc_lv<28> > select_ln125_4_fu_878_p3;
    sc_signal< sc_lv<28> > select_ln120_5_fu_894_p3;
    sc_signal< sc_lv<28> > select_ln125_3_fu_870_p3;
    sc_signal< sc_lv<28> > select_ln125_6_fu_900_p3;
    sc_signal< sc_lv<28> > select_ln122_fu_907_p3;
    sc_signal< sc_lv<60> > sext_ln122_fu_914_p1;
    sc_signal< sc_logic > grp_fu_591_ce;
    sc_signal< sc_logic > grp_fu_598_ce;
    sc_signal< sc_logic > grp_fu_603_ce;
    sc_signal< sc_logic > grp_fu_607_ce;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<68> > grp_fu_346_p00;
    sc_signal< sc_lv<68> > grp_fu_346_p10;
    sc_signal< sc_lv<32> > grp_fu_598_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_state22;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<68> ap_const_lv68_0;
    static const sc_lv<44> ap_const_lv44_0;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFFF;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<68> ap_const_lv68_1;
    static const sc_lv<65> ap_const_lv65_0;
    static const sc_lv<44> ap_const_lv44_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<24> ap_const_lv24_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<13> ap_const_lv13_800;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_7;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ABStream_V_V_blk_n();
    void thread_ABStream_V_V_read();
    void thread_AB_V_blk_n_AW();
    void thread_AB_V_blk_n_B();
    void thread_AB_V_blk_n_W();
    void thread_AB_V_offset_blk_n();
    void thread_AB_V_offset_read();
    void thread_N_blk_n();
    void thread_N_read();
    void thread_add_ln120_1_fu_424_p2();
    void thread_add_ln120_fu_363_p2();
    void thread_add_ln121_1_fu_392_p2();
    void thread_add_ln121_fu_713_p2();
    void thread_add_ln122_1_fu_560_p2();
    void thread_add_ln122_fu_511_p2();
    void thread_add_ln123_fu_546_p2();
    void thread_add_ln125_1_fu_617_p2();
    void thread_add_ln125_2_fu_732_p2();
    void thread_add_ln125_3_fu_532_p2();
    void thread_add_ln125_4_fu_744_p2();
    void thread_add_ln125_fu_418_p2();
    void thread_add_ln180_fu_918_p2();
    void thread_and_ln120_1_fu_468_p2();
    void thread_and_ln120_fu_456_p2();
    void thread_and_ln125_fu_505_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter3();
    void thread_ap_block_state11_pp0_stage0_iter4();
    void thread_ap_block_state12_pp0_stage0_iter5();
    void thread_ap_block_state13_pp0_stage0_iter6();
    void thread_ap_block_state14_pp0_stage0_iter7();
    void thread_ap_block_state15_io();
    void thread_ap_block_state15_pp0_stage0_iter8();
    void thread_ap_block_state16_io();
    void thread_ap_block_state16_pp0_stage0_iter9();
    void thread_ap_block_state17_pp0_stage0_iter10();
    void thread_ap_block_state18_pp0_stage0_iter11();
    void thread_ap_block_state19_pp0_stage0_iter12();
    void thread_ap_block_state20_pp0_stage0_iter13();
    void thread_ap_block_state21_pp0_stage0_iter14();
    void thread_ap_block_state7_pp0_stage0_iter0();
    void thread_ap_block_state8_pp0_stage0_iter1();
    void thread_ap_block_state9_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter6_state13();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_indvar_flatten98_i_phi_fu_192_p4();
    void thread_ap_ready();
    void thread_bound5_i_fu_355_p1();
    void thread_empty_13_fu_374_p1();
    void thread_empty_14_fu_386_p2();
    void thread_empty_16_fu_574_p1();
    void thread_empty_17_fu_585_p2();
    void thread_empty_fu_335_p1();
    void thread_grp_fu_346_p0();
    void thread_grp_fu_346_p00();
    void thread_grp_fu_346_p1();
    void thread_grp_fu_346_p10();
    void thread_grp_fu_591_ce();
    void thread_grp_fu_598_ce();
    void thread_grp_fu_598_p1();
    void thread_grp_fu_598_p10();
    void thread_grp_fu_603_ce();
    void thread_grp_fu_607_ce();
    void thread_icmp_ln120_fu_358_p2();
    void thread_icmp_ln121_fu_369_p2();
    void thread_icmp_ln122_fu_462_p2();
    void thread_icmp_ln123_fu_450_p2();
    void thread_jj_fu_552_p3();
    void thread_lshr_ln125_2_mid_i_fu_768_p3();
    void thread_m_axi_AB_V_ARADDR();
    void thread_m_axi_AB_V_ARBURST();
    void thread_m_axi_AB_V_ARCACHE();
    void thread_m_axi_AB_V_ARID();
    void thread_m_axi_AB_V_ARLEN();
    void thread_m_axi_AB_V_ARLOCK();
    void thread_m_axi_AB_V_ARPROT();
    void thread_m_axi_AB_V_ARQOS();
    void thread_m_axi_AB_V_ARREGION();
    void thread_m_axi_AB_V_ARSIZE();
    void thread_m_axi_AB_V_ARUSER();
    void thread_m_axi_AB_V_ARVALID();
    void thread_m_axi_AB_V_AWADDR();
    void thread_m_axi_AB_V_AWBURST();
    void thread_m_axi_AB_V_AWCACHE();
    void thread_m_axi_AB_V_AWID();
    void thread_m_axi_AB_V_AWLEN();
    void thread_m_axi_AB_V_AWLOCK();
    void thread_m_axi_AB_V_AWPROT();
    void thread_m_axi_AB_V_AWQOS();
    void thread_m_axi_AB_V_AWREGION();
    void thread_m_axi_AB_V_AWSIZE();
    void thread_m_axi_AB_V_AWUSER();
    void thread_m_axi_AB_V_AWVALID();
    void thread_m_axi_AB_V_BREADY();
    void thread_m_axi_AB_V_RREADY();
    void thread_m_axi_AB_V_WDATA();
    void thread_m_axi_AB_V_WID();
    void thread_m_axi_AB_V_WLAST();
    void thread_m_axi_AB_V_WSTRB();
    void thread_m_axi_AB_V_WUSER();
    void thread_m_axi_AB_V_WVALID();
    void thread_or_ln122_1_fu_523_p2();
    void thread_or_ln122_fu_517_p2();
    void thread_or_ln125_1_fu_500_p2();
    void thread_or_ln125_fu_481_p2();
    void thread_select_ln120_1_fu_678_p3();
    void thread_select_ln120_2_fu_438_p3();
    void thread_select_ln120_3_fu_685_p3();
    void thread_select_ln120_4_fu_474_p3();
    void thread_select_ln120_5_fu_894_p3();
    void thread_select_ln120_fu_321_p3();
    void thread_select_ln121_1_fu_398_p3();
    void thread_select_ln121_fu_737_p3();
    void thread_select_ln122_1_fu_538_p3();
    void thread_select_ln122_2_fu_566_p3();
    void thread_select_ln122_fu_907_p3();
    void thread_select_ln125_1_fu_486_p3();
    void thread_select_ln125_2_fu_725_p3();
    void thread_select_ln125_3_fu_870_p3();
    void thread_select_ln125_4_fu_878_p3();
    void thread_select_ln125_5_fu_886_p3();
    void thread_select_ln125_6_fu_900_p3();
    void thread_select_ln125_fu_670_p3();
    void thread_sext_ln122_fu_914_p1();
    void thread_sext_ln180_fu_923_p1();
    void thread_shl_ln125_1_fu_692_p2();
    void thread_shl_ln125_2_fu_719_p2();
    void thread_shl_ln125_fu_611_p2();
    void thread_shl_ln125_mid1_i_fu_430_p3();
    void thread_shl_ln_i_fu_406_p3();
    void thread_sub_ln120_1_fu_312_p2();
    void thread_sub_ln120_fu_293_p2();
    void thread_sub_ln125_1_fu_650_p2();
    void thread_sub_ln125_2_fu_697_p2();
    void thread_sub_ln125_3_fu_762_p2();
    void thread_sub_ln125_4_fu_787_p2();
    void thread_sub_ln125_5_fu_806_p2();
    void thread_sub_ln125_6_fu_832_p2();
    void thread_sub_ln125_7_fu_851_p2();
    void thread_sub_ln125_fu_630_p2();
    void thread_tmp_10_i_fu_812_p4();
    void thread_tmp_11_i_fu_837_p4();
    void thread_tmp_12_i_fu_857_p4();
    void thread_tmp_1_fu_275_p1();
    void thread_tmp_1_i_fu_283_p1();
    void thread_tmp_2_fu_622_p3();
    void thread_tmp_2_i_fu_328_p3();
    void thread_tmp_3_fu_752_p3();
    void thread_tmp_4_fu_780_p3();
    void thread_tmp_4_i_fu_636_p4();
    void thread_tmp_5_fu_825_p3();
    void thread_tmp_5_i_fu_656_p4();
    void thread_tmp_6_fu_378_p3();
    void thread_tmp_7_fu_577_p3();
    void thread_tmp_9_i_fu_792_p4();
    void thread_tmp_i_fu_298_p4();
    void thread_trunc_ln125_fu_749_p1();
    void thread_xor_ln120_fu_445_p2();
    void thread_xor_ln125_fu_494_p2();
    void thread_zext_ln119_cast_i_fu_352_p1();
    void thread_zext_ln120_1_fu_318_p1();
    void thread_zext_ln120_fu_308_p1();
    void thread_zext_ln122_1_fu_528_p1();
    void thread_zext_ln122_fu_414_p1();
    void thread_zext_ln125_1_fu_666_p1();
    void thread_zext_ln125_2_fu_759_p1();
    void thread_zext_ln125_3_fu_776_p1();
    void thread_zext_ln125_4_fu_802_p1();
    void thread_zext_ln125_5_fu_821_p1();
    void thread_zext_ln125_6_fu_847_p1();
    void thread_zext_ln125_7_fu_866_p1();
    void thread_zext_ln125_fu_646_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
