// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mm_mm.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int mm_mm::C_S_AXI_DATA_WIDTH = "100000";
const int mm_mm::C_S_AXI_WSTRB_WIDTH = "100";
const int mm_mm::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic mm_mm::ap_const_logic_1 = sc_dt::Log_1;
const int mm_mm::C_M_AXI_GMEM0_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mm_mm::C_M_AXI_GMEM0_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mm_mm::C_M_AXI_GMEM0_CACHE_VALUE = "11";
const int mm_mm::C_M_AXI_ID_WIDTH = "1";
const int mm_mm::C_M_AXI_ADDR_WIDTH = "1000000";
const int mm_mm::C_M_AXI_DATA_WIDTH = "100000";
const int mm_mm::C_M_AXI_WSTRB_WIDTH = "100";
const int mm_mm::C_M_AXI_AWUSER_WIDTH = "1";
const int mm_mm::C_M_AXI_ARUSER_WIDTH = "1";
const int mm_mm::C_M_AXI_WUSER_WIDTH = "1";
const int mm_mm::C_M_AXI_RUSER_WIDTH = "1";
const int mm_mm::C_M_AXI_BUSER_WIDTH = "1";
const int mm_mm::C_M_AXI_GMEM1_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mm_mm::C_M_AXI_GMEM1_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mm_mm::C_M_AXI_GMEM1_CACHE_VALUE = "11";
const int mm_mm::C_M_AXI_GMEM2_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mm_mm::C_M_AXI_GMEM2_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int mm_mm::C_M_AXI_GMEM2_CACHE_VALUE = "11";
const sc_logic mm_mm::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> mm_mm::ap_const_lv2_0 = "00";
const sc_lv<2> mm_mm::ap_const_lv2_1 = "1";
const bool mm_mm::ap_const_boolean_1 = true;
const sc_lv<64> mm_mm::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> mm_mm::ap_const_lv64_1 = "1";
const sc_lv<1> mm_mm::ap_const_lv1_0 = "0";
const sc_lv<1> mm_mm::ap_const_lv1_1 = "1";
const sc_lv<32> mm_mm::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mm_mm::ap_const_lv32_1 = "1";
const sc_lv<3> mm_mm::ap_const_lv3_0 = "000";
const sc_lv<3> mm_mm::ap_const_lv3_1 = "1";
const sc_lv<4> mm_mm::ap_const_lv4_0 = "0000";
const sc_lv<4> mm_mm::ap_const_lv4_1 = "1";
const sc_lv<512> mm_mm::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<512> mm_mm::ap_const_lv512_lc_3 = "1";

mm_mm::mm_mm(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mm_control_s_axi_U = new mm_mm_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("mm_control_s_axi_U");
    mm_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    mm_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    mm_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    mm_control_s_axi_U->WVALID(s_axi_control_WVALID);
    mm_control_s_axi_U->WREADY(s_axi_control_WREADY);
    mm_control_s_axi_U->WDATA(s_axi_control_WDATA);
    mm_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    mm_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    mm_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    mm_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    mm_control_s_axi_U->RVALID(s_axi_control_RVALID);
    mm_control_s_axi_U->RREADY(s_axi_control_RREADY);
    mm_control_s_axi_U->RDATA(s_axi_control_RDATA);
    mm_control_s_axi_U->RRESP(s_axi_control_RRESP);
    mm_control_s_axi_U->BVALID(s_axi_control_BVALID);
    mm_control_s_axi_U->BREADY(s_axi_control_BREADY);
    mm_control_s_axi_U->BRESP(s_axi_control_BRESP);
    mm_control_s_axi_U->ACLK(ap_clk);
    mm_control_s_axi_U->ARESET(ap_rst_n_inv);
    mm_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    mm_control_s_axi_U->ap_start(ap_start);
    mm_control_s_axi_U->interrupt(interrupt);
    mm_control_s_axi_U->ap_ready(ap_ready);
    mm_control_s_axi_U->ap_done(ap_done);
    mm_control_s_axi_U->ap_idle(ap_idle);
    mm_control_s_axi_U->A_p_V(A_p_V);
    mm_control_s_axi_U->B_p_V(B_p_V);
    mm_control_s_axi_U->AB_p_V(AB_p_V);
    mm_control_s_axi_U->N(N);
    mm_gmem0_m_axi_U = new mm_mm_gmem0_m_axi<1,512,64,5,16,16,16,16,C_M_AXI_GMEM0_ID_WIDTH,C_M_AXI_GMEM0_ADDR_WIDTH,C_M_AXI_GMEM0_DATA_WIDTH,C_M_AXI_GMEM0_AWUSER_WIDTH,C_M_AXI_GMEM0_ARUSER_WIDTH,C_M_AXI_GMEM0_WUSER_WIDTH,C_M_AXI_GMEM0_RUSER_WIDTH,C_M_AXI_GMEM0_BUSER_WIDTH,C_M_AXI_GMEM0_USER_VALUE,C_M_AXI_GMEM0_PROT_VALUE,C_M_AXI_GMEM0_CACHE_VALUE>("mm_gmem0_m_axi_U");
    mm_gmem0_m_axi_U->AWVALID(m_axi_gmem0_AWVALID);
    mm_gmem0_m_axi_U->AWREADY(m_axi_gmem0_AWREADY);
    mm_gmem0_m_axi_U->AWADDR(m_axi_gmem0_AWADDR);
    mm_gmem0_m_axi_U->AWID(m_axi_gmem0_AWID);
    mm_gmem0_m_axi_U->AWLEN(m_axi_gmem0_AWLEN);
    mm_gmem0_m_axi_U->AWSIZE(m_axi_gmem0_AWSIZE);
    mm_gmem0_m_axi_U->AWBURST(m_axi_gmem0_AWBURST);
    mm_gmem0_m_axi_U->AWLOCK(m_axi_gmem0_AWLOCK);
    mm_gmem0_m_axi_U->AWCACHE(m_axi_gmem0_AWCACHE);
    mm_gmem0_m_axi_U->AWPROT(m_axi_gmem0_AWPROT);
    mm_gmem0_m_axi_U->AWQOS(m_axi_gmem0_AWQOS);
    mm_gmem0_m_axi_U->AWREGION(m_axi_gmem0_AWREGION);
    mm_gmem0_m_axi_U->AWUSER(m_axi_gmem0_AWUSER);
    mm_gmem0_m_axi_U->WVALID(m_axi_gmem0_WVALID);
    mm_gmem0_m_axi_U->WREADY(m_axi_gmem0_WREADY);
    mm_gmem0_m_axi_U->WDATA(m_axi_gmem0_WDATA);
    mm_gmem0_m_axi_U->WSTRB(m_axi_gmem0_WSTRB);
    mm_gmem0_m_axi_U->WLAST(m_axi_gmem0_WLAST);
    mm_gmem0_m_axi_U->WID(m_axi_gmem0_WID);
    mm_gmem0_m_axi_U->WUSER(m_axi_gmem0_WUSER);
    mm_gmem0_m_axi_U->ARVALID(m_axi_gmem0_ARVALID);
    mm_gmem0_m_axi_U->ARREADY(m_axi_gmem0_ARREADY);
    mm_gmem0_m_axi_U->ARADDR(m_axi_gmem0_ARADDR);
    mm_gmem0_m_axi_U->ARID(m_axi_gmem0_ARID);
    mm_gmem0_m_axi_U->ARLEN(m_axi_gmem0_ARLEN);
    mm_gmem0_m_axi_U->ARSIZE(m_axi_gmem0_ARSIZE);
    mm_gmem0_m_axi_U->ARBURST(m_axi_gmem0_ARBURST);
    mm_gmem0_m_axi_U->ARLOCK(m_axi_gmem0_ARLOCK);
    mm_gmem0_m_axi_U->ARCACHE(m_axi_gmem0_ARCACHE);
    mm_gmem0_m_axi_U->ARPROT(m_axi_gmem0_ARPROT);
    mm_gmem0_m_axi_U->ARQOS(m_axi_gmem0_ARQOS);
    mm_gmem0_m_axi_U->ARREGION(m_axi_gmem0_ARREGION);
    mm_gmem0_m_axi_U->ARUSER(m_axi_gmem0_ARUSER);
    mm_gmem0_m_axi_U->RVALID(m_axi_gmem0_RVALID);
    mm_gmem0_m_axi_U->RREADY(m_axi_gmem0_RREADY);
    mm_gmem0_m_axi_U->RDATA(m_axi_gmem0_RDATA);
    mm_gmem0_m_axi_U->RLAST(m_axi_gmem0_RLAST);
    mm_gmem0_m_axi_U->RID(m_axi_gmem0_RID);
    mm_gmem0_m_axi_U->RUSER(m_axi_gmem0_RUSER);
    mm_gmem0_m_axi_U->RRESP(m_axi_gmem0_RRESP);
    mm_gmem0_m_axi_U->BVALID(m_axi_gmem0_BVALID);
    mm_gmem0_m_axi_U->BREADY(m_axi_gmem0_BREADY);
    mm_gmem0_m_axi_U->BRESP(m_axi_gmem0_BRESP);
    mm_gmem0_m_axi_U->BID(m_axi_gmem0_BID);
    mm_gmem0_m_axi_U->BUSER(m_axi_gmem0_BUSER);
    mm_gmem0_m_axi_U->ACLK(ap_clk);
    mm_gmem0_m_axi_U->ARESET(ap_rst_n_inv);
    mm_gmem0_m_axi_U->ACLK_EN(ap_var_for_const0);
    mm_gmem0_m_axi_U->I_ARVALID(readA_U0_m_axi_A_p_V_ARVALID);
    mm_gmem0_m_axi_U->I_ARREADY(gmem0_ARREADY);
    mm_gmem0_m_axi_U->I_ARADDR(readA_U0_m_axi_A_p_V_ARADDR);
    mm_gmem0_m_axi_U->I_ARID(readA_U0_m_axi_A_p_V_ARID);
    mm_gmem0_m_axi_U->I_ARLEN(readA_U0_m_axi_A_p_V_ARLEN);
    mm_gmem0_m_axi_U->I_ARSIZE(readA_U0_m_axi_A_p_V_ARSIZE);
    mm_gmem0_m_axi_U->I_ARLOCK(readA_U0_m_axi_A_p_V_ARLOCK);
    mm_gmem0_m_axi_U->I_ARCACHE(readA_U0_m_axi_A_p_V_ARCACHE);
    mm_gmem0_m_axi_U->I_ARQOS(readA_U0_m_axi_A_p_V_ARQOS);
    mm_gmem0_m_axi_U->I_ARPROT(readA_U0_m_axi_A_p_V_ARPROT);
    mm_gmem0_m_axi_U->I_ARUSER(readA_U0_m_axi_A_p_V_ARUSER);
    mm_gmem0_m_axi_U->I_ARBURST(readA_U0_m_axi_A_p_V_ARBURST);
    mm_gmem0_m_axi_U->I_ARREGION(readA_U0_m_axi_A_p_V_ARREGION);
    mm_gmem0_m_axi_U->I_RVALID(gmem0_RVALID);
    mm_gmem0_m_axi_U->I_RREADY(readA_U0_m_axi_A_p_V_RREADY);
    mm_gmem0_m_axi_U->I_RDATA(gmem0_RDATA);
    mm_gmem0_m_axi_U->I_RID(gmem0_RID);
    mm_gmem0_m_axi_U->I_RUSER(gmem0_RUSER);
    mm_gmem0_m_axi_U->I_RRESP(gmem0_RRESP);
    mm_gmem0_m_axi_U->I_RLAST(gmem0_RLAST);
    mm_gmem0_m_axi_U->I_AWVALID(ap_var_for_const1);
    mm_gmem0_m_axi_U->I_AWREADY(gmem0_AWREADY);
    mm_gmem0_m_axi_U->I_AWADDR(ap_var_for_const2);
    mm_gmem0_m_axi_U->I_AWID(ap_var_for_const3);
    mm_gmem0_m_axi_U->I_AWLEN(ap_var_for_const4);
    mm_gmem0_m_axi_U->I_AWSIZE(ap_var_for_const5);
    mm_gmem0_m_axi_U->I_AWLOCK(ap_var_for_const6);
    mm_gmem0_m_axi_U->I_AWCACHE(ap_var_for_const7);
    mm_gmem0_m_axi_U->I_AWQOS(ap_var_for_const7);
    mm_gmem0_m_axi_U->I_AWPROT(ap_var_for_const5);
    mm_gmem0_m_axi_U->I_AWUSER(ap_var_for_const3);
    mm_gmem0_m_axi_U->I_AWBURST(ap_var_for_const6);
    mm_gmem0_m_axi_U->I_AWREGION(ap_var_for_const7);
    mm_gmem0_m_axi_U->I_WVALID(ap_var_for_const1);
    mm_gmem0_m_axi_U->I_WREADY(gmem0_WREADY);
    mm_gmem0_m_axi_U->I_WDATA(ap_var_for_const8);
    mm_gmem0_m_axi_U->I_WID(ap_var_for_const3);
    mm_gmem0_m_axi_U->I_WUSER(ap_var_for_const3);
    mm_gmem0_m_axi_U->I_WLAST(ap_var_for_const1);
    mm_gmem0_m_axi_U->I_WSTRB(ap_var_for_const2);
    mm_gmem0_m_axi_U->I_BVALID(gmem0_BVALID);
    mm_gmem0_m_axi_U->I_BREADY(ap_var_for_const1);
    mm_gmem0_m_axi_U->I_BRESP(gmem0_BRESP);
    mm_gmem0_m_axi_U->I_BID(gmem0_BID);
    mm_gmem0_m_axi_U->I_BUSER(gmem0_BUSER);
    mm_gmem1_m_axi_U = new mm_mm_gmem1_m_axi<1,512,64,5,16,16,16,16,C_M_AXI_GMEM1_ID_WIDTH,C_M_AXI_GMEM1_ADDR_WIDTH,C_M_AXI_GMEM1_DATA_WIDTH,C_M_AXI_GMEM1_AWUSER_WIDTH,C_M_AXI_GMEM1_ARUSER_WIDTH,C_M_AXI_GMEM1_WUSER_WIDTH,C_M_AXI_GMEM1_RUSER_WIDTH,C_M_AXI_GMEM1_BUSER_WIDTH,C_M_AXI_GMEM1_USER_VALUE,C_M_AXI_GMEM1_PROT_VALUE,C_M_AXI_GMEM1_CACHE_VALUE>("mm_gmem1_m_axi_U");
    mm_gmem1_m_axi_U->AWVALID(m_axi_gmem1_AWVALID);
    mm_gmem1_m_axi_U->AWREADY(m_axi_gmem1_AWREADY);
    mm_gmem1_m_axi_U->AWADDR(m_axi_gmem1_AWADDR);
    mm_gmem1_m_axi_U->AWID(m_axi_gmem1_AWID);
    mm_gmem1_m_axi_U->AWLEN(m_axi_gmem1_AWLEN);
    mm_gmem1_m_axi_U->AWSIZE(m_axi_gmem1_AWSIZE);
    mm_gmem1_m_axi_U->AWBURST(m_axi_gmem1_AWBURST);
    mm_gmem1_m_axi_U->AWLOCK(m_axi_gmem1_AWLOCK);
    mm_gmem1_m_axi_U->AWCACHE(m_axi_gmem1_AWCACHE);
    mm_gmem1_m_axi_U->AWPROT(m_axi_gmem1_AWPROT);
    mm_gmem1_m_axi_U->AWQOS(m_axi_gmem1_AWQOS);
    mm_gmem1_m_axi_U->AWREGION(m_axi_gmem1_AWREGION);
    mm_gmem1_m_axi_U->AWUSER(m_axi_gmem1_AWUSER);
    mm_gmem1_m_axi_U->WVALID(m_axi_gmem1_WVALID);
    mm_gmem1_m_axi_U->WREADY(m_axi_gmem1_WREADY);
    mm_gmem1_m_axi_U->WDATA(m_axi_gmem1_WDATA);
    mm_gmem1_m_axi_U->WSTRB(m_axi_gmem1_WSTRB);
    mm_gmem1_m_axi_U->WLAST(m_axi_gmem1_WLAST);
    mm_gmem1_m_axi_U->WID(m_axi_gmem1_WID);
    mm_gmem1_m_axi_U->WUSER(m_axi_gmem1_WUSER);
    mm_gmem1_m_axi_U->ARVALID(m_axi_gmem1_ARVALID);
    mm_gmem1_m_axi_U->ARREADY(m_axi_gmem1_ARREADY);
    mm_gmem1_m_axi_U->ARADDR(m_axi_gmem1_ARADDR);
    mm_gmem1_m_axi_U->ARID(m_axi_gmem1_ARID);
    mm_gmem1_m_axi_U->ARLEN(m_axi_gmem1_ARLEN);
    mm_gmem1_m_axi_U->ARSIZE(m_axi_gmem1_ARSIZE);
    mm_gmem1_m_axi_U->ARBURST(m_axi_gmem1_ARBURST);
    mm_gmem1_m_axi_U->ARLOCK(m_axi_gmem1_ARLOCK);
    mm_gmem1_m_axi_U->ARCACHE(m_axi_gmem1_ARCACHE);
    mm_gmem1_m_axi_U->ARPROT(m_axi_gmem1_ARPROT);
    mm_gmem1_m_axi_U->ARQOS(m_axi_gmem1_ARQOS);
    mm_gmem1_m_axi_U->ARREGION(m_axi_gmem1_ARREGION);
    mm_gmem1_m_axi_U->ARUSER(m_axi_gmem1_ARUSER);
    mm_gmem1_m_axi_U->RVALID(m_axi_gmem1_RVALID);
    mm_gmem1_m_axi_U->RREADY(m_axi_gmem1_RREADY);
    mm_gmem1_m_axi_U->RDATA(m_axi_gmem1_RDATA);
    mm_gmem1_m_axi_U->RLAST(m_axi_gmem1_RLAST);
    mm_gmem1_m_axi_U->RID(m_axi_gmem1_RID);
    mm_gmem1_m_axi_U->RUSER(m_axi_gmem1_RUSER);
    mm_gmem1_m_axi_U->RRESP(m_axi_gmem1_RRESP);
    mm_gmem1_m_axi_U->BVALID(m_axi_gmem1_BVALID);
    mm_gmem1_m_axi_U->BREADY(m_axi_gmem1_BREADY);
    mm_gmem1_m_axi_U->BRESP(m_axi_gmem1_BRESP);
    mm_gmem1_m_axi_U->BID(m_axi_gmem1_BID);
    mm_gmem1_m_axi_U->BUSER(m_axi_gmem1_BUSER);
    mm_gmem1_m_axi_U->ACLK(ap_clk);
    mm_gmem1_m_axi_U->ARESET(ap_rst_n_inv);
    mm_gmem1_m_axi_U->ACLK_EN(ap_var_for_const0);
    mm_gmem1_m_axi_U->I_ARVALID(readB_U0_m_axi_B_p_V_ARVALID);
    mm_gmem1_m_axi_U->I_ARREADY(gmem1_ARREADY);
    mm_gmem1_m_axi_U->I_ARADDR(readB_U0_m_axi_B_p_V_ARADDR);
    mm_gmem1_m_axi_U->I_ARID(readB_U0_m_axi_B_p_V_ARID);
    mm_gmem1_m_axi_U->I_ARLEN(readB_U0_m_axi_B_p_V_ARLEN);
    mm_gmem1_m_axi_U->I_ARSIZE(readB_U0_m_axi_B_p_V_ARSIZE);
    mm_gmem1_m_axi_U->I_ARLOCK(readB_U0_m_axi_B_p_V_ARLOCK);
    mm_gmem1_m_axi_U->I_ARCACHE(readB_U0_m_axi_B_p_V_ARCACHE);
    mm_gmem1_m_axi_U->I_ARQOS(readB_U0_m_axi_B_p_V_ARQOS);
    mm_gmem1_m_axi_U->I_ARPROT(readB_U0_m_axi_B_p_V_ARPROT);
    mm_gmem1_m_axi_U->I_ARUSER(readB_U0_m_axi_B_p_V_ARUSER);
    mm_gmem1_m_axi_U->I_ARBURST(readB_U0_m_axi_B_p_V_ARBURST);
    mm_gmem1_m_axi_U->I_ARREGION(readB_U0_m_axi_B_p_V_ARREGION);
    mm_gmem1_m_axi_U->I_RVALID(gmem1_RVALID);
    mm_gmem1_m_axi_U->I_RREADY(readB_U0_m_axi_B_p_V_RREADY);
    mm_gmem1_m_axi_U->I_RDATA(gmem1_RDATA);
    mm_gmem1_m_axi_U->I_RID(gmem1_RID);
    mm_gmem1_m_axi_U->I_RUSER(gmem1_RUSER);
    mm_gmem1_m_axi_U->I_RRESP(gmem1_RRESP);
    mm_gmem1_m_axi_U->I_RLAST(gmem1_RLAST);
    mm_gmem1_m_axi_U->I_AWVALID(ap_var_for_const1);
    mm_gmem1_m_axi_U->I_AWREADY(gmem1_AWREADY);
    mm_gmem1_m_axi_U->I_AWADDR(ap_var_for_const2);
    mm_gmem1_m_axi_U->I_AWID(ap_var_for_const3);
    mm_gmem1_m_axi_U->I_AWLEN(ap_var_for_const4);
    mm_gmem1_m_axi_U->I_AWSIZE(ap_var_for_const5);
    mm_gmem1_m_axi_U->I_AWLOCK(ap_var_for_const6);
    mm_gmem1_m_axi_U->I_AWCACHE(ap_var_for_const7);
    mm_gmem1_m_axi_U->I_AWQOS(ap_var_for_const7);
    mm_gmem1_m_axi_U->I_AWPROT(ap_var_for_const5);
    mm_gmem1_m_axi_U->I_AWUSER(ap_var_for_const3);
    mm_gmem1_m_axi_U->I_AWBURST(ap_var_for_const6);
    mm_gmem1_m_axi_U->I_AWREGION(ap_var_for_const7);
    mm_gmem1_m_axi_U->I_WVALID(ap_var_for_const1);
    mm_gmem1_m_axi_U->I_WREADY(gmem1_WREADY);
    mm_gmem1_m_axi_U->I_WDATA(ap_var_for_const8);
    mm_gmem1_m_axi_U->I_WID(ap_var_for_const3);
    mm_gmem1_m_axi_U->I_WUSER(ap_var_for_const3);
    mm_gmem1_m_axi_U->I_WLAST(ap_var_for_const1);
    mm_gmem1_m_axi_U->I_WSTRB(ap_var_for_const2);
    mm_gmem1_m_axi_U->I_BVALID(gmem1_BVALID);
    mm_gmem1_m_axi_U->I_BREADY(ap_var_for_const1);
    mm_gmem1_m_axi_U->I_BRESP(gmem1_BRESP);
    mm_gmem1_m_axi_U->I_BID(gmem1_BID);
    mm_gmem1_m_axi_U->I_BUSER(gmem1_BUSER);
    mm_gmem2_m_axi_U = new mm_mm_gmem2_m_axi<1,512,64,5,16,16,16,16,C_M_AXI_GMEM2_ID_WIDTH,C_M_AXI_GMEM2_ADDR_WIDTH,C_M_AXI_GMEM2_DATA_WIDTH,C_M_AXI_GMEM2_AWUSER_WIDTH,C_M_AXI_GMEM2_ARUSER_WIDTH,C_M_AXI_GMEM2_WUSER_WIDTH,C_M_AXI_GMEM2_RUSER_WIDTH,C_M_AXI_GMEM2_BUSER_WIDTH,C_M_AXI_GMEM2_USER_VALUE,C_M_AXI_GMEM2_PROT_VALUE,C_M_AXI_GMEM2_CACHE_VALUE>("mm_gmem2_m_axi_U");
    mm_gmem2_m_axi_U->AWVALID(m_axi_gmem2_AWVALID);
    mm_gmem2_m_axi_U->AWREADY(m_axi_gmem2_AWREADY);
    mm_gmem2_m_axi_U->AWADDR(m_axi_gmem2_AWADDR);
    mm_gmem2_m_axi_U->AWID(m_axi_gmem2_AWID);
    mm_gmem2_m_axi_U->AWLEN(m_axi_gmem2_AWLEN);
    mm_gmem2_m_axi_U->AWSIZE(m_axi_gmem2_AWSIZE);
    mm_gmem2_m_axi_U->AWBURST(m_axi_gmem2_AWBURST);
    mm_gmem2_m_axi_U->AWLOCK(m_axi_gmem2_AWLOCK);
    mm_gmem2_m_axi_U->AWCACHE(m_axi_gmem2_AWCACHE);
    mm_gmem2_m_axi_U->AWPROT(m_axi_gmem2_AWPROT);
    mm_gmem2_m_axi_U->AWQOS(m_axi_gmem2_AWQOS);
    mm_gmem2_m_axi_U->AWREGION(m_axi_gmem2_AWREGION);
    mm_gmem2_m_axi_U->AWUSER(m_axi_gmem2_AWUSER);
    mm_gmem2_m_axi_U->WVALID(m_axi_gmem2_WVALID);
    mm_gmem2_m_axi_U->WREADY(m_axi_gmem2_WREADY);
    mm_gmem2_m_axi_U->WDATA(m_axi_gmem2_WDATA);
    mm_gmem2_m_axi_U->WSTRB(m_axi_gmem2_WSTRB);
    mm_gmem2_m_axi_U->WLAST(m_axi_gmem2_WLAST);
    mm_gmem2_m_axi_U->WID(m_axi_gmem2_WID);
    mm_gmem2_m_axi_U->WUSER(m_axi_gmem2_WUSER);
    mm_gmem2_m_axi_U->ARVALID(m_axi_gmem2_ARVALID);
    mm_gmem2_m_axi_U->ARREADY(m_axi_gmem2_ARREADY);
    mm_gmem2_m_axi_U->ARADDR(m_axi_gmem2_ARADDR);
    mm_gmem2_m_axi_U->ARID(m_axi_gmem2_ARID);
    mm_gmem2_m_axi_U->ARLEN(m_axi_gmem2_ARLEN);
    mm_gmem2_m_axi_U->ARSIZE(m_axi_gmem2_ARSIZE);
    mm_gmem2_m_axi_U->ARBURST(m_axi_gmem2_ARBURST);
    mm_gmem2_m_axi_U->ARLOCK(m_axi_gmem2_ARLOCK);
    mm_gmem2_m_axi_U->ARCACHE(m_axi_gmem2_ARCACHE);
    mm_gmem2_m_axi_U->ARPROT(m_axi_gmem2_ARPROT);
    mm_gmem2_m_axi_U->ARQOS(m_axi_gmem2_ARQOS);
    mm_gmem2_m_axi_U->ARREGION(m_axi_gmem2_ARREGION);
    mm_gmem2_m_axi_U->ARUSER(m_axi_gmem2_ARUSER);
    mm_gmem2_m_axi_U->RVALID(m_axi_gmem2_RVALID);
    mm_gmem2_m_axi_U->RREADY(m_axi_gmem2_RREADY);
    mm_gmem2_m_axi_U->RDATA(m_axi_gmem2_RDATA);
    mm_gmem2_m_axi_U->RLAST(m_axi_gmem2_RLAST);
    mm_gmem2_m_axi_U->RID(m_axi_gmem2_RID);
    mm_gmem2_m_axi_U->RUSER(m_axi_gmem2_RUSER);
    mm_gmem2_m_axi_U->RRESP(m_axi_gmem2_RRESP);
    mm_gmem2_m_axi_U->BVALID(m_axi_gmem2_BVALID);
    mm_gmem2_m_axi_U->BREADY(m_axi_gmem2_BREADY);
    mm_gmem2_m_axi_U->BRESP(m_axi_gmem2_BRESP);
    mm_gmem2_m_axi_U->BID(m_axi_gmem2_BID);
    mm_gmem2_m_axi_U->BUSER(m_axi_gmem2_BUSER);
    mm_gmem2_m_axi_U->ACLK(ap_clk);
    mm_gmem2_m_axi_U->ARESET(ap_rst_n_inv);
    mm_gmem2_m_axi_U->ACLK_EN(ap_var_for_const0);
    mm_gmem2_m_axi_U->I_ARVALID(ap_var_for_const1);
    mm_gmem2_m_axi_U->I_ARREADY(gmem2_ARREADY);
    mm_gmem2_m_axi_U->I_ARADDR(ap_var_for_const2);
    mm_gmem2_m_axi_U->I_ARID(ap_var_for_const3);
    mm_gmem2_m_axi_U->I_ARLEN(ap_var_for_const4);
    mm_gmem2_m_axi_U->I_ARSIZE(ap_var_for_const5);
    mm_gmem2_m_axi_U->I_ARLOCK(ap_var_for_const6);
    mm_gmem2_m_axi_U->I_ARCACHE(ap_var_for_const7);
    mm_gmem2_m_axi_U->I_ARQOS(ap_var_for_const7);
    mm_gmem2_m_axi_U->I_ARPROT(ap_var_for_const5);
    mm_gmem2_m_axi_U->I_ARUSER(ap_var_for_const3);
    mm_gmem2_m_axi_U->I_ARBURST(ap_var_for_const6);
    mm_gmem2_m_axi_U->I_ARREGION(ap_var_for_const7);
    mm_gmem2_m_axi_U->I_RVALID(gmem2_RVALID);
    mm_gmem2_m_axi_U->I_RREADY(ap_var_for_const1);
    mm_gmem2_m_axi_U->I_RDATA(gmem2_RDATA);
    mm_gmem2_m_axi_U->I_RID(gmem2_RID);
    mm_gmem2_m_axi_U->I_RUSER(gmem2_RUSER);
    mm_gmem2_m_axi_U->I_RRESP(gmem2_RRESP);
    mm_gmem2_m_axi_U->I_RLAST(gmem2_RLAST);
    mm_gmem2_m_axi_U->I_AWVALID(writeAB_U0_m_axi_AB_V_AWVALID);
    mm_gmem2_m_axi_U->I_AWREADY(gmem2_AWREADY);
    mm_gmem2_m_axi_U->I_AWADDR(writeAB_U0_m_axi_AB_V_AWADDR);
    mm_gmem2_m_axi_U->I_AWID(writeAB_U0_m_axi_AB_V_AWID);
    mm_gmem2_m_axi_U->I_AWLEN(writeAB_U0_m_axi_AB_V_AWLEN);
    mm_gmem2_m_axi_U->I_AWSIZE(writeAB_U0_m_axi_AB_V_AWSIZE);
    mm_gmem2_m_axi_U->I_AWLOCK(writeAB_U0_m_axi_AB_V_AWLOCK);
    mm_gmem2_m_axi_U->I_AWCACHE(writeAB_U0_m_axi_AB_V_AWCACHE);
    mm_gmem2_m_axi_U->I_AWQOS(writeAB_U0_m_axi_AB_V_AWQOS);
    mm_gmem2_m_axi_U->I_AWPROT(writeAB_U0_m_axi_AB_V_AWPROT);
    mm_gmem2_m_axi_U->I_AWUSER(writeAB_U0_m_axi_AB_V_AWUSER);
    mm_gmem2_m_axi_U->I_AWBURST(writeAB_U0_m_axi_AB_V_AWBURST);
    mm_gmem2_m_axi_U->I_AWREGION(writeAB_U0_m_axi_AB_V_AWREGION);
    mm_gmem2_m_axi_U->I_WVALID(writeAB_U0_m_axi_AB_V_WVALID);
    mm_gmem2_m_axi_U->I_WREADY(gmem2_WREADY);
    mm_gmem2_m_axi_U->I_WDATA(writeAB_U0_m_axi_AB_V_WDATA);
    mm_gmem2_m_axi_U->I_WID(writeAB_U0_m_axi_AB_V_WID);
    mm_gmem2_m_axi_U->I_WUSER(writeAB_U0_m_axi_AB_V_WUSER);
    mm_gmem2_m_axi_U->I_WLAST(writeAB_U0_m_axi_AB_V_WLAST);
    mm_gmem2_m_axi_U->I_WSTRB(writeAB_U0_m_axi_AB_V_WSTRB);
    mm_gmem2_m_axi_U->I_BVALID(gmem2_BVALID);
    mm_gmem2_m_axi_U->I_BREADY(writeAB_U0_m_axi_AB_V_BREADY);
    mm_gmem2_m_axi_U->I_BRESP(gmem2_BRESP);
    mm_gmem2_m_axi_U->I_BID(gmem2_BID);
    mm_gmem2_m_axi_U->I_BUSER(gmem2_BUSER);
    mm_entry616_U0 = new mm_mm_entry616("mm_entry616_U0");
    mm_entry616_U0->ap_clk(ap_clk);
    mm_entry616_U0->ap_rst(ap_rst_n_inv);
    mm_entry616_U0->ap_start(mm_entry616_U0_ap_start);
    mm_entry616_U0->start_full_n(start_for_writeAB_U0_full_n);
    mm_entry616_U0->ap_done(mm_entry616_U0_ap_done);
    mm_entry616_U0->ap_continue(mm_entry616_U0_ap_continue);
    mm_entry616_U0->ap_idle(mm_entry616_U0_ap_idle);
    mm_entry616_U0->ap_ready(mm_entry616_U0_ap_ready);
    mm_entry616_U0->start_out(mm_entry616_U0_start_out);
    mm_entry616_U0->start_write(mm_entry616_U0_start_write);
    mm_entry616_U0->N(N);
    mm_entry616_U0->N_out_din(mm_entry616_U0_N_out_din);
    mm_entry616_U0->N_out_full_n(N_c_full_n);
    mm_entry616_U0->N_out_write(mm_entry616_U0_N_out_write);
    mm_entry616_U0->N_out1_din(mm_entry616_U0_N_out1_din);
    mm_entry616_U0->N_out1_full_n(N_c8_full_n);
    mm_entry616_U0->N_out1_write(mm_entry616_U0_N_out1_write);
    mm_entry616_U0->A_p_V(A_p_V);
    mm_entry616_U0->B_p_V(B_p_V);
    mm_entry616_U0->AB_p_V(AB_p_V);
    mm_entry616_U0->A_p_V_out_din(mm_entry616_U0_A_p_V_out_din);
    mm_entry616_U0->A_p_V_out_full_n(A_p_V_c_full_n);
    mm_entry616_U0->A_p_V_out_write(mm_entry616_U0_A_p_V_out_write);
    mm_entry616_U0->B_p_V_out_din(mm_entry616_U0_B_p_V_out_din);
    mm_entry616_U0->B_p_V_out_full_n(B_p_V_c_full_n);
    mm_entry616_U0->B_p_V_out_write(mm_entry616_U0_B_p_V_out_write);
    mm_entry616_U0->AB_p_V_out_din(mm_entry616_U0_AB_p_V_out_din);
    mm_entry616_U0->AB_p_V_out_full_n(AB_p_V_c_full_n);
    mm_entry616_U0->AB_p_V_out_write(mm_entry616_U0_AB_p_V_out_write);
    readA_U0 = new mm_readA("readA_U0");
    readA_U0->ap_clk(ap_clk);
    readA_U0->ap_rst(ap_rst_n_inv);
    readA_U0->ap_start(readA_U0_ap_start);
    readA_U0->start_full_n(start_for_changeARate_U0_full_n);
    readA_U0->ap_done(readA_U0_ap_done);
    readA_U0->ap_continue(readA_U0_ap_continue);
    readA_U0->ap_idle(readA_U0_ap_idle);
    readA_U0->ap_ready(readA_U0_ap_ready);
    readA_U0->start_out(readA_U0_start_out);
    readA_U0->start_write(readA_U0_start_write);
    readA_U0->m_axi_A_p_V_AWVALID(readA_U0_m_axi_A_p_V_AWVALID);
    readA_U0->m_axi_A_p_V_AWREADY(ap_var_for_const1);
    readA_U0->m_axi_A_p_V_AWADDR(readA_U0_m_axi_A_p_V_AWADDR);
    readA_U0->m_axi_A_p_V_AWID(readA_U0_m_axi_A_p_V_AWID);
    readA_U0->m_axi_A_p_V_AWLEN(readA_U0_m_axi_A_p_V_AWLEN);
    readA_U0->m_axi_A_p_V_AWSIZE(readA_U0_m_axi_A_p_V_AWSIZE);
    readA_U0->m_axi_A_p_V_AWBURST(readA_U0_m_axi_A_p_V_AWBURST);
    readA_U0->m_axi_A_p_V_AWLOCK(readA_U0_m_axi_A_p_V_AWLOCK);
    readA_U0->m_axi_A_p_V_AWCACHE(readA_U0_m_axi_A_p_V_AWCACHE);
    readA_U0->m_axi_A_p_V_AWPROT(readA_U0_m_axi_A_p_V_AWPROT);
    readA_U0->m_axi_A_p_V_AWQOS(readA_U0_m_axi_A_p_V_AWQOS);
    readA_U0->m_axi_A_p_V_AWREGION(readA_U0_m_axi_A_p_V_AWREGION);
    readA_U0->m_axi_A_p_V_AWUSER(readA_U0_m_axi_A_p_V_AWUSER);
    readA_U0->m_axi_A_p_V_WVALID(readA_U0_m_axi_A_p_V_WVALID);
    readA_U0->m_axi_A_p_V_WREADY(ap_var_for_const1);
    readA_U0->m_axi_A_p_V_WDATA(readA_U0_m_axi_A_p_V_WDATA);
    readA_U0->m_axi_A_p_V_WSTRB(readA_U0_m_axi_A_p_V_WSTRB);
    readA_U0->m_axi_A_p_V_WLAST(readA_U0_m_axi_A_p_V_WLAST);
    readA_U0->m_axi_A_p_V_WID(readA_U0_m_axi_A_p_V_WID);
    readA_U0->m_axi_A_p_V_WUSER(readA_U0_m_axi_A_p_V_WUSER);
    readA_U0->m_axi_A_p_V_ARVALID(readA_U0_m_axi_A_p_V_ARVALID);
    readA_U0->m_axi_A_p_V_ARREADY(gmem0_ARREADY);
    readA_U0->m_axi_A_p_V_ARADDR(readA_U0_m_axi_A_p_V_ARADDR);
    readA_U0->m_axi_A_p_V_ARID(readA_U0_m_axi_A_p_V_ARID);
    readA_U0->m_axi_A_p_V_ARLEN(readA_U0_m_axi_A_p_V_ARLEN);
    readA_U0->m_axi_A_p_V_ARSIZE(readA_U0_m_axi_A_p_V_ARSIZE);
    readA_U0->m_axi_A_p_V_ARBURST(readA_U0_m_axi_A_p_V_ARBURST);
    readA_U0->m_axi_A_p_V_ARLOCK(readA_U0_m_axi_A_p_V_ARLOCK);
    readA_U0->m_axi_A_p_V_ARCACHE(readA_U0_m_axi_A_p_V_ARCACHE);
    readA_U0->m_axi_A_p_V_ARPROT(readA_U0_m_axi_A_p_V_ARPROT);
    readA_U0->m_axi_A_p_V_ARQOS(readA_U0_m_axi_A_p_V_ARQOS);
    readA_U0->m_axi_A_p_V_ARREGION(readA_U0_m_axi_A_p_V_ARREGION);
    readA_U0->m_axi_A_p_V_ARUSER(readA_U0_m_axi_A_p_V_ARUSER);
    readA_U0->m_axi_A_p_V_RVALID(gmem0_RVALID);
    readA_U0->m_axi_A_p_V_RREADY(readA_U0_m_axi_A_p_V_RREADY);
    readA_U0->m_axi_A_p_V_RDATA(gmem0_RDATA);
    readA_U0->m_axi_A_p_V_RLAST(gmem0_RLAST);
    readA_U0->m_axi_A_p_V_RID(gmem0_RID);
    readA_U0->m_axi_A_p_V_RUSER(gmem0_RUSER);
    readA_U0->m_axi_A_p_V_RRESP(gmem0_RRESP);
    readA_U0->m_axi_A_p_V_BVALID(ap_var_for_const1);
    readA_U0->m_axi_A_p_V_BREADY(readA_U0_m_axi_A_p_V_BREADY);
    readA_U0->m_axi_A_p_V_BRESP(ap_var_for_const6);
    readA_U0->m_axi_A_p_V_BID(ap_var_for_const3);
    readA_U0->m_axi_A_p_V_BUSER(ap_var_for_const3);
    readA_U0->A_p_V_offset_dout(A_p_V_c_dout);
    readA_U0->A_p_V_offset_empty_n(A_p_V_c_empty_n);
    readA_U0->A_p_V_offset_read(readA_U0_A_p_V_offset_read);
    readA_U0->AStreamWide_V_V_din(readA_U0_AStreamWide_V_V_din);
    readA_U0->AStreamWide_V_V_full_n(AStreamWide_V_V_full_n);
    readA_U0->AStreamWide_V_V_write(readA_U0_AStreamWide_V_V_write);
    readA_U0->N_dout(N_c_dout);
    readA_U0->N_empty_n(N_c_empty_n);
    readA_U0->N_read(readA_U0_N_read);
    readA_U0->N_out_din(readA_U0_N_out_din);
    readA_U0->N_out_full_n(N_c9_full_n);
    readA_U0->N_out_write(readA_U0_N_out_write);
    changeARate_U0 = new mm_changeARate("changeARate_U0");
    changeARate_U0->ap_clk(ap_clk);
    changeARate_U0->ap_rst(ap_rst_n_inv);
    changeARate_U0->ap_start(changeARate_U0_ap_start);
    changeARate_U0->ap_done(changeARate_U0_ap_done);
    changeARate_U0->ap_continue(changeARate_U0_ap_continue);
    changeARate_U0->ap_idle(changeARate_U0_ap_idle);
    changeARate_U0->ap_ready(changeARate_U0_ap_ready);
    changeARate_U0->AStreamWide_V_V_dout(AStreamWide_V_V_dout);
    changeARate_U0->AStreamWide_V_V_empty_n(AStreamWide_V_V_empty_n);
    changeARate_U0->AStreamWide_V_V_read(changeARate_U0_AStreamWide_V_V_read);
    changeARate_U0->AStream_V_din(changeARate_U0_AStream_V_din);
    changeARate_U0->AStream_V_full_n(AStream_V_full_n);
    changeARate_U0->AStream_V_write(changeARate_U0_AStream_V_write);
    changeARate_U0->N_dout(N_c9_dout);
    changeARate_U0->N_empty_n(N_c9_empty_n);
    changeARate_U0->N_read(changeARate_U0_N_read);
    changeARate_U0->N_out_din(changeARate_U0_N_out_din);
    changeARate_U0->N_out_full_n(N_c10_full_n);
    changeARate_U0->N_out_write(changeARate_U0_N_out_write);
    readB_U0 = new mm_readB("readB_U0");
    readB_U0->ap_clk(ap_clk);
    readB_U0->ap_rst(ap_rst_n_inv);
    readB_U0->ap_start(readB_U0_ap_start);
    readB_U0->start_full_n(start_for_comp_U0_full_n);
    readB_U0->ap_done(readB_U0_ap_done);
    readB_U0->ap_continue(readB_U0_ap_continue);
    readB_U0->ap_idle(readB_U0_ap_idle);
    readB_U0->ap_ready(readB_U0_ap_ready);
    readB_U0->start_out(readB_U0_start_out);
    readB_U0->start_write(readB_U0_start_write);
    readB_U0->m_axi_B_p_V_AWVALID(readB_U0_m_axi_B_p_V_AWVALID);
    readB_U0->m_axi_B_p_V_AWREADY(ap_var_for_const1);
    readB_U0->m_axi_B_p_V_AWADDR(readB_U0_m_axi_B_p_V_AWADDR);
    readB_U0->m_axi_B_p_V_AWID(readB_U0_m_axi_B_p_V_AWID);
    readB_U0->m_axi_B_p_V_AWLEN(readB_U0_m_axi_B_p_V_AWLEN);
    readB_U0->m_axi_B_p_V_AWSIZE(readB_U0_m_axi_B_p_V_AWSIZE);
    readB_U0->m_axi_B_p_V_AWBURST(readB_U0_m_axi_B_p_V_AWBURST);
    readB_U0->m_axi_B_p_V_AWLOCK(readB_U0_m_axi_B_p_V_AWLOCK);
    readB_U0->m_axi_B_p_V_AWCACHE(readB_U0_m_axi_B_p_V_AWCACHE);
    readB_U0->m_axi_B_p_V_AWPROT(readB_U0_m_axi_B_p_V_AWPROT);
    readB_U0->m_axi_B_p_V_AWQOS(readB_U0_m_axi_B_p_V_AWQOS);
    readB_U0->m_axi_B_p_V_AWREGION(readB_U0_m_axi_B_p_V_AWREGION);
    readB_U0->m_axi_B_p_V_AWUSER(readB_U0_m_axi_B_p_V_AWUSER);
    readB_U0->m_axi_B_p_V_WVALID(readB_U0_m_axi_B_p_V_WVALID);
    readB_U0->m_axi_B_p_V_WREADY(ap_var_for_const1);
    readB_U0->m_axi_B_p_V_WDATA(readB_U0_m_axi_B_p_V_WDATA);
    readB_U0->m_axi_B_p_V_WSTRB(readB_U0_m_axi_B_p_V_WSTRB);
    readB_U0->m_axi_B_p_V_WLAST(readB_U0_m_axi_B_p_V_WLAST);
    readB_U0->m_axi_B_p_V_WID(readB_U0_m_axi_B_p_V_WID);
    readB_U0->m_axi_B_p_V_WUSER(readB_U0_m_axi_B_p_V_WUSER);
    readB_U0->m_axi_B_p_V_ARVALID(readB_U0_m_axi_B_p_V_ARVALID);
    readB_U0->m_axi_B_p_V_ARREADY(gmem1_ARREADY);
    readB_U0->m_axi_B_p_V_ARADDR(readB_U0_m_axi_B_p_V_ARADDR);
    readB_U0->m_axi_B_p_V_ARID(readB_U0_m_axi_B_p_V_ARID);
    readB_U0->m_axi_B_p_V_ARLEN(readB_U0_m_axi_B_p_V_ARLEN);
    readB_U0->m_axi_B_p_V_ARSIZE(readB_U0_m_axi_B_p_V_ARSIZE);
    readB_U0->m_axi_B_p_V_ARBURST(readB_U0_m_axi_B_p_V_ARBURST);
    readB_U0->m_axi_B_p_V_ARLOCK(readB_U0_m_axi_B_p_V_ARLOCK);
    readB_U0->m_axi_B_p_V_ARCACHE(readB_U0_m_axi_B_p_V_ARCACHE);
    readB_U0->m_axi_B_p_V_ARPROT(readB_U0_m_axi_B_p_V_ARPROT);
    readB_U0->m_axi_B_p_V_ARQOS(readB_U0_m_axi_B_p_V_ARQOS);
    readB_U0->m_axi_B_p_V_ARREGION(readB_U0_m_axi_B_p_V_ARREGION);
    readB_U0->m_axi_B_p_V_ARUSER(readB_U0_m_axi_B_p_V_ARUSER);
    readB_U0->m_axi_B_p_V_RVALID(gmem1_RVALID);
    readB_U0->m_axi_B_p_V_RREADY(readB_U0_m_axi_B_p_V_RREADY);
    readB_U0->m_axi_B_p_V_RDATA(gmem1_RDATA);
    readB_U0->m_axi_B_p_V_RLAST(gmem1_RLAST);
    readB_U0->m_axi_B_p_V_RID(gmem1_RID);
    readB_U0->m_axi_B_p_V_RUSER(gmem1_RUSER);
    readB_U0->m_axi_B_p_V_RRESP(gmem1_RRESP);
    readB_U0->m_axi_B_p_V_BVALID(ap_var_for_const1);
    readB_U0->m_axi_B_p_V_BREADY(readB_U0_m_axi_B_p_V_BREADY);
    readB_U0->m_axi_B_p_V_BRESP(ap_var_for_const6);
    readB_U0->m_axi_B_p_V_BID(ap_var_for_const3);
    readB_U0->m_axi_B_p_V_BUSER(ap_var_for_const3);
    readB_U0->B_p_V_offset_dout(B_p_V_c_dout);
    readB_U0->B_p_V_offset_empty_n(B_p_V_c_empty_n);
    readB_U0->B_p_V_offset_read(readB_U0_B_p_V_offset_read);
    readB_U0->BStream_V_V_din(readB_U0_BStream_V_V_din);
    readB_U0->BStream_V_V_full_n(BStream_V_V_full_n);
    readB_U0->BStream_V_V_write(readB_U0_BStream_V_V_write);
    readB_U0->N_dout(N_c8_dout);
    readB_U0->N_empty_n(N_c8_empty_n);
    readB_U0->N_read(readB_U0_N_read);
    comp_U0 = new mm_comp("comp_U0");
    comp_U0->ap_clk(ap_clk);
    comp_U0->ap_rst(ap_rst_n_inv);
    comp_U0->ap_start(comp_U0_ap_start);
    comp_U0->ap_done(comp_U0_ap_done);
    comp_U0->ap_continue(comp_U0_ap_continue);
    comp_U0->ap_idle(comp_U0_ap_idle);
    comp_U0->ap_ready(comp_U0_ap_ready);
    comp_U0->AStream_V_dout(AStream_V_dout);
    comp_U0->AStream_V_empty_n(AStream_V_empty_n);
    comp_U0->AStream_V_read(comp_U0_AStream_V_read);
    comp_U0->BStream_V_V_dout(BStream_V_V_dout);
    comp_U0->BStream_V_V_empty_n(BStream_V_V_empty_n);
    comp_U0->BStream_V_V_read(comp_U0_BStream_V_V_read);
    comp_U0->ABStream_V_V_din(comp_U0_ABStream_V_V_din);
    comp_U0->ABStream_V_V_full_n(ABStream_V_V_full_n);
    comp_U0->ABStream_V_V_write(comp_U0_ABStream_V_V_write);
    comp_U0->N_dout(N_c10_dout);
    comp_U0->N_empty_n(N_c10_empty_n);
    comp_U0->N_read(comp_U0_N_read);
    comp_U0->N_out_din(comp_U0_N_out_din);
    comp_U0->N_out_full_n(N_c11_full_n);
    comp_U0->N_out_write(comp_U0_N_out_write);
    writeAB_U0 = new mm_writeAB("writeAB_U0");
    writeAB_U0->ap_clk(ap_clk);
    writeAB_U0->ap_rst(ap_rst_n_inv);
    writeAB_U0->ap_start(writeAB_U0_ap_start);
    writeAB_U0->ap_done(writeAB_U0_ap_done);
    writeAB_U0->ap_continue(writeAB_U0_ap_continue);
    writeAB_U0->ap_idle(writeAB_U0_ap_idle);
    writeAB_U0->ap_ready(writeAB_U0_ap_ready);
    writeAB_U0->ABStream_V_V_dout(ABStream_V_V_dout);
    writeAB_U0->ABStream_V_V_empty_n(ABStream_V_V_empty_n);
    writeAB_U0->ABStream_V_V_read(writeAB_U0_ABStream_V_V_read);
    writeAB_U0->m_axi_AB_V_AWVALID(writeAB_U0_m_axi_AB_V_AWVALID);
    writeAB_U0->m_axi_AB_V_AWREADY(gmem2_AWREADY);
    writeAB_U0->m_axi_AB_V_AWADDR(writeAB_U0_m_axi_AB_V_AWADDR);
    writeAB_U0->m_axi_AB_V_AWID(writeAB_U0_m_axi_AB_V_AWID);
    writeAB_U0->m_axi_AB_V_AWLEN(writeAB_U0_m_axi_AB_V_AWLEN);
    writeAB_U0->m_axi_AB_V_AWSIZE(writeAB_U0_m_axi_AB_V_AWSIZE);
    writeAB_U0->m_axi_AB_V_AWBURST(writeAB_U0_m_axi_AB_V_AWBURST);
    writeAB_U0->m_axi_AB_V_AWLOCK(writeAB_U0_m_axi_AB_V_AWLOCK);
    writeAB_U0->m_axi_AB_V_AWCACHE(writeAB_U0_m_axi_AB_V_AWCACHE);
    writeAB_U0->m_axi_AB_V_AWPROT(writeAB_U0_m_axi_AB_V_AWPROT);
    writeAB_U0->m_axi_AB_V_AWQOS(writeAB_U0_m_axi_AB_V_AWQOS);
    writeAB_U0->m_axi_AB_V_AWREGION(writeAB_U0_m_axi_AB_V_AWREGION);
    writeAB_U0->m_axi_AB_V_AWUSER(writeAB_U0_m_axi_AB_V_AWUSER);
    writeAB_U0->m_axi_AB_V_WVALID(writeAB_U0_m_axi_AB_V_WVALID);
    writeAB_U0->m_axi_AB_V_WREADY(gmem2_WREADY);
    writeAB_U0->m_axi_AB_V_WDATA(writeAB_U0_m_axi_AB_V_WDATA);
    writeAB_U0->m_axi_AB_V_WSTRB(writeAB_U0_m_axi_AB_V_WSTRB);
    writeAB_U0->m_axi_AB_V_WLAST(writeAB_U0_m_axi_AB_V_WLAST);
    writeAB_U0->m_axi_AB_V_WID(writeAB_U0_m_axi_AB_V_WID);
    writeAB_U0->m_axi_AB_V_WUSER(writeAB_U0_m_axi_AB_V_WUSER);
    writeAB_U0->m_axi_AB_V_ARVALID(writeAB_U0_m_axi_AB_V_ARVALID);
    writeAB_U0->m_axi_AB_V_ARREADY(ap_var_for_const1);
    writeAB_U0->m_axi_AB_V_ARADDR(writeAB_U0_m_axi_AB_V_ARADDR);
    writeAB_U0->m_axi_AB_V_ARID(writeAB_U0_m_axi_AB_V_ARID);
    writeAB_U0->m_axi_AB_V_ARLEN(writeAB_U0_m_axi_AB_V_ARLEN);
    writeAB_U0->m_axi_AB_V_ARSIZE(writeAB_U0_m_axi_AB_V_ARSIZE);
    writeAB_U0->m_axi_AB_V_ARBURST(writeAB_U0_m_axi_AB_V_ARBURST);
    writeAB_U0->m_axi_AB_V_ARLOCK(writeAB_U0_m_axi_AB_V_ARLOCK);
    writeAB_U0->m_axi_AB_V_ARCACHE(writeAB_U0_m_axi_AB_V_ARCACHE);
    writeAB_U0->m_axi_AB_V_ARPROT(writeAB_U0_m_axi_AB_V_ARPROT);
    writeAB_U0->m_axi_AB_V_ARQOS(writeAB_U0_m_axi_AB_V_ARQOS);
    writeAB_U0->m_axi_AB_V_ARREGION(writeAB_U0_m_axi_AB_V_ARREGION);
    writeAB_U0->m_axi_AB_V_ARUSER(writeAB_U0_m_axi_AB_V_ARUSER);
    writeAB_U0->m_axi_AB_V_RVALID(ap_var_for_const1);
    writeAB_U0->m_axi_AB_V_RREADY(writeAB_U0_m_axi_AB_V_RREADY);
    writeAB_U0->m_axi_AB_V_RDATA(ap_var_for_const8);
    writeAB_U0->m_axi_AB_V_RLAST(ap_var_for_const1);
    writeAB_U0->m_axi_AB_V_RID(ap_var_for_const3);
    writeAB_U0->m_axi_AB_V_RUSER(ap_var_for_const3);
    writeAB_U0->m_axi_AB_V_RRESP(ap_var_for_const6);
    writeAB_U0->m_axi_AB_V_BVALID(gmem2_BVALID);
    writeAB_U0->m_axi_AB_V_BREADY(writeAB_U0_m_axi_AB_V_BREADY);
    writeAB_U0->m_axi_AB_V_BRESP(gmem2_BRESP);
    writeAB_U0->m_axi_AB_V_BID(gmem2_BID);
    writeAB_U0->m_axi_AB_V_BUSER(gmem2_BUSER);
    writeAB_U0->AB_V_offset_dout(AB_p_V_c_dout);
    writeAB_U0->AB_V_offset_empty_n(AB_p_V_c_empty_n);
    writeAB_U0->AB_V_offset_read(writeAB_U0_AB_V_offset_read);
    writeAB_U0->N_dout(N_c11_dout);
    writeAB_U0->N_empty_n(N_c11_empty_n);
    writeAB_U0->N_read(writeAB_U0_N_read);
    N_c_U = new mm_fifo_w32_d2_A("N_c_U");
    N_c_U->clk(ap_clk);
    N_c_U->reset(ap_rst_n_inv);
    N_c_U->if_read_ce(ap_var_for_const0);
    N_c_U->if_write_ce(ap_var_for_const0);
    N_c_U->if_din(mm_entry616_U0_N_out_din);
    N_c_U->if_full_n(N_c_full_n);
    N_c_U->if_write(mm_entry616_U0_N_out_write);
    N_c_U->if_dout(N_c_dout);
    N_c_U->if_empty_n(N_c_empty_n);
    N_c_U->if_read(readA_U0_N_read);
    N_c8_U = new mm_fifo_w32_d2_A("N_c8_U");
    N_c8_U->clk(ap_clk);
    N_c8_U->reset(ap_rst_n_inv);
    N_c8_U->if_read_ce(ap_var_for_const0);
    N_c8_U->if_write_ce(ap_var_for_const0);
    N_c8_U->if_din(mm_entry616_U0_N_out1_din);
    N_c8_U->if_full_n(N_c8_full_n);
    N_c8_U->if_write(mm_entry616_U0_N_out1_write);
    N_c8_U->if_dout(N_c8_dout);
    N_c8_U->if_empty_n(N_c8_empty_n);
    N_c8_U->if_read(readB_U0_N_read);
    A_p_V_c_U = new mm_fifo_w64_d2_A("A_p_V_c_U");
    A_p_V_c_U->clk(ap_clk);
    A_p_V_c_U->reset(ap_rst_n_inv);
    A_p_V_c_U->if_read_ce(ap_var_for_const0);
    A_p_V_c_U->if_write_ce(ap_var_for_const0);
    A_p_V_c_U->if_din(mm_entry616_U0_A_p_V_out_din);
    A_p_V_c_U->if_full_n(A_p_V_c_full_n);
    A_p_V_c_U->if_write(mm_entry616_U0_A_p_V_out_write);
    A_p_V_c_U->if_dout(A_p_V_c_dout);
    A_p_V_c_U->if_empty_n(A_p_V_c_empty_n);
    A_p_V_c_U->if_read(readA_U0_A_p_V_offset_read);
    B_p_V_c_U = new mm_fifo_w64_d2_A("B_p_V_c_U");
    B_p_V_c_U->clk(ap_clk);
    B_p_V_c_U->reset(ap_rst_n_inv);
    B_p_V_c_U->if_read_ce(ap_var_for_const0);
    B_p_V_c_U->if_write_ce(ap_var_for_const0);
    B_p_V_c_U->if_din(mm_entry616_U0_B_p_V_out_din);
    B_p_V_c_U->if_full_n(B_p_V_c_full_n);
    B_p_V_c_U->if_write(mm_entry616_U0_B_p_V_out_write);
    B_p_V_c_U->if_dout(B_p_V_c_dout);
    B_p_V_c_U->if_empty_n(B_p_V_c_empty_n);
    B_p_V_c_U->if_read(readB_U0_B_p_V_offset_read);
    AB_p_V_c_U = new mm_fifo_w64_d5_A("AB_p_V_c_U");
    AB_p_V_c_U->clk(ap_clk);
    AB_p_V_c_U->reset(ap_rst_n_inv);
    AB_p_V_c_U->if_read_ce(ap_var_for_const0);
    AB_p_V_c_U->if_write_ce(ap_var_for_const0);
    AB_p_V_c_U->if_din(mm_entry616_U0_AB_p_V_out_din);
    AB_p_V_c_U->if_full_n(AB_p_V_c_full_n);
    AB_p_V_c_U->if_write(mm_entry616_U0_AB_p_V_out_write);
    AB_p_V_c_U->if_dout(AB_p_V_c_dout);
    AB_p_V_c_U->if_empty_n(AB_p_V_c_empty_n);
    AB_p_V_c_U->if_read(writeAB_U0_AB_V_offset_read);
    AStreamWide_V_V_U = new mm_fifo_w512_d2_A("AStreamWide_V_V_U");
    AStreamWide_V_V_U->clk(ap_clk);
    AStreamWide_V_V_U->reset(ap_rst_n_inv);
    AStreamWide_V_V_U->if_read_ce(ap_var_for_const0);
    AStreamWide_V_V_U->if_write_ce(ap_var_for_const0);
    AStreamWide_V_V_U->if_din(readA_U0_AStreamWide_V_V_din);
    AStreamWide_V_V_U->if_full_n(AStreamWide_V_V_full_n);
    AStreamWide_V_V_U->if_write(readA_U0_AStreamWide_V_V_write);
    AStreamWide_V_V_U->if_dout(AStreamWide_V_V_dout);
    AStreamWide_V_V_U->if_empty_n(AStreamWide_V_V_empty_n);
    AStreamWide_V_V_U->if_read(changeARate_U0_AStreamWide_V_V_read);
    N_c9_U = new mm_fifo_w32_d2_A("N_c9_U");
    N_c9_U->clk(ap_clk);
    N_c9_U->reset(ap_rst_n_inv);
    N_c9_U->if_read_ce(ap_var_for_const0);
    N_c9_U->if_write_ce(ap_var_for_const0);
    N_c9_U->if_din(readA_U0_N_out_din);
    N_c9_U->if_full_n(N_c9_full_n);
    N_c9_U->if_write(readA_U0_N_out_write);
    N_c9_U->if_dout(N_c9_dout);
    N_c9_U->if_empty_n(N_c9_empty_n);
    N_c9_U->if_read(changeARate_U0_N_read);
    AStream_V_U = new mm_fifo_w16_d2_A("AStream_V_U");
    AStream_V_U->clk(ap_clk);
    AStream_V_U->reset(ap_rst_n_inv);
    AStream_V_U->if_read_ce(ap_var_for_const0);
    AStream_V_U->if_write_ce(ap_var_for_const0);
    AStream_V_U->if_din(changeARate_U0_AStream_V_din);
    AStream_V_U->if_full_n(AStream_V_full_n);
    AStream_V_U->if_write(changeARate_U0_AStream_V_write);
    AStream_V_U->if_dout(AStream_V_dout);
    AStream_V_U->if_empty_n(AStream_V_empty_n);
    AStream_V_U->if_read(comp_U0_AStream_V_read);
    N_c10_U = new mm_fifo_w32_d2_A("N_c10_U");
    N_c10_U->clk(ap_clk);
    N_c10_U->reset(ap_rst_n_inv);
    N_c10_U->if_read_ce(ap_var_for_const0);
    N_c10_U->if_write_ce(ap_var_for_const0);
    N_c10_U->if_din(changeARate_U0_N_out_din);
    N_c10_U->if_full_n(N_c10_full_n);
    N_c10_U->if_write(changeARate_U0_N_out_write);
    N_c10_U->if_dout(N_c10_dout);
    N_c10_U->if_empty_n(N_c10_empty_n);
    N_c10_U->if_read(comp_U0_N_read);
    BStream_V_V_U = new mm_fifo_w512_d2_A("BStream_V_V_U");
    BStream_V_V_U->clk(ap_clk);
    BStream_V_V_U->reset(ap_rst_n_inv);
    BStream_V_V_U->if_read_ce(ap_var_for_const0);
    BStream_V_V_U->if_write_ce(ap_var_for_const0);
    BStream_V_V_U->if_din(readB_U0_BStream_V_V_din);
    BStream_V_V_U->if_full_n(BStream_V_V_full_n);
    BStream_V_V_U->if_write(readB_U0_BStream_V_V_write);
    BStream_V_V_U->if_dout(BStream_V_V_dout);
    BStream_V_V_U->if_empty_n(BStream_V_V_empty_n);
    BStream_V_V_U->if_read(comp_U0_BStream_V_V_read);
    ABStream_V_V_U = new mm_fifo_w512_d2_A("ABStream_V_V_U");
    ABStream_V_V_U->clk(ap_clk);
    ABStream_V_V_U->reset(ap_rst_n_inv);
    ABStream_V_V_U->if_read_ce(ap_var_for_const0);
    ABStream_V_V_U->if_write_ce(ap_var_for_const0);
    ABStream_V_V_U->if_din(comp_U0_ABStream_V_V_din);
    ABStream_V_V_U->if_full_n(ABStream_V_V_full_n);
    ABStream_V_V_U->if_write(comp_U0_ABStream_V_V_write);
    ABStream_V_V_U->if_dout(ABStream_V_V_dout);
    ABStream_V_V_U->if_empty_n(ABStream_V_V_empty_n);
    ABStream_V_V_U->if_read(writeAB_U0_ABStream_V_V_read);
    N_c11_U = new mm_fifo_w32_d2_A("N_c11_U");
    N_c11_U->clk(ap_clk);
    N_c11_U->reset(ap_rst_n_inv);
    N_c11_U->if_read_ce(ap_var_for_const0);
    N_c11_U->if_write_ce(ap_var_for_const0);
    N_c11_U->if_din(comp_U0_N_out_din);
    N_c11_U->if_full_n(N_c11_full_n);
    N_c11_U->if_write(comp_U0_N_out_write);
    N_c11_U->if_dout(N_c11_dout);
    N_c11_U->if_empty_n(N_c11_empty_n);
    N_c11_U->if_read(writeAB_U0_N_read);
    start_for_writeAB_U0_U = new mm_start_for_writeAB_U0("start_for_writeAB_U0_U");
    start_for_writeAB_U0_U->clk(ap_clk);
    start_for_writeAB_U0_U->reset(ap_rst_n_inv);
    start_for_writeAB_U0_U->if_read_ce(ap_var_for_const0);
    start_for_writeAB_U0_U->if_write_ce(ap_var_for_const0);
    start_for_writeAB_U0_U->if_din(start_for_writeAB_U0_din);
    start_for_writeAB_U0_U->if_full_n(start_for_writeAB_U0_full_n);
    start_for_writeAB_U0_U->if_write(mm_entry616_U0_start_write);
    start_for_writeAB_U0_U->if_dout(start_for_writeAB_U0_dout);
    start_for_writeAB_U0_U->if_empty_n(start_for_writeAB_U0_empty_n);
    start_for_writeAB_U0_U->if_read(writeAB_U0_ap_ready);
    start_for_changeARate_U0_U = new mm_start_for_changeARate_U0("start_for_changeARate_U0_U");
    start_for_changeARate_U0_U->clk(ap_clk);
    start_for_changeARate_U0_U->reset(ap_rst_n_inv);
    start_for_changeARate_U0_U->if_read_ce(ap_var_for_const0);
    start_for_changeARate_U0_U->if_write_ce(ap_var_for_const0);
    start_for_changeARate_U0_U->if_din(start_for_changeARate_U0_din);
    start_for_changeARate_U0_U->if_full_n(start_for_changeARate_U0_full_n);
    start_for_changeARate_U0_U->if_write(readA_U0_start_write);
    start_for_changeARate_U0_U->if_dout(start_for_changeARate_U0_dout);
    start_for_changeARate_U0_U->if_empty_n(start_for_changeARate_U0_empty_n);
    start_for_changeARate_U0_U->if_read(changeARate_U0_ap_ready);
    start_for_comp_U0_U = new mm_start_for_comp_U0("start_for_comp_U0_U");
    start_for_comp_U0_U->clk(ap_clk);
    start_for_comp_U0_U->reset(ap_rst_n_inv);
    start_for_comp_U0_U->if_read_ce(ap_var_for_const0);
    start_for_comp_U0_U->if_write_ce(ap_var_for_const0);
    start_for_comp_U0_U->if_din(start_for_comp_U0_din);
    start_for_comp_U0_U->if_full_n(start_for_comp_U0_full_n);
    start_for_comp_U0_U->if_write(readB_U0_start_write);
    start_for_comp_U0_U->if_dout(start_for_comp_U0_dout);
    start_for_comp_U0_U->if_empty_n(start_for_comp_U0_empty_n);
    start_for_comp_U0_U->if_read(comp_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( writeAB_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( mm_entry616_U0_ap_idle );
    sensitive << ( readA_U0_ap_idle );
    sensitive << ( changeARate_U0_ap_idle );
    sensitive << ( readB_U0_ap_idle );
    sensitive << ( comp_U0_ap_idle );
    sensitive << ( writeAB_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( writeAB_U0_ap_done );

    SC_METHOD(thread_ap_sync_mm_entry616_U0_ap_ready);
    sensitive << ( mm_entry616_U0_ap_ready );
    sensitive << ( ap_sync_reg_mm_entry616_U0_ap_ready );

    SC_METHOD(thread_ap_sync_readA_U0_ap_ready);
    sensitive << ( readA_U0_ap_ready );
    sensitive << ( ap_sync_reg_readA_U0_ap_ready );

    SC_METHOD(thread_ap_sync_readB_U0_ap_ready);
    sensitive << ( readB_U0_ap_ready );
    sensitive << ( ap_sync_reg_readB_U0_ap_ready );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_mm_entry616_U0_ap_ready );
    sensitive << ( ap_sync_readA_U0_ap_ready );
    sensitive << ( ap_sync_readB_U0_ap_ready );

    SC_METHOD(thread_changeARate_U0_ap_continue);

    SC_METHOD(thread_changeARate_U0_ap_start);
    sensitive << ( start_for_changeARate_U0_empty_n );

    SC_METHOD(thread_changeARate_U0_start_full_n);

    SC_METHOD(thread_changeARate_U0_start_write);

    SC_METHOD(thread_comp_U0_ap_continue);

    SC_METHOD(thread_comp_U0_ap_start);
    sensitive << ( start_for_comp_U0_empty_n );

    SC_METHOD(thread_comp_U0_start_full_n);

    SC_METHOD(thread_comp_U0_start_write);

    SC_METHOD(thread_mm_entry616_U0_ap_continue);

    SC_METHOD(thread_mm_entry616_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_mm_entry616_U0_ap_ready );

    SC_METHOD(thread_readA_U0_ap_continue);

    SC_METHOD(thread_readA_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_readA_U0_ap_ready );

    SC_METHOD(thread_readB_U0_ap_continue);

    SC_METHOD(thread_readB_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_readB_U0_ap_ready );

    SC_METHOD(thread_start_for_changeARate_U0_din);

    SC_METHOD(thread_start_for_comp_U0_din);

    SC_METHOD(thread_start_for_writeAB_U0_din);

    SC_METHOD(thread_writeAB_U0_ap_continue);

    SC_METHOD(thread_writeAB_U0_ap_start);
    sensitive << ( start_for_writeAB_U0_empty_n );

    SC_METHOD(thread_writeAB_U0_start_full_n);

    SC_METHOD(thread_writeAB_U0_start_write);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    ap_rst_reg_2 = SC_LOGIC_1;
    ap_rst_reg_1 = SC_LOGIC_1;
    ap_rst_n_inv = SC_LOGIC_1;
    ap_sync_reg_mm_entry616_U0_ap_ready = SC_LOGIC_0;
    mm_entry616_U0_ap_ready_count = "00";
    ap_sync_reg_readA_U0_ap_ready = SC_LOGIC_0;
    readA_U0_ap_ready_count = "00";
    ap_sync_reg_readB_U0_ap_ready = SC_LOGIC_0;
    readB_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mm_mm_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, m_axi_gmem0_AWVALID, "(port)m_axi_gmem0_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem0_AWREADY, "(port)m_axi_gmem0_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem0_AWADDR, "(port)m_axi_gmem0_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem0_AWID, "(port)m_axi_gmem0_AWID");
    sc_trace(mVcdFile, m_axi_gmem0_AWLEN, "(port)m_axi_gmem0_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem0_AWSIZE, "(port)m_axi_gmem0_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem0_AWBURST, "(port)m_axi_gmem0_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem0_AWLOCK, "(port)m_axi_gmem0_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem0_AWCACHE, "(port)m_axi_gmem0_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem0_AWPROT, "(port)m_axi_gmem0_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem0_AWQOS, "(port)m_axi_gmem0_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem0_AWREGION, "(port)m_axi_gmem0_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem0_AWUSER, "(port)m_axi_gmem0_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem0_WVALID, "(port)m_axi_gmem0_WVALID");
    sc_trace(mVcdFile, m_axi_gmem0_WREADY, "(port)m_axi_gmem0_WREADY");
    sc_trace(mVcdFile, m_axi_gmem0_WDATA, "(port)m_axi_gmem0_WDATA");
    sc_trace(mVcdFile, m_axi_gmem0_WSTRB, "(port)m_axi_gmem0_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem0_WLAST, "(port)m_axi_gmem0_WLAST");
    sc_trace(mVcdFile, m_axi_gmem0_WID, "(port)m_axi_gmem0_WID");
    sc_trace(mVcdFile, m_axi_gmem0_WUSER, "(port)m_axi_gmem0_WUSER");
    sc_trace(mVcdFile, m_axi_gmem0_ARVALID, "(port)m_axi_gmem0_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem0_ARREADY, "(port)m_axi_gmem0_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem0_ARADDR, "(port)m_axi_gmem0_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem0_ARID, "(port)m_axi_gmem0_ARID");
    sc_trace(mVcdFile, m_axi_gmem0_ARLEN, "(port)m_axi_gmem0_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem0_ARSIZE, "(port)m_axi_gmem0_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem0_ARBURST, "(port)m_axi_gmem0_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem0_ARLOCK, "(port)m_axi_gmem0_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem0_ARCACHE, "(port)m_axi_gmem0_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem0_ARPROT, "(port)m_axi_gmem0_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem0_ARQOS, "(port)m_axi_gmem0_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem0_ARREGION, "(port)m_axi_gmem0_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem0_ARUSER, "(port)m_axi_gmem0_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem0_RVALID, "(port)m_axi_gmem0_RVALID");
    sc_trace(mVcdFile, m_axi_gmem0_RREADY, "(port)m_axi_gmem0_RREADY");
    sc_trace(mVcdFile, m_axi_gmem0_RDATA, "(port)m_axi_gmem0_RDATA");
    sc_trace(mVcdFile, m_axi_gmem0_RLAST, "(port)m_axi_gmem0_RLAST");
    sc_trace(mVcdFile, m_axi_gmem0_RID, "(port)m_axi_gmem0_RID");
    sc_trace(mVcdFile, m_axi_gmem0_RUSER, "(port)m_axi_gmem0_RUSER");
    sc_trace(mVcdFile, m_axi_gmem0_RRESP, "(port)m_axi_gmem0_RRESP");
    sc_trace(mVcdFile, m_axi_gmem0_BVALID, "(port)m_axi_gmem0_BVALID");
    sc_trace(mVcdFile, m_axi_gmem0_BREADY, "(port)m_axi_gmem0_BREADY");
    sc_trace(mVcdFile, m_axi_gmem0_BRESP, "(port)m_axi_gmem0_BRESP");
    sc_trace(mVcdFile, m_axi_gmem0_BID, "(port)m_axi_gmem0_BID");
    sc_trace(mVcdFile, m_axi_gmem0_BUSER, "(port)m_axi_gmem0_BUSER");
    sc_trace(mVcdFile, m_axi_gmem1_AWVALID, "(port)m_axi_gmem1_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem1_AWREADY, "(port)m_axi_gmem1_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem1_AWADDR, "(port)m_axi_gmem1_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem1_AWID, "(port)m_axi_gmem1_AWID");
    sc_trace(mVcdFile, m_axi_gmem1_AWLEN, "(port)m_axi_gmem1_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem1_AWSIZE, "(port)m_axi_gmem1_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_AWBURST, "(port)m_axi_gmem1_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem1_AWLOCK, "(port)m_axi_gmem1_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_AWCACHE, "(port)m_axi_gmem1_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_AWPROT, "(port)m_axi_gmem1_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem1_AWQOS, "(port)m_axi_gmem1_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem1_AWREGION, "(port)m_axi_gmem1_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem1_AWUSER, "(port)m_axi_gmem1_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem1_WVALID, "(port)m_axi_gmem1_WVALID");
    sc_trace(mVcdFile, m_axi_gmem1_WREADY, "(port)m_axi_gmem1_WREADY");
    sc_trace(mVcdFile, m_axi_gmem1_WDATA, "(port)m_axi_gmem1_WDATA");
    sc_trace(mVcdFile, m_axi_gmem1_WSTRB, "(port)m_axi_gmem1_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem1_WLAST, "(port)m_axi_gmem1_WLAST");
    sc_trace(mVcdFile, m_axi_gmem1_WID, "(port)m_axi_gmem1_WID");
    sc_trace(mVcdFile, m_axi_gmem1_WUSER, "(port)m_axi_gmem1_WUSER");
    sc_trace(mVcdFile, m_axi_gmem1_ARVALID, "(port)m_axi_gmem1_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem1_ARREADY, "(port)m_axi_gmem1_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem1_ARADDR, "(port)m_axi_gmem1_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem1_ARID, "(port)m_axi_gmem1_ARID");
    sc_trace(mVcdFile, m_axi_gmem1_ARLEN, "(port)m_axi_gmem1_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem1_ARSIZE, "(port)m_axi_gmem1_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_ARBURST, "(port)m_axi_gmem1_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem1_ARLOCK, "(port)m_axi_gmem1_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_ARCACHE, "(port)m_axi_gmem1_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_ARPROT, "(port)m_axi_gmem1_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem1_ARQOS, "(port)m_axi_gmem1_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem1_ARREGION, "(port)m_axi_gmem1_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem1_ARUSER, "(port)m_axi_gmem1_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RVALID, "(port)m_axi_gmem1_RVALID");
    sc_trace(mVcdFile, m_axi_gmem1_RREADY, "(port)m_axi_gmem1_RREADY");
    sc_trace(mVcdFile, m_axi_gmem1_RDATA, "(port)m_axi_gmem1_RDATA");
    sc_trace(mVcdFile, m_axi_gmem1_RLAST, "(port)m_axi_gmem1_RLAST");
    sc_trace(mVcdFile, m_axi_gmem1_RID, "(port)m_axi_gmem1_RID");
    sc_trace(mVcdFile, m_axi_gmem1_RUSER, "(port)m_axi_gmem1_RUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RRESP, "(port)m_axi_gmem1_RRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BVALID, "(port)m_axi_gmem1_BVALID");
    sc_trace(mVcdFile, m_axi_gmem1_BREADY, "(port)m_axi_gmem1_BREADY");
    sc_trace(mVcdFile, m_axi_gmem1_BRESP, "(port)m_axi_gmem1_BRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BID, "(port)m_axi_gmem1_BID");
    sc_trace(mVcdFile, m_axi_gmem1_BUSER, "(port)m_axi_gmem1_BUSER");
    sc_trace(mVcdFile, m_axi_gmem2_AWVALID, "(port)m_axi_gmem2_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem2_AWREADY, "(port)m_axi_gmem2_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem2_AWADDR, "(port)m_axi_gmem2_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem2_AWID, "(port)m_axi_gmem2_AWID");
    sc_trace(mVcdFile, m_axi_gmem2_AWLEN, "(port)m_axi_gmem2_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem2_AWSIZE, "(port)m_axi_gmem2_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem2_AWBURST, "(port)m_axi_gmem2_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem2_AWLOCK, "(port)m_axi_gmem2_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem2_AWCACHE, "(port)m_axi_gmem2_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem2_AWPROT, "(port)m_axi_gmem2_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem2_AWQOS, "(port)m_axi_gmem2_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem2_AWREGION, "(port)m_axi_gmem2_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem2_AWUSER, "(port)m_axi_gmem2_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem2_WVALID, "(port)m_axi_gmem2_WVALID");
    sc_trace(mVcdFile, m_axi_gmem2_WREADY, "(port)m_axi_gmem2_WREADY");
    sc_trace(mVcdFile, m_axi_gmem2_WDATA, "(port)m_axi_gmem2_WDATA");
    sc_trace(mVcdFile, m_axi_gmem2_WSTRB, "(port)m_axi_gmem2_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem2_WLAST, "(port)m_axi_gmem2_WLAST");
    sc_trace(mVcdFile, m_axi_gmem2_WID, "(port)m_axi_gmem2_WID");
    sc_trace(mVcdFile, m_axi_gmem2_WUSER, "(port)m_axi_gmem2_WUSER");
    sc_trace(mVcdFile, m_axi_gmem2_ARVALID, "(port)m_axi_gmem2_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem2_ARREADY, "(port)m_axi_gmem2_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem2_ARADDR, "(port)m_axi_gmem2_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem2_ARID, "(port)m_axi_gmem2_ARID");
    sc_trace(mVcdFile, m_axi_gmem2_ARLEN, "(port)m_axi_gmem2_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem2_ARSIZE, "(port)m_axi_gmem2_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem2_ARBURST, "(port)m_axi_gmem2_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem2_ARLOCK, "(port)m_axi_gmem2_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem2_ARCACHE, "(port)m_axi_gmem2_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem2_ARPROT, "(port)m_axi_gmem2_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem2_ARQOS, "(port)m_axi_gmem2_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem2_ARREGION, "(port)m_axi_gmem2_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem2_ARUSER, "(port)m_axi_gmem2_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem2_RVALID, "(port)m_axi_gmem2_RVALID");
    sc_trace(mVcdFile, m_axi_gmem2_RREADY, "(port)m_axi_gmem2_RREADY");
    sc_trace(mVcdFile, m_axi_gmem2_RDATA, "(port)m_axi_gmem2_RDATA");
    sc_trace(mVcdFile, m_axi_gmem2_RLAST, "(port)m_axi_gmem2_RLAST");
    sc_trace(mVcdFile, m_axi_gmem2_RID, "(port)m_axi_gmem2_RID");
    sc_trace(mVcdFile, m_axi_gmem2_RUSER, "(port)m_axi_gmem2_RUSER");
    sc_trace(mVcdFile, m_axi_gmem2_RRESP, "(port)m_axi_gmem2_RRESP");
    sc_trace(mVcdFile, m_axi_gmem2_BVALID, "(port)m_axi_gmem2_BVALID");
    sc_trace(mVcdFile, m_axi_gmem2_BREADY, "(port)m_axi_gmem2_BREADY");
    sc_trace(mVcdFile, m_axi_gmem2_BRESP, "(port)m_axi_gmem2_BRESP");
    sc_trace(mVcdFile, m_axi_gmem2_BID, "(port)m_axi_gmem2_BID");
    sc_trace(mVcdFile, m_axi_gmem2_BUSER, "(port)m_axi_gmem2_BUSER");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_reg_2, "ap_rst_reg_2");
    sc_trace(mVcdFile, ap_rst_reg_1, "ap_rst_reg_1");
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, A_p_V, "A_p_V");
    sc_trace(mVcdFile, B_p_V, "B_p_V");
    sc_trace(mVcdFile, AB_p_V, "AB_p_V");
    sc_trace(mVcdFile, N, "N");
    sc_trace(mVcdFile, gmem0_AWREADY, "gmem0_AWREADY");
    sc_trace(mVcdFile, gmem0_WREADY, "gmem0_WREADY");
    sc_trace(mVcdFile, gmem0_ARREADY, "gmem0_ARREADY");
    sc_trace(mVcdFile, gmem0_RVALID, "gmem0_RVALID");
    sc_trace(mVcdFile, gmem0_RDATA, "gmem0_RDATA");
    sc_trace(mVcdFile, gmem0_RLAST, "gmem0_RLAST");
    sc_trace(mVcdFile, gmem0_RID, "gmem0_RID");
    sc_trace(mVcdFile, gmem0_RUSER, "gmem0_RUSER");
    sc_trace(mVcdFile, gmem0_RRESP, "gmem0_RRESP");
    sc_trace(mVcdFile, gmem0_BVALID, "gmem0_BVALID");
    sc_trace(mVcdFile, gmem0_BRESP, "gmem0_BRESP");
    sc_trace(mVcdFile, gmem0_BID, "gmem0_BID");
    sc_trace(mVcdFile, gmem0_BUSER, "gmem0_BUSER");
    sc_trace(mVcdFile, gmem1_AWREADY, "gmem1_AWREADY");
    sc_trace(mVcdFile, gmem1_WREADY, "gmem1_WREADY");
    sc_trace(mVcdFile, gmem1_ARREADY, "gmem1_ARREADY");
    sc_trace(mVcdFile, gmem1_RVALID, "gmem1_RVALID");
    sc_trace(mVcdFile, gmem1_RDATA, "gmem1_RDATA");
    sc_trace(mVcdFile, gmem1_RLAST, "gmem1_RLAST");
    sc_trace(mVcdFile, gmem1_RID, "gmem1_RID");
    sc_trace(mVcdFile, gmem1_RUSER, "gmem1_RUSER");
    sc_trace(mVcdFile, gmem1_RRESP, "gmem1_RRESP");
    sc_trace(mVcdFile, gmem1_BVALID, "gmem1_BVALID");
    sc_trace(mVcdFile, gmem1_BRESP, "gmem1_BRESP");
    sc_trace(mVcdFile, gmem1_BID, "gmem1_BID");
    sc_trace(mVcdFile, gmem1_BUSER, "gmem1_BUSER");
    sc_trace(mVcdFile, gmem2_AWREADY, "gmem2_AWREADY");
    sc_trace(mVcdFile, gmem2_WREADY, "gmem2_WREADY");
    sc_trace(mVcdFile, gmem2_ARREADY, "gmem2_ARREADY");
    sc_trace(mVcdFile, gmem2_RVALID, "gmem2_RVALID");
    sc_trace(mVcdFile, gmem2_RDATA, "gmem2_RDATA");
    sc_trace(mVcdFile, gmem2_RLAST, "gmem2_RLAST");
    sc_trace(mVcdFile, gmem2_RID, "gmem2_RID");
    sc_trace(mVcdFile, gmem2_RUSER, "gmem2_RUSER");
    sc_trace(mVcdFile, gmem2_RRESP, "gmem2_RRESP");
    sc_trace(mVcdFile, gmem2_BVALID, "gmem2_BVALID");
    sc_trace(mVcdFile, gmem2_BRESP, "gmem2_BRESP");
    sc_trace(mVcdFile, gmem2_BID, "gmem2_BID");
    sc_trace(mVcdFile, gmem2_BUSER, "gmem2_BUSER");
    sc_trace(mVcdFile, mm_entry616_U0_ap_start, "mm_entry616_U0_ap_start");
    sc_trace(mVcdFile, mm_entry616_U0_ap_done, "mm_entry616_U0_ap_done");
    sc_trace(mVcdFile, mm_entry616_U0_ap_continue, "mm_entry616_U0_ap_continue");
    sc_trace(mVcdFile, mm_entry616_U0_ap_idle, "mm_entry616_U0_ap_idle");
    sc_trace(mVcdFile, mm_entry616_U0_ap_ready, "mm_entry616_U0_ap_ready");
    sc_trace(mVcdFile, mm_entry616_U0_start_out, "mm_entry616_U0_start_out");
    sc_trace(mVcdFile, mm_entry616_U0_start_write, "mm_entry616_U0_start_write");
    sc_trace(mVcdFile, mm_entry616_U0_N_out_din, "mm_entry616_U0_N_out_din");
    sc_trace(mVcdFile, mm_entry616_U0_N_out_write, "mm_entry616_U0_N_out_write");
    sc_trace(mVcdFile, mm_entry616_U0_N_out1_din, "mm_entry616_U0_N_out1_din");
    sc_trace(mVcdFile, mm_entry616_U0_N_out1_write, "mm_entry616_U0_N_out1_write");
    sc_trace(mVcdFile, mm_entry616_U0_A_p_V_out_din, "mm_entry616_U0_A_p_V_out_din");
    sc_trace(mVcdFile, mm_entry616_U0_A_p_V_out_write, "mm_entry616_U0_A_p_V_out_write");
    sc_trace(mVcdFile, mm_entry616_U0_B_p_V_out_din, "mm_entry616_U0_B_p_V_out_din");
    sc_trace(mVcdFile, mm_entry616_U0_B_p_V_out_write, "mm_entry616_U0_B_p_V_out_write");
    sc_trace(mVcdFile, mm_entry616_U0_AB_p_V_out_din, "mm_entry616_U0_AB_p_V_out_din");
    sc_trace(mVcdFile, mm_entry616_U0_AB_p_V_out_write, "mm_entry616_U0_AB_p_V_out_write");
    sc_trace(mVcdFile, readA_U0_ap_start, "readA_U0_ap_start");
    sc_trace(mVcdFile, readA_U0_ap_done, "readA_U0_ap_done");
    sc_trace(mVcdFile, readA_U0_ap_continue, "readA_U0_ap_continue");
    sc_trace(mVcdFile, readA_U0_ap_idle, "readA_U0_ap_idle");
    sc_trace(mVcdFile, readA_U0_ap_ready, "readA_U0_ap_ready");
    sc_trace(mVcdFile, readA_U0_start_out, "readA_U0_start_out");
    sc_trace(mVcdFile, readA_U0_start_write, "readA_U0_start_write");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWVALID, "readA_U0_m_axi_A_p_V_AWVALID");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWADDR, "readA_U0_m_axi_A_p_V_AWADDR");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWID, "readA_U0_m_axi_A_p_V_AWID");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWLEN, "readA_U0_m_axi_A_p_V_AWLEN");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWSIZE, "readA_U0_m_axi_A_p_V_AWSIZE");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWBURST, "readA_U0_m_axi_A_p_V_AWBURST");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWLOCK, "readA_U0_m_axi_A_p_V_AWLOCK");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWCACHE, "readA_U0_m_axi_A_p_V_AWCACHE");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWPROT, "readA_U0_m_axi_A_p_V_AWPROT");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWQOS, "readA_U0_m_axi_A_p_V_AWQOS");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWREGION, "readA_U0_m_axi_A_p_V_AWREGION");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_AWUSER, "readA_U0_m_axi_A_p_V_AWUSER");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_WVALID, "readA_U0_m_axi_A_p_V_WVALID");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_WDATA, "readA_U0_m_axi_A_p_V_WDATA");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_WSTRB, "readA_U0_m_axi_A_p_V_WSTRB");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_WLAST, "readA_U0_m_axi_A_p_V_WLAST");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_WID, "readA_U0_m_axi_A_p_V_WID");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_WUSER, "readA_U0_m_axi_A_p_V_WUSER");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARVALID, "readA_U0_m_axi_A_p_V_ARVALID");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARADDR, "readA_U0_m_axi_A_p_V_ARADDR");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARID, "readA_U0_m_axi_A_p_V_ARID");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARLEN, "readA_U0_m_axi_A_p_V_ARLEN");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARSIZE, "readA_U0_m_axi_A_p_V_ARSIZE");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARBURST, "readA_U0_m_axi_A_p_V_ARBURST");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARLOCK, "readA_U0_m_axi_A_p_V_ARLOCK");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARCACHE, "readA_U0_m_axi_A_p_V_ARCACHE");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARPROT, "readA_U0_m_axi_A_p_V_ARPROT");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARQOS, "readA_U0_m_axi_A_p_V_ARQOS");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARREGION, "readA_U0_m_axi_A_p_V_ARREGION");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_ARUSER, "readA_U0_m_axi_A_p_V_ARUSER");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_RREADY, "readA_U0_m_axi_A_p_V_RREADY");
    sc_trace(mVcdFile, readA_U0_m_axi_A_p_V_BREADY, "readA_U0_m_axi_A_p_V_BREADY");
    sc_trace(mVcdFile, readA_U0_A_p_V_offset_read, "readA_U0_A_p_V_offset_read");
    sc_trace(mVcdFile, readA_U0_AStreamWide_V_V_din, "readA_U0_AStreamWide_V_V_din");
    sc_trace(mVcdFile, readA_U0_AStreamWide_V_V_write, "readA_U0_AStreamWide_V_V_write");
    sc_trace(mVcdFile, readA_U0_N_read, "readA_U0_N_read");
    sc_trace(mVcdFile, readA_U0_N_out_din, "readA_U0_N_out_din");
    sc_trace(mVcdFile, readA_U0_N_out_write, "readA_U0_N_out_write");
    sc_trace(mVcdFile, changeARate_U0_ap_start, "changeARate_U0_ap_start");
    sc_trace(mVcdFile, changeARate_U0_ap_done, "changeARate_U0_ap_done");
    sc_trace(mVcdFile, changeARate_U0_ap_continue, "changeARate_U0_ap_continue");
    sc_trace(mVcdFile, changeARate_U0_ap_idle, "changeARate_U0_ap_idle");
    sc_trace(mVcdFile, changeARate_U0_ap_ready, "changeARate_U0_ap_ready");
    sc_trace(mVcdFile, changeARate_U0_AStreamWide_V_V_read, "changeARate_U0_AStreamWide_V_V_read");
    sc_trace(mVcdFile, changeARate_U0_AStream_V_din, "changeARate_U0_AStream_V_din");
    sc_trace(mVcdFile, changeARate_U0_AStream_V_write, "changeARate_U0_AStream_V_write");
    sc_trace(mVcdFile, changeARate_U0_N_read, "changeARate_U0_N_read");
    sc_trace(mVcdFile, changeARate_U0_N_out_din, "changeARate_U0_N_out_din");
    sc_trace(mVcdFile, changeARate_U0_N_out_write, "changeARate_U0_N_out_write");
    sc_trace(mVcdFile, readB_U0_ap_start, "readB_U0_ap_start");
    sc_trace(mVcdFile, readB_U0_ap_done, "readB_U0_ap_done");
    sc_trace(mVcdFile, readB_U0_ap_continue, "readB_U0_ap_continue");
    sc_trace(mVcdFile, readB_U0_ap_idle, "readB_U0_ap_idle");
    sc_trace(mVcdFile, readB_U0_ap_ready, "readB_U0_ap_ready");
    sc_trace(mVcdFile, readB_U0_start_out, "readB_U0_start_out");
    sc_trace(mVcdFile, readB_U0_start_write, "readB_U0_start_write");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWVALID, "readB_U0_m_axi_B_p_V_AWVALID");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWADDR, "readB_U0_m_axi_B_p_V_AWADDR");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWID, "readB_U0_m_axi_B_p_V_AWID");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWLEN, "readB_U0_m_axi_B_p_V_AWLEN");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWSIZE, "readB_U0_m_axi_B_p_V_AWSIZE");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWBURST, "readB_U0_m_axi_B_p_V_AWBURST");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWLOCK, "readB_U0_m_axi_B_p_V_AWLOCK");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWCACHE, "readB_U0_m_axi_B_p_V_AWCACHE");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWPROT, "readB_U0_m_axi_B_p_V_AWPROT");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWQOS, "readB_U0_m_axi_B_p_V_AWQOS");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWREGION, "readB_U0_m_axi_B_p_V_AWREGION");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_AWUSER, "readB_U0_m_axi_B_p_V_AWUSER");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_WVALID, "readB_U0_m_axi_B_p_V_WVALID");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_WDATA, "readB_U0_m_axi_B_p_V_WDATA");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_WSTRB, "readB_U0_m_axi_B_p_V_WSTRB");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_WLAST, "readB_U0_m_axi_B_p_V_WLAST");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_WID, "readB_U0_m_axi_B_p_V_WID");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_WUSER, "readB_U0_m_axi_B_p_V_WUSER");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARVALID, "readB_U0_m_axi_B_p_V_ARVALID");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARADDR, "readB_U0_m_axi_B_p_V_ARADDR");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARID, "readB_U0_m_axi_B_p_V_ARID");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARLEN, "readB_U0_m_axi_B_p_V_ARLEN");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARSIZE, "readB_U0_m_axi_B_p_V_ARSIZE");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARBURST, "readB_U0_m_axi_B_p_V_ARBURST");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARLOCK, "readB_U0_m_axi_B_p_V_ARLOCK");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARCACHE, "readB_U0_m_axi_B_p_V_ARCACHE");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARPROT, "readB_U0_m_axi_B_p_V_ARPROT");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARQOS, "readB_U0_m_axi_B_p_V_ARQOS");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARREGION, "readB_U0_m_axi_B_p_V_ARREGION");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_ARUSER, "readB_U0_m_axi_B_p_V_ARUSER");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_RREADY, "readB_U0_m_axi_B_p_V_RREADY");
    sc_trace(mVcdFile, readB_U0_m_axi_B_p_V_BREADY, "readB_U0_m_axi_B_p_V_BREADY");
    sc_trace(mVcdFile, readB_U0_B_p_V_offset_read, "readB_U0_B_p_V_offset_read");
    sc_trace(mVcdFile, readB_U0_BStream_V_V_din, "readB_U0_BStream_V_V_din");
    sc_trace(mVcdFile, readB_U0_BStream_V_V_write, "readB_U0_BStream_V_V_write");
    sc_trace(mVcdFile, readB_U0_N_read, "readB_U0_N_read");
    sc_trace(mVcdFile, comp_U0_ap_start, "comp_U0_ap_start");
    sc_trace(mVcdFile, comp_U0_ap_done, "comp_U0_ap_done");
    sc_trace(mVcdFile, comp_U0_ap_continue, "comp_U0_ap_continue");
    sc_trace(mVcdFile, comp_U0_ap_idle, "comp_U0_ap_idle");
    sc_trace(mVcdFile, comp_U0_ap_ready, "comp_U0_ap_ready");
    sc_trace(mVcdFile, comp_U0_AStream_V_read, "comp_U0_AStream_V_read");
    sc_trace(mVcdFile, comp_U0_BStream_V_V_read, "comp_U0_BStream_V_V_read");
    sc_trace(mVcdFile, comp_U0_ABStream_V_V_din, "comp_U0_ABStream_V_V_din");
    sc_trace(mVcdFile, comp_U0_ABStream_V_V_write, "comp_U0_ABStream_V_V_write");
    sc_trace(mVcdFile, comp_U0_N_read, "comp_U0_N_read");
    sc_trace(mVcdFile, comp_U0_N_out_din, "comp_U0_N_out_din");
    sc_trace(mVcdFile, comp_U0_N_out_write, "comp_U0_N_out_write");
    sc_trace(mVcdFile, writeAB_U0_ap_start, "writeAB_U0_ap_start");
    sc_trace(mVcdFile, writeAB_U0_ap_done, "writeAB_U0_ap_done");
    sc_trace(mVcdFile, writeAB_U0_ap_continue, "writeAB_U0_ap_continue");
    sc_trace(mVcdFile, writeAB_U0_ap_idle, "writeAB_U0_ap_idle");
    sc_trace(mVcdFile, writeAB_U0_ap_ready, "writeAB_U0_ap_ready");
    sc_trace(mVcdFile, writeAB_U0_ABStream_V_V_read, "writeAB_U0_ABStream_V_V_read");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWVALID, "writeAB_U0_m_axi_AB_V_AWVALID");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWADDR, "writeAB_U0_m_axi_AB_V_AWADDR");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWID, "writeAB_U0_m_axi_AB_V_AWID");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWLEN, "writeAB_U0_m_axi_AB_V_AWLEN");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWSIZE, "writeAB_U0_m_axi_AB_V_AWSIZE");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWBURST, "writeAB_U0_m_axi_AB_V_AWBURST");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWLOCK, "writeAB_U0_m_axi_AB_V_AWLOCK");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWCACHE, "writeAB_U0_m_axi_AB_V_AWCACHE");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWPROT, "writeAB_U0_m_axi_AB_V_AWPROT");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWQOS, "writeAB_U0_m_axi_AB_V_AWQOS");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWREGION, "writeAB_U0_m_axi_AB_V_AWREGION");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_AWUSER, "writeAB_U0_m_axi_AB_V_AWUSER");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_WVALID, "writeAB_U0_m_axi_AB_V_WVALID");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_WDATA, "writeAB_U0_m_axi_AB_V_WDATA");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_WSTRB, "writeAB_U0_m_axi_AB_V_WSTRB");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_WLAST, "writeAB_U0_m_axi_AB_V_WLAST");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_WID, "writeAB_U0_m_axi_AB_V_WID");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_WUSER, "writeAB_U0_m_axi_AB_V_WUSER");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARVALID, "writeAB_U0_m_axi_AB_V_ARVALID");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARADDR, "writeAB_U0_m_axi_AB_V_ARADDR");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARID, "writeAB_U0_m_axi_AB_V_ARID");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARLEN, "writeAB_U0_m_axi_AB_V_ARLEN");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARSIZE, "writeAB_U0_m_axi_AB_V_ARSIZE");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARBURST, "writeAB_U0_m_axi_AB_V_ARBURST");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARLOCK, "writeAB_U0_m_axi_AB_V_ARLOCK");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARCACHE, "writeAB_U0_m_axi_AB_V_ARCACHE");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARPROT, "writeAB_U0_m_axi_AB_V_ARPROT");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARQOS, "writeAB_U0_m_axi_AB_V_ARQOS");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARREGION, "writeAB_U0_m_axi_AB_V_ARREGION");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_ARUSER, "writeAB_U0_m_axi_AB_V_ARUSER");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_RREADY, "writeAB_U0_m_axi_AB_V_RREADY");
    sc_trace(mVcdFile, writeAB_U0_m_axi_AB_V_BREADY, "writeAB_U0_m_axi_AB_V_BREADY");
    sc_trace(mVcdFile, writeAB_U0_AB_V_offset_read, "writeAB_U0_AB_V_offset_read");
    sc_trace(mVcdFile, writeAB_U0_N_read, "writeAB_U0_N_read");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, N_c_full_n, "N_c_full_n");
    sc_trace(mVcdFile, N_c_dout, "N_c_dout");
    sc_trace(mVcdFile, N_c_empty_n, "N_c_empty_n");
    sc_trace(mVcdFile, N_c8_full_n, "N_c8_full_n");
    sc_trace(mVcdFile, N_c8_dout, "N_c8_dout");
    sc_trace(mVcdFile, N_c8_empty_n, "N_c8_empty_n");
    sc_trace(mVcdFile, A_p_V_c_full_n, "A_p_V_c_full_n");
    sc_trace(mVcdFile, A_p_V_c_dout, "A_p_V_c_dout");
    sc_trace(mVcdFile, A_p_V_c_empty_n, "A_p_V_c_empty_n");
    sc_trace(mVcdFile, B_p_V_c_full_n, "B_p_V_c_full_n");
    sc_trace(mVcdFile, B_p_V_c_dout, "B_p_V_c_dout");
    sc_trace(mVcdFile, B_p_V_c_empty_n, "B_p_V_c_empty_n");
    sc_trace(mVcdFile, AB_p_V_c_full_n, "AB_p_V_c_full_n");
    sc_trace(mVcdFile, AB_p_V_c_dout, "AB_p_V_c_dout");
    sc_trace(mVcdFile, AB_p_V_c_empty_n, "AB_p_V_c_empty_n");
    sc_trace(mVcdFile, AStreamWide_V_V_full_n, "AStreamWide_V_V_full_n");
    sc_trace(mVcdFile, AStreamWide_V_V_dout, "AStreamWide_V_V_dout");
    sc_trace(mVcdFile, AStreamWide_V_V_empty_n, "AStreamWide_V_V_empty_n");
    sc_trace(mVcdFile, N_c9_full_n, "N_c9_full_n");
    sc_trace(mVcdFile, N_c9_dout, "N_c9_dout");
    sc_trace(mVcdFile, N_c9_empty_n, "N_c9_empty_n");
    sc_trace(mVcdFile, AStream_V_full_n, "AStream_V_full_n");
    sc_trace(mVcdFile, AStream_V_dout, "AStream_V_dout");
    sc_trace(mVcdFile, AStream_V_empty_n, "AStream_V_empty_n");
    sc_trace(mVcdFile, N_c10_full_n, "N_c10_full_n");
    sc_trace(mVcdFile, N_c10_dout, "N_c10_dout");
    sc_trace(mVcdFile, N_c10_empty_n, "N_c10_empty_n");
    sc_trace(mVcdFile, BStream_V_V_full_n, "BStream_V_V_full_n");
    sc_trace(mVcdFile, BStream_V_V_dout, "BStream_V_V_dout");
    sc_trace(mVcdFile, BStream_V_V_empty_n, "BStream_V_V_empty_n");
    sc_trace(mVcdFile, ABStream_V_V_full_n, "ABStream_V_V_full_n");
    sc_trace(mVcdFile, ABStream_V_V_dout, "ABStream_V_V_dout");
    sc_trace(mVcdFile, ABStream_V_V_empty_n, "ABStream_V_V_empty_n");
    sc_trace(mVcdFile, N_c11_full_n, "N_c11_full_n");
    sc_trace(mVcdFile, N_c11_dout, "N_c11_dout");
    sc_trace(mVcdFile, N_c11_empty_n, "N_c11_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_mm_entry616_U0_ap_ready, "ap_sync_reg_mm_entry616_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_mm_entry616_U0_ap_ready, "ap_sync_mm_entry616_U0_ap_ready");
    sc_trace(mVcdFile, mm_entry616_U0_ap_ready_count, "mm_entry616_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_readA_U0_ap_ready, "ap_sync_reg_readA_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_readA_U0_ap_ready, "ap_sync_readA_U0_ap_ready");
    sc_trace(mVcdFile, readA_U0_ap_ready_count, "readA_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_readB_U0_ap_ready, "ap_sync_reg_readB_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_readB_U0_ap_ready, "ap_sync_readB_U0_ap_ready");
    sc_trace(mVcdFile, readB_U0_ap_ready_count, "readB_U0_ap_ready_count");
    sc_trace(mVcdFile, start_for_writeAB_U0_din, "start_for_writeAB_U0_din");
    sc_trace(mVcdFile, start_for_writeAB_U0_full_n, "start_for_writeAB_U0_full_n");
    sc_trace(mVcdFile, start_for_writeAB_U0_dout, "start_for_writeAB_U0_dout");
    sc_trace(mVcdFile, start_for_writeAB_U0_empty_n, "start_for_writeAB_U0_empty_n");
    sc_trace(mVcdFile, start_for_changeARate_U0_din, "start_for_changeARate_U0_din");
    sc_trace(mVcdFile, start_for_changeARate_U0_full_n, "start_for_changeARate_U0_full_n");
    sc_trace(mVcdFile, start_for_changeARate_U0_dout, "start_for_changeARate_U0_dout");
    sc_trace(mVcdFile, start_for_changeARate_U0_empty_n, "start_for_changeARate_U0_empty_n");
    sc_trace(mVcdFile, changeARate_U0_start_full_n, "changeARate_U0_start_full_n");
    sc_trace(mVcdFile, changeARate_U0_start_write, "changeARate_U0_start_write");
    sc_trace(mVcdFile, start_for_comp_U0_din, "start_for_comp_U0_din");
    sc_trace(mVcdFile, start_for_comp_U0_full_n, "start_for_comp_U0_full_n");
    sc_trace(mVcdFile, start_for_comp_U0_dout, "start_for_comp_U0_dout");
    sc_trace(mVcdFile, start_for_comp_U0_empty_n, "start_for_comp_U0_empty_n");
    sc_trace(mVcdFile, comp_U0_start_full_n, "comp_U0_start_full_n");
    sc_trace(mVcdFile, comp_U0_start_write, "comp_U0_start_write");
    sc_trace(mVcdFile, writeAB_U0_start_full_n, "writeAB_U0_start_full_n");
    sc_trace(mVcdFile, writeAB_U0_start_write, "writeAB_U0_start_write");
#endif

    }
    mHdltvinHandle.open("mm_mm.hdltvin.dat");
    mHdltvoutHandle.open("mm_mm.hdltvout.dat");
}

mm_mm::~mm_mm() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mm_control_s_axi_U;
    delete mm_gmem0_m_axi_U;
    delete mm_gmem1_m_axi_U;
    delete mm_gmem2_m_axi_U;
    delete mm_entry616_U0;
    delete readA_U0;
    delete changeARate_U0;
    delete readB_U0;
    delete comp_U0;
    delete writeAB_U0;
    delete N_c_U;
    delete N_c8_U;
    delete A_p_V_c_U;
    delete B_p_V_c_U;
    delete AB_p_V_c_U;
    delete AStreamWide_V_V_U;
    delete N_c9_U;
    delete AStream_V_U;
    delete N_c10_U;
    delete BStream_V_V_U;
    delete ABStream_V_V_U;
    delete N_c11_U;
    delete start_for_writeAB_U0_U;
    delete start_for_changeARate_U0_U;
    delete start_for_comp_U0_U;
}

void mm_mm::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mm_mm::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void mm_mm::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv2_0;
}

void mm_mm::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_0;
}

void mm_mm::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void mm_mm::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_0;
}

void mm_mm::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv3_0;
}

void mm_mm::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_0;
}

void mm_mm::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv512_lc_1;
}

void mm_mm::thread_ap_clk_no_reset_() {
    ap_rst_n_inv = ap_rst_reg_1.read();
    ap_rst_reg_1 = ap_rst_reg_2.read();
    ap_rst_reg_2 =  (sc_logic) (~ap_rst_n.read());
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_mm_entry616_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_mm_entry616_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_mm_entry616_U0_ap_ready = ap_sync_mm_entry616_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_readA_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_readA_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_readA_U0_ap_ready = ap_sync_readA_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_readB_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_readB_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_readB_U0_ap_ready = ap_sync_readB_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(mm_entry616_U0_ap_ready.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        mm_entry616_U0_ap_ready_count = (!mm_entry616_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(mm_entry616_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, mm_entry616_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        mm_entry616_U0_ap_ready_count = (!mm_entry616_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(mm_entry616_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(readA_U0_ap_ready.read(), ap_const_logic_0))) {
        readA_U0_ap_ready_count = (!readA_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(readA_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, readA_U0_ap_ready.read()))) {
        readA_U0_ap_ready_count = (!readA_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(readA_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, readB_U0_ap_ready.read()))) {
        readB_U0_ap_ready_count = (!readB_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(readB_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, readB_U0_ap_ready.read()))) {
        readB_U0_ap_ready_count = (!readB_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(readB_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
}

void mm_mm::thread_ap_done() {
    ap_done = writeAB_U0_ap_done.read();
}

void mm_mm::thread_ap_idle() {
    ap_idle = (mm_entry616_U0_ap_idle.read() & readA_U0_ap_idle.read() & changeARate_U0_ap_idle.read() & readB_U0_ap_idle.read() & comp_U0_ap_idle.read() & writeAB_U0_ap_idle.read());
}

void mm_mm::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void mm_mm::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void mm_mm::thread_ap_sync_done() {
    ap_sync_done = writeAB_U0_ap_done.read();
}

void mm_mm::thread_ap_sync_mm_entry616_U0_ap_ready() {
    ap_sync_mm_entry616_U0_ap_ready = (mm_entry616_U0_ap_ready.read() | ap_sync_reg_mm_entry616_U0_ap_ready.read());
}

void mm_mm::thread_ap_sync_readA_U0_ap_ready() {
    ap_sync_readA_U0_ap_ready = (readA_U0_ap_ready.read() | ap_sync_reg_readA_U0_ap_ready.read());
}

void mm_mm::thread_ap_sync_readB_U0_ap_ready() {
    ap_sync_readB_U0_ap_ready = (readB_U0_ap_ready.read() | ap_sync_reg_readB_U0_ap_ready.read());
}

void mm_mm::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_mm_entry616_U0_ap_ready.read() & ap_sync_readA_U0_ap_ready.read() & ap_sync_readB_U0_ap_ready.read());
}

void mm_mm::thread_changeARate_U0_ap_continue() {
    changeARate_U0_ap_continue = ap_const_logic_1;
}

void mm_mm::thread_changeARate_U0_ap_start() {
    changeARate_U0_ap_start = start_for_changeARate_U0_empty_n.read();
}

void mm_mm::thread_changeARate_U0_start_full_n() {
    changeARate_U0_start_full_n = ap_const_logic_1;
}

void mm_mm::thread_changeARate_U0_start_write() {
    changeARate_U0_start_write = ap_const_logic_0;
}

void mm_mm::thread_comp_U0_ap_continue() {
    comp_U0_ap_continue = ap_const_logic_1;
}

void mm_mm::thread_comp_U0_ap_start() {
    comp_U0_ap_start = start_for_comp_U0_empty_n.read();
}

void mm_mm::thread_comp_U0_start_full_n() {
    comp_U0_start_full_n = ap_const_logic_1;
}

void mm_mm::thread_comp_U0_start_write() {
    comp_U0_start_write = ap_const_logic_0;
}

void mm_mm::thread_mm_entry616_U0_ap_continue() {
    mm_entry616_U0_ap_continue = ap_const_logic_1;
}

void mm_mm::thread_mm_entry616_U0_ap_start() {
    mm_entry616_U0_ap_start = (ap_start.read() & (ap_sync_reg_mm_entry616_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void mm_mm::thread_readA_U0_ap_continue() {
    readA_U0_ap_continue = ap_const_logic_1;
}

void mm_mm::thread_readA_U0_ap_start() {
    readA_U0_ap_start = (ap_start.read() & (ap_sync_reg_readA_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void mm_mm::thread_readB_U0_ap_continue() {
    readB_U0_ap_continue = ap_const_logic_1;
}

void mm_mm::thread_readB_U0_ap_start() {
    readB_U0_ap_start = (ap_start.read() & (ap_sync_reg_readB_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void mm_mm::thread_start_for_changeARate_U0_din() {
    start_for_changeARate_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void mm_mm::thread_start_for_comp_U0_din() {
    start_for_comp_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void mm_mm::thread_start_for_writeAB_U0_din() {
    start_for_writeAB_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void mm_mm::thread_writeAB_U0_ap_continue() {
    writeAB_U0_ap_continue = ap_const_logic_1;
}

void mm_mm::thread_writeAB_U0_ap_start() {
    writeAB_U0_ap_start = start_for_writeAB_U0_empty_n.read();
}

void mm_mm::thread_writeAB_U0_start_full_n() {
    writeAB_U0_start_full_n = ap_const_logic_1;
}

void mm_mm::thread_writeAB_U0_start_write() {
    writeAB_U0_start_write = ap_const_logic_0;
}

void mm_mm::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWVALID\" :  \"" << m_axi_gmem0_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_AWREADY\" :  \"" << m_axi_gmem0_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWADDR\" :  \"" << m_axi_gmem0_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWID\" :  \"" << m_axi_gmem0_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWLEN\" :  \"" << m_axi_gmem0_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWSIZE\" :  \"" << m_axi_gmem0_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWBURST\" :  \"" << m_axi_gmem0_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWLOCK\" :  \"" << m_axi_gmem0_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWCACHE\" :  \"" << m_axi_gmem0_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWPROT\" :  \"" << m_axi_gmem0_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWQOS\" :  \"" << m_axi_gmem0_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWREGION\" :  \"" << m_axi_gmem0_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWUSER\" :  \"" << m_axi_gmem0_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WVALID\" :  \"" << m_axi_gmem0_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_WREADY\" :  \"" << m_axi_gmem0_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WDATA\" :  \"" << m_axi_gmem0_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WSTRB\" :  \"" << m_axi_gmem0_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WLAST\" :  \"" << m_axi_gmem0_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WID\" :  \"" << m_axi_gmem0_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WUSER\" :  \"" << m_axi_gmem0_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARVALID\" :  \"" << m_axi_gmem0_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_ARREADY\" :  \"" << m_axi_gmem0_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARADDR\" :  \"" << m_axi_gmem0_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARID\" :  \"" << m_axi_gmem0_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARLEN\" :  \"" << m_axi_gmem0_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARSIZE\" :  \"" << m_axi_gmem0_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARBURST\" :  \"" << m_axi_gmem0_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARLOCK\" :  \"" << m_axi_gmem0_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARCACHE\" :  \"" << m_axi_gmem0_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARPROT\" :  \"" << m_axi_gmem0_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARQOS\" :  \"" << m_axi_gmem0_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARREGION\" :  \"" << m_axi_gmem0_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARUSER\" :  \"" << m_axi_gmem0_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RVALID\" :  \"" << m_axi_gmem0_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_RREADY\" :  \"" << m_axi_gmem0_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RDATA\" :  \"" << m_axi_gmem0_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RLAST\" :  \"" << m_axi_gmem0_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RID\" :  \"" << m_axi_gmem0_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RUSER\" :  \"" << m_axi_gmem0_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RRESP\" :  \"" << m_axi_gmem0_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BVALID\" :  \"" << m_axi_gmem0_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_BREADY\" :  \"" << m_axi_gmem0_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BRESP\" :  \"" << m_axi_gmem0_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BID\" :  \"" << m_axi_gmem0_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BUSER\" :  \"" << m_axi_gmem0_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWVALID\" :  \"" << m_axi_gmem1_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_AWREADY\" :  \"" << m_axi_gmem1_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWADDR\" :  \"" << m_axi_gmem1_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWID\" :  \"" << m_axi_gmem1_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLEN\" :  \"" << m_axi_gmem1_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWSIZE\" :  \"" << m_axi_gmem1_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWBURST\" :  \"" << m_axi_gmem1_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLOCK\" :  \"" << m_axi_gmem1_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWCACHE\" :  \"" << m_axi_gmem1_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWPROT\" :  \"" << m_axi_gmem1_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWQOS\" :  \"" << m_axi_gmem1_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWREGION\" :  \"" << m_axi_gmem1_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWUSER\" :  \"" << m_axi_gmem1_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WVALID\" :  \"" << m_axi_gmem1_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_WREADY\" :  \"" << m_axi_gmem1_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WDATA\" :  \"" << m_axi_gmem1_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WSTRB\" :  \"" << m_axi_gmem1_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WLAST\" :  \"" << m_axi_gmem1_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WID\" :  \"" << m_axi_gmem1_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WUSER\" :  \"" << m_axi_gmem1_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARVALID\" :  \"" << m_axi_gmem1_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_ARREADY\" :  \"" << m_axi_gmem1_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARADDR\" :  \"" << m_axi_gmem1_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARID\" :  \"" << m_axi_gmem1_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLEN\" :  \"" << m_axi_gmem1_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARSIZE\" :  \"" << m_axi_gmem1_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARBURST\" :  \"" << m_axi_gmem1_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLOCK\" :  \"" << m_axi_gmem1_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARCACHE\" :  \"" << m_axi_gmem1_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARPROT\" :  \"" << m_axi_gmem1_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARQOS\" :  \"" << m_axi_gmem1_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARREGION\" :  \"" << m_axi_gmem1_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARUSER\" :  \"" << m_axi_gmem1_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RVALID\" :  \"" << m_axi_gmem1_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_RREADY\" :  \"" << m_axi_gmem1_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RDATA\" :  \"" << m_axi_gmem1_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RLAST\" :  \"" << m_axi_gmem1_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RID\" :  \"" << m_axi_gmem1_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RUSER\" :  \"" << m_axi_gmem1_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RRESP\" :  \"" << m_axi_gmem1_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BVALID\" :  \"" << m_axi_gmem1_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_BREADY\" :  \"" << m_axi_gmem1_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BRESP\" :  \"" << m_axi_gmem1_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BID\" :  \"" << m_axi_gmem1_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BUSER\" :  \"" << m_axi_gmem1_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWVALID\" :  \"" << m_axi_gmem2_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_AWREADY\" :  \"" << m_axi_gmem2_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWADDR\" :  \"" << m_axi_gmem2_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWID\" :  \"" << m_axi_gmem2_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWLEN\" :  \"" << m_axi_gmem2_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWSIZE\" :  \"" << m_axi_gmem2_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWBURST\" :  \"" << m_axi_gmem2_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWLOCK\" :  \"" << m_axi_gmem2_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWCACHE\" :  \"" << m_axi_gmem2_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWPROT\" :  \"" << m_axi_gmem2_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWQOS\" :  \"" << m_axi_gmem2_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWREGION\" :  \"" << m_axi_gmem2_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWUSER\" :  \"" << m_axi_gmem2_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WVALID\" :  \"" << m_axi_gmem2_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_WREADY\" :  \"" << m_axi_gmem2_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WDATA\" :  \"" << m_axi_gmem2_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WSTRB\" :  \"" << m_axi_gmem2_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WLAST\" :  \"" << m_axi_gmem2_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WID\" :  \"" << m_axi_gmem2_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WUSER\" :  \"" << m_axi_gmem2_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARVALID\" :  \"" << m_axi_gmem2_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_ARREADY\" :  \"" << m_axi_gmem2_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARADDR\" :  \"" << m_axi_gmem2_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARID\" :  \"" << m_axi_gmem2_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARLEN\" :  \"" << m_axi_gmem2_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARSIZE\" :  \"" << m_axi_gmem2_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARBURST\" :  \"" << m_axi_gmem2_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARLOCK\" :  \"" << m_axi_gmem2_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARCACHE\" :  \"" << m_axi_gmem2_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARPROT\" :  \"" << m_axi_gmem2_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARQOS\" :  \"" << m_axi_gmem2_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARREGION\" :  \"" << m_axi_gmem2_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARUSER\" :  \"" << m_axi_gmem2_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RVALID\" :  \"" << m_axi_gmem2_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_RREADY\" :  \"" << m_axi_gmem2_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RDATA\" :  \"" << m_axi_gmem2_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RLAST\" :  \"" << m_axi_gmem2_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RID\" :  \"" << m_axi_gmem2_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RUSER\" :  \"" << m_axi_gmem2_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RRESP\" :  \"" << m_axi_gmem2_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BVALID\" :  \"" << m_axi_gmem2_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_BREADY\" :  \"" << m_axi_gmem2_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BRESP\" :  \"" << m_axi_gmem2_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BID\" :  \"" << m_axi_gmem2_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BUSER\" :  \"" << m_axi_gmem2_BUSER.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

