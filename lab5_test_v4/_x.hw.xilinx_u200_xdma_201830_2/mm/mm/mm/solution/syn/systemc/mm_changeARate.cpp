// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mm_changeARate.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mm_changeARate::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mm_changeARate::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> mm_changeARate::ap_ST_fsm_state1 = "1";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state2 = "10";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state3 = "100";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state4 = "1000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state5 = "10000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state6 = "100000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_pp0_stage0 = "1000000000000";
const sc_lv<14> mm_changeARate::ap_ST_fsm_state15 = "10000000000000";
const sc_lv<32> mm_changeARate::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool mm_changeARate::ap_const_boolean_1 = true;
const sc_lv<32> mm_changeARate::ap_const_lv32_B = "1011";
const sc_lv<1> mm_changeARate::ap_const_lv1_0 = "0";
const sc_lv<32> mm_changeARate::ap_const_lv32_C = "1100";
const bool mm_changeARate::ap_const_boolean_0 = false;
const sc_lv<32> mm_changeARate::ap_const_lv32_1 = "1";
const sc_lv<32> mm_changeARate::ap_const_lv32_2 = "10";
const sc_lv<32> mm_changeARate::ap_const_lv32_5 = "101";
const sc_lv<32> mm_changeARate::ap_const_lv32_6 = "110";
const sc_lv<32> mm_changeARate::ap_const_lv32_A = "1010";
const sc_lv<1> mm_changeARate::ap_const_lv1_1 = "1";
const sc_lv<100> mm_changeARate::ap_const_lv100_0 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> mm_changeARate::ap_const_lv32_D = "1101";
const sc_lv<6> mm_changeARate::ap_const_lv6_0 = "000000";
const sc_lv<32> mm_changeARate::ap_const_lv32_1F = "11111";
const sc_lv<32> mm_changeARate::ap_const_lv32_8 = "1000";
const sc_lv<25> mm_changeARate::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<11> mm_changeARate::ap_const_lv11_0 = "00000000000";
const sc_lv<100> mm_changeARate::ap_const_lv100_1 = "1";
const sc_lv<6> mm_changeARate::ap_const_lv6_20 = "100000";
const sc_lv<6> mm_changeARate::ap_const_lv6_1 = "1";
const sc_lv<4> mm_changeARate::ap_const_lv4_0 = "0000";
const sc_lv<9> mm_changeARate::ap_const_lv9_F = "1111";
const sc_lv<32> mm_changeARate::ap_const_lv32_1FF = "111111111";
const sc_lv<10> mm_changeARate::ap_const_lv10_1FF = "111111111";
const sc_lv<512> mm_changeARate::ap_const_lv512_lc_2 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";

mm_changeARate::mm_changeARate(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mm_mul_32ns_43ns_75_4_1_U23 = new mm_mm_mul_32ns_43ns_75_4_1<1,4,32,43,75>("mm_mul_32ns_43ns_75_4_1_U23");
    mm_mul_32ns_43ns_75_4_1_U23->clk(ap_clk);
    mm_mul_32ns_43ns_75_4_1_U23->reset(ap_rst);
    mm_mul_32ns_43ns_75_4_1_U23->din0(grp_fu_250_p0);
    mm_mul_32ns_43ns_75_4_1_U23->din1(grp_fu_250_p1);
    mm_mul_32ns_43ns_75_4_1_U23->ce(ap_var_for_const0);
    mm_mul_32ns_43ns_75_4_1_U23->dout(grp_fu_250_p2);
    mm_mul_25ns_75ns_100_5_1_U24 = new mm_mm_mul_25ns_75ns_100_5_1<1,5,25,75,100>("mm_mul_25ns_75ns_100_5_1_U24");
    mm_mul_25ns_75ns_100_5_1_U24->clk(ap_clk);
    mm_mul_25ns_75ns_100_5_1_U24->reset(ap_rst);
    mm_mul_25ns_75ns_100_5_1_U24->din0(grp_fu_262_p0);
    mm_mul_25ns_75ns_100_5_1_U24->din1(grp_fu_262_p1);
    mm_mul_25ns_75ns_100_5_1_U24->ce(ap_var_for_const0);
    mm_mul_25ns_75ns_100_5_1_U24->dout(grp_fu_262_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AStreamWide_V_V_blk_n);
    sensitive << ( AStreamWide_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln13_fu_268_p2 );

    SC_METHOD(thread_AStreamWide_V_V_read);
    sensitive << ( AStreamWide_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln13_fu_268_p2 );

    SC_METHOD(thread_AStream_V_blk_n);
    sensitive << ( AStream_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln19_reg_475 );

    SC_METHOD(thread_AStream_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln19_reg_475 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( p_Result_s_fu_398_p2 );

    SC_METHOD(thread_AStream_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln19_reg_475 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_Lo_assign_fu_295_p3);
    sensitive << ( trunc_ln21_fu_291_p1 );

    SC_METHOD(thread_N_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( N_empty_n );

    SC_METHOD(thread_N_out_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( N_out_full_n );

    SC_METHOD(thread_N_out_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( N_dout );
    sensitive << ( N_empty_n );
    sensitive << ( N_out_full_n );

    SC_METHOD(thread_N_out_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( N_empty_n );
    sensitive << ( N_out_full_n );

    SC_METHOD(thread_N_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( N_empty_n );
    sensitive << ( N_out_full_n );

    SC_METHOD(thread_add_ln13_fu_273_p2);
    sensitive << ( indvar_flatten59_reg_153 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( AStream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln19_reg_475 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( AStream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln19_reg_475 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( AStream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln19_reg_475 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( N_empty_n );
    sensitive << ( N_out_full_n );

    SC_METHOD(thread_ap_block_state12);
    sensitive << ( AStreamWide_V_V_empty_n );
    sensitive << ( icmp_ln13_fu_268_p2 );

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter1);
    sensitive << ( AStream_V_full_n );
    sensitive << ( icmp_ln19_reg_475 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state13);
    sensitive << ( icmp_ln19_fu_279_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( AStreamWide_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln13_fu_268_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( AStreamWide_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln13_fu_268_p2 );

    SC_METHOD(thread_empty_fu_238_p1);
    sensitive << ( tmp_4_fu_231_p3 );

    SC_METHOD(thread_grp_fu_250_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_250_p00 );

    SC_METHOD(thread_grp_fu_250_p00);
    sensitive << ( sext_ln13_fu_228_p1 );

    SC_METHOD(thread_grp_fu_250_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_250_p10 );

    SC_METHOD(thread_grp_fu_250_p10);
    sensitive << ( empty_fu_238_p1 );

    SC_METHOD(thread_grp_fu_262_p0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_fu_262_p00 );

    SC_METHOD(thread_grp_fu_262_p00);
    sensitive << ( select_ln13_reg_423 );

    SC_METHOD(thread_grp_fu_262_p1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_fu_262_p10 );

    SC_METHOD(thread_grp_fu_262_p10);
    sensitive << ( bound16_reg_440 );

    SC_METHOD(thread_i_fu_285_p2);
    sensitive << ( i_0_i_reg_164 );

    SC_METHOD(thread_icmp_ln13_fu_268_p2);
    sensitive << ( AStreamWide_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln13_fu_268_p2 );
    sensitive << ( bound36_reg_455 );
    sensitive << ( indvar_flatten59_reg_153 );

    SC_METHOD(thread_icmp_ln19_fu_279_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_0_i_reg_164 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln647_fu_309_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln19_fu_279_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( Lo_assign_fu_295_p3 );
    sensitive << ( or_ln21_fu_303_p2 );

    SC_METHOD(thread_lshr_ln647_1_fu_392_p2);
    sensitive << ( zext_ln647_3_fu_389_p1 );

    SC_METHOD(thread_lshr_ln647_fu_383_p2);
    sensitive << ( select_ln647_1_fu_358_p3 );
    sensitive << ( zext_ln647_2_fu_379_p1 );

    SC_METHOD(thread_or_ln21_fu_303_p2);
    sensitive << ( Lo_assign_fu_295_p3 );

    SC_METHOD(thread_p_Result_s_fu_398_p2);
    sensitive << ( lshr_ln647_reg_489 );
    sensitive << ( lshr_ln647_1_fu_392_p2 );

    SC_METHOD(thread_select_ln13_fu_221_p3);
    sensitive << ( tmp_reg_408 );
    sensitive << ( sub_ln13_1_fu_212_p2 );
    sensitive << ( zext_ln13_1_fu_218_p1 );

    SC_METHOD(thread_select_ln647_1_fu_358_p3);
    sensitive << ( p_Val2_s_reg_469 );
    sensitive << ( icmp_ln647_fu_309_p2 );
    sensitive << ( tmp_23_fu_323_p4 );

    SC_METHOD(thread_select_ln647_2_fu_365_p3);
    sensitive << ( zext_ln647_fu_315_p1 );
    sensitive << ( icmp_ln647_fu_309_p2 );
    sensitive << ( xor_ln647_fu_338_p2 );

    SC_METHOD(thread_select_ln647_fu_350_p3);
    sensitive << ( icmp_ln647_fu_309_p2 );
    sensitive << ( sub_ln647_fu_332_p2 );
    sensitive << ( sub_ln647_1_fu_344_p2 );

    SC_METHOD(thread_sext_ln13_fu_228_p1);
    sensitive << ( select_ln13_reg_423 );

    SC_METHOD(thread_sub_ln13_1_fu_212_p2);
    sensitive << ( zext_ln13_fu_209_p1 );

    SC_METHOD(thread_sub_ln13_fu_183_p2);
    sensitive << ( N_dout );

    SC_METHOD(thread_sub_ln647_1_fu_344_p2);
    sensitive << ( zext_ln647_fu_315_p1 );
    sensitive << ( zext_ln647_1_fu_319_p1 );

    SC_METHOD(thread_sub_ln647_2_fu_373_p2);
    sensitive << ( select_ln647_fu_350_p3 );

    SC_METHOD(thread_sub_ln647_fu_332_p2);
    sensitive << ( zext_ln647_fu_315_p1 );
    sensitive << ( zext_ln647_1_fu_319_p1 );

    SC_METHOD(thread_tmp_23_fu_323_p4);
    sensitive << ( p_Val2_s_reg_469 );

    SC_METHOD(thread_tmp_4_fu_231_p3);
    sensitive << ( select_ln13_reg_423 );

    SC_METHOD(thread_trunc_ln21_fu_291_p1);
    sensitive << ( i_0_i_reg_164 );

    SC_METHOD(thread_xor_ln647_fu_338_p2);
    sensitive << ( zext_ln647_fu_315_p1 );

    SC_METHOD(thread_zext_ln13_1_fu_218_p1);
    sensitive << ( tmp_3_reg_418 );

    SC_METHOD(thread_zext_ln13_fu_209_p1);
    sensitive << ( tmp_s_reg_413 );

    SC_METHOD(thread_zext_ln647_1_fu_319_p1);
    sensitive << ( or_ln21_fu_303_p2 );

    SC_METHOD(thread_zext_ln647_2_fu_379_p1);
    sensitive << ( select_ln647_2_fu_365_p3 );

    SC_METHOD(thread_zext_ln647_3_fu_389_p1);
    sensitive << ( sub_ln647_2_reg_484 );

    SC_METHOD(thread_zext_ln647_fu_315_p1);
    sensitive << ( Lo_assign_fu_295_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( AStreamWide_V_V_empty_n );
    sensitive << ( N_empty_n );
    sensitive << ( N_out_full_n );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln13_fu_268_p2 );
    sensitive << ( icmp_ln19_fu_279_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mm_changeARate_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, AStreamWide_V_V_dout, "(port)AStreamWide_V_V_dout");
    sc_trace(mVcdFile, AStreamWide_V_V_empty_n, "(port)AStreamWide_V_V_empty_n");
    sc_trace(mVcdFile, AStreamWide_V_V_read, "(port)AStreamWide_V_V_read");
    sc_trace(mVcdFile, AStream_V_din, "(port)AStream_V_din");
    sc_trace(mVcdFile, AStream_V_full_n, "(port)AStream_V_full_n");
    sc_trace(mVcdFile, AStream_V_write, "(port)AStream_V_write");
    sc_trace(mVcdFile, N_dout, "(port)N_dout");
    sc_trace(mVcdFile, N_empty_n, "(port)N_empty_n");
    sc_trace(mVcdFile, N_read, "(port)N_read");
    sc_trace(mVcdFile, N_out_din, "(port)N_out_din");
    sc_trace(mVcdFile, N_out_full_n, "(port)N_out_full_n");
    sc_trace(mVcdFile, N_out_write, "(port)N_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, AStreamWide_V_V_blk_n, "AStreamWide_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, icmp_ln13_fu_268_p2, "icmp_ln13_fu_268_p2");
    sc_trace(mVcdFile, AStream_V_blk_n, "AStream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln19_reg_475, "icmp_ln19_reg_475");
    sc_trace(mVcdFile, N_blk_n, "N_blk_n");
    sc_trace(mVcdFile, N_out_blk_n, "N_out_blk_n");
    sc_trace(mVcdFile, i_0_i_reg_164, "i_0_i_reg_164");
    sc_trace(mVcdFile, tmp_reg_408, "tmp_reg_408");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_s_reg_413, "tmp_s_reg_413");
    sc_trace(mVcdFile, tmp_3_reg_418, "tmp_3_reg_418");
    sc_trace(mVcdFile, select_ln13_fu_221_p3, "select_ln13_fu_221_p3");
    sc_trace(mVcdFile, select_ln13_reg_423, "select_ln13_reg_423");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_fu_250_p2, "grp_fu_250_p2");
    sc_trace(mVcdFile, bound16_reg_440, "bound16_reg_440");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_262_p2, "grp_fu_262_p2");
    sc_trace(mVcdFile, bound36_reg_455, "bound36_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_block_state12, "ap_block_state12");
    sc_trace(mVcdFile, add_ln13_fu_273_p2, "add_ln13_fu_273_p2");
    sc_trace(mVcdFile, add_ln13_reg_464, "add_ln13_reg_464");
    sc_trace(mVcdFile, p_Val2_s_reg_469, "p_Val2_s_reg_469");
    sc_trace(mVcdFile, icmp_ln19_fu_279_p2, "icmp_ln19_fu_279_p2");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter0, "ap_block_state13_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter1, "ap_block_state14_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_285_p2, "i_fu_285_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, sub_ln647_2_fu_373_p2, "sub_ln647_2_fu_373_p2");
    sc_trace(mVcdFile, sub_ln647_2_reg_484, "sub_ln647_2_reg_484");
    sc_trace(mVcdFile, lshr_ln647_fu_383_p2, "lshr_ln647_fu_383_p2");
    sc_trace(mVcdFile, lshr_ln647_reg_489, "lshr_ln647_reg_489");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state13, "ap_condition_pp0_exit_iter0_state13");
    sc_trace(mVcdFile, indvar_flatten59_reg_153, "indvar_flatten59_reg_153");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, sub_ln13_fu_183_p2, "sub_ln13_fu_183_p2");
    sc_trace(mVcdFile, zext_ln13_fu_209_p1, "zext_ln13_fu_209_p1");
    sc_trace(mVcdFile, sub_ln13_1_fu_212_p2, "sub_ln13_1_fu_212_p2");
    sc_trace(mVcdFile, zext_ln13_1_fu_218_p1, "zext_ln13_1_fu_218_p1");
    sc_trace(mVcdFile, tmp_4_fu_231_p3, "tmp_4_fu_231_p3");
    sc_trace(mVcdFile, sext_ln13_fu_228_p1, "sext_ln13_fu_228_p1");
    sc_trace(mVcdFile, empty_fu_238_p1, "empty_fu_238_p1");
    sc_trace(mVcdFile, grp_fu_250_p0, "grp_fu_250_p0");
    sc_trace(mVcdFile, grp_fu_250_p1, "grp_fu_250_p1");
    sc_trace(mVcdFile, grp_fu_262_p0, "grp_fu_262_p0");
    sc_trace(mVcdFile, grp_fu_262_p1, "grp_fu_262_p1");
    sc_trace(mVcdFile, trunc_ln21_fu_291_p1, "trunc_ln21_fu_291_p1");
    sc_trace(mVcdFile, Lo_assign_fu_295_p3, "Lo_assign_fu_295_p3");
    sc_trace(mVcdFile, or_ln21_fu_303_p2, "or_ln21_fu_303_p2");
    sc_trace(mVcdFile, zext_ln647_fu_315_p1, "zext_ln647_fu_315_p1");
    sc_trace(mVcdFile, zext_ln647_1_fu_319_p1, "zext_ln647_1_fu_319_p1");
    sc_trace(mVcdFile, icmp_ln647_fu_309_p2, "icmp_ln647_fu_309_p2");
    sc_trace(mVcdFile, sub_ln647_fu_332_p2, "sub_ln647_fu_332_p2");
    sc_trace(mVcdFile, sub_ln647_1_fu_344_p2, "sub_ln647_1_fu_344_p2");
    sc_trace(mVcdFile, tmp_23_fu_323_p4, "tmp_23_fu_323_p4");
    sc_trace(mVcdFile, xor_ln647_fu_338_p2, "xor_ln647_fu_338_p2");
    sc_trace(mVcdFile, select_ln647_fu_350_p3, "select_ln647_fu_350_p3");
    sc_trace(mVcdFile, select_ln647_2_fu_365_p3, "select_ln647_2_fu_365_p3");
    sc_trace(mVcdFile, select_ln647_1_fu_358_p3, "select_ln647_1_fu_358_p3");
    sc_trace(mVcdFile, zext_ln647_2_fu_379_p1, "zext_ln647_2_fu_379_p1");
    sc_trace(mVcdFile, zext_ln647_3_fu_389_p1, "zext_ln647_3_fu_389_p1");
    sc_trace(mVcdFile, lshr_ln647_1_fu_392_p2, "lshr_ln647_1_fu_392_p2");
    sc_trace(mVcdFile, p_Result_s_fu_398_p2, "p_Result_s_fu_398_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_250_p00, "grp_fu_250_p00");
    sc_trace(mVcdFile, grp_fu_250_p10, "grp_fu_250_p10");
    sc_trace(mVcdFile, grp_fu_262_p00, "grp_fu_262_p00");
    sc_trace(mVcdFile, grp_fu_262_p10, "grp_fu_262_p10");
#endif

    }
}

mm_changeARate::~mm_changeARate() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete mm_mul_32ns_43ns_75_4_1_U23;
    delete mm_mul_25ns_75ns_100_5_1_U24;
}

void mm_changeARate::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mm_changeARate::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                    !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())) && 
                    esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state13.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                    esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && 
                    !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state13.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state13.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                    esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && 
                    !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_279_p2.read()))) {
        i_0_i_reg_164 = i_fu_285_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())))) {
        i_0_i_reg_164 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        indvar_flatten59_reg_153 = add_ln13_reg_464.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        indvar_flatten59_reg_153 = ap_const_lv100_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())))) {
        add_ln13_reg_464 = add_ln13_fu_273_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        bound16_reg_440 = grp_fu_250_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        bound36_reg_455 = grp_fu_262_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln19_reg_475 = icmp_ln19_fu_279_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_279_p2.read()))) {
        lshr_ln647_reg_489 = lshr_ln647_fu_383_p2.read();
        sub_ln647_2_reg_484 = sub_ln647_2_fu_373_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())))) {
        p_Val2_s_reg_469 = AStreamWide_V_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        select_ln13_reg_423 = select_ln13_fu_221_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, N_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, N_out_full_n.read())))) {
        tmp_3_reg_418 = N_dout.read().range(31, 8);
        tmp_reg_408 = N_dout.read().range(31, 31);
        tmp_s_reg_413 = sub_ln13_fu_183_p2.read().range(31, 8);
    }
}

void mm_changeARate::thread_AStreamWide_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0))) {
        AStreamWide_V_V_blk_n = AStreamWide_V_V_empty_n.read();
    } else {
        AStreamWide_V_V_blk_n = ap_const_logic_1;
    }
}

void mm_changeARate::thread_AStreamWide_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())))) {
        AStreamWide_V_V_read = ap_const_logic_1;
    } else {
        AStreamWide_V_V_read = ap_const_logic_0;
    }
}

void mm_changeARate::thread_AStream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_475.read()))) {
        AStream_V_blk_n = AStream_V_full_n.read();
    } else {
        AStream_V_blk_n = ap_const_logic_1;
    }
}

void mm_changeARate::thread_AStream_V_din() {
    AStream_V_din = p_Result_s_fu_398_p2.read().range(16-1, 0);
}

void mm_changeARate::thread_AStream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_475.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        AStream_V_write = ap_const_logic_1;
    } else {
        AStream_V_write = ap_const_logic_0;
    }
}

void mm_changeARate::thread_Lo_assign_fu_295_p3() {
    Lo_assign_fu_295_p3 = esl_concat<5,4>(trunc_ln21_fu_291_p1.read(), ap_const_lv4_0);
}

void mm_changeARate::thread_N_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        N_blk_n = N_empty_n.read();
    } else {
        N_blk_n = ap_const_logic_1;
    }
}

void mm_changeARate::thread_N_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        N_out_blk_n = N_out_full_n.read();
    } else {
        N_out_blk_n = ap_const_logic_1;
    }
}

void mm_changeARate::thread_N_out_din() {
    N_out_din = N_dout.read();
}

void mm_changeARate::thread_N_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, N_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, N_out_full_n.read())))) {
        N_out_write = ap_const_logic_1;
    } else {
        N_out_write = ap_const_logic_0;
    }
}

void mm_changeARate::thread_N_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, N_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, N_out_full_n.read())))) {
        N_read = ap_const_logic_1;
    } else {
        N_read = ap_const_logic_0;
    }
}

void mm_changeARate::thread_add_ln13_fu_273_p2() {
    add_ln13_fu_273_p2 = (!indvar_flatten59_reg_153.read().is_01() || !ap_const_lv100_1.is_01())? sc_lv<100>(): (sc_biguint<100>(indvar_flatten59_reg_153.read()) + sc_biguint<100>(ap_const_lv100_1));
}

void mm_changeARate::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[12];
}

void mm_changeARate::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mm_changeARate::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void mm_changeARate::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void mm_changeARate::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[13];
}

void mm_changeARate::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mm_changeARate::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mm_changeARate::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mm_changeARate::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mm_changeARate::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mm_changeARate::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_475.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AStream_V_full_n.read()));
}

void mm_changeARate::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_475.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AStream_V_full_n.read()));
}

void mm_changeARate::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_475.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AStream_V_full_n.read()));
}

void mm_changeARate::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, N_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, N_out_full_n.read()));
}

void mm_changeARate::thread_ap_block_state12() {
    ap_block_state12 = (esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read()));
}

void mm_changeARate::thread_ap_block_state13_pp0_stage0_iter0() {
    ap_block_state13_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mm_changeARate::thread_ap_block_state14_pp0_stage0_iter1() {
    ap_block_state14_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_475.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AStream_V_full_n.read()));
}

void mm_changeARate::thread_ap_condition_pp0_exit_iter0_state13() {
    if (esl_seteq<1,1,1>(icmp_ln19_fu_279_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state13 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state13 = ap_const_logic_0;
    }
}

void mm_changeARate::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void mm_changeARate::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void mm_changeARate::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mm_changeARate::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void mm_changeARate::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mm_changeARate::thread_empty_fu_238_p1() {
    empty_fu_238_p1 = esl_sext<43,36>(tmp_4_fu_231_p3.read());
}

void mm_changeARate::thread_grp_fu_250_p0() {
    grp_fu_250_p0 =  (sc_lv<32>) (grp_fu_250_p00.read());
}

void mm_changeARate::thread_grp_fu_250_p00() {
    grp_fu_250_p00 = esl_zext<75,32>(sext_ln13_fu_228_p1.read());
}

void mm_changeARate::thread_grp_fu_250_p1() {
    grp_fu_250_p1 =  (sc_lv<43>) (grp_fu_250_p10.read());
}

void mm_changeARate::thread_grp_fu_250_p10() {
    grp_fu_250_p10 = esl_zext<75,43>(empty_fu_238_p1.read());
}

void mm_changeARate::thread_grp_fu_262_p0() {
    grp_fu_262_p0 =  (sc_lv<25>) (grp_fu_262_p00.read());
}

void mm_changeARate::thread_grp_fu_262_p00() {
    grp_fu_262_p00 = esl_zext<100,25>(select_ln13_reg_423.read());
}

void mm_changeARate::thread_grp_fu_262_p1() {
    grp_fu_262_p1 =  (sc_lv<75>) (grp_fu_262_p10.read());
}

void mm_changeARate::thread_grp_fu_262_p10() {
    grp_fu_262_p10 = esl_zext<100,75>(bound16_reg_440.read());
}

void mm_changeARate::thread_i_fu_285_p2() {
    i_fu_285_p2 = (!i_0_i_reg_164.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_i_reg_164.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void mm_changeARate::thread_icmp_ln13_fu_268_p2() {
    icmp_ln13_fu_268_p2 = (!indvar_flatten59_reg_153.read().is_01() || !bound36_reg_455.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten59_reg_153.read() == bound36_reg_455.read());
}

void mm_changeARate::thread_icmp_ln19_fu_279_p2() {
    icmp_ln19_fu_279_p2 = (!i_0_i_reg_164.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_164.read() == ap_const_lv6_20);
}

void mm_changeARate::thread_icmp_ln647_fu_309_p2() {
    icmp_ln647_fu_309_p2 = (!Lo_assign_fu_295_p3.read().is_01() || !or_ln21_fu_303_p2.read().is_01())? sc_lv<1>(): (sc_biguint<9>(Lo_assign_fu_295_p3.read()) > sc_biguint<9>(or_ln21_fu_303_p2.read()));
}

void mm_changeARate::thread_lshr_ln647_1_fu_392_p2() {
    lshr_ln647_1_fu_392_p2 = (!zext_ln647_3_fu_389_p1.read().is_01())? sc_lv<512>(): ap_const_lv512_lc_2 >> (unsigned short)zext_ln647_3_fu_389_p1.read().to_uint();
}

void mm_changeARate::thread_lshr_ln647_fu_383_p2() {
    lshr_ln647_fu_383_p2 = (!zext_ln647_2_fu_379_p1.read().is_01())? sc_lv<512>(): select_ln647_1_fu_358_p3.read() >> (unsigned short)zext_ln647_2_fu_379_p1.read().to_uint();
}

void mm_changeARate::thread_or_ln21_fu_303_p2() {
    or_ln21_fu_303_p2 = (Lo_assign_fu_295_p3.read() | ap_const_lv9_F);
}

void mm_changeARate::thread_p_Result_s_fu_398_p2() {
    p_Result_s_fu_398_p2 = (lshr_ln647_reg_489.read() & lshr_ln647_1_fu_392_p2.read());
}

void mm_changeARate::thread_select_ln13_fu_221_p3() {
    select_ln13_fu_221_p3 = (!tmp_reg_408.read()[0].is_01())? sc_lv<25>(): ((tmp_reg_408.read()[0].to_bool())? sub_ln13_1_fu_212_p2.read(): zext_ln13_1_fu_218_p1.read());
}

void mm_changeARate::thread_select_ln647_1_fu_358_p3() {
    select_ln647_1_fu_358_p3 = (!icmp_ln647_fu_309_p2.read()[0].is_01())? sc_lv<512>(): ((icmp_ln647_fu_309_p2.read()[0].to_bool())? tmp_23_fu_323_p4.read(): p_Val2_s_reg_469.read());
}

void mm_changeARate::thread_select_ln647_2_fu_365_p3() {
    select_ln647_2_fu_365_p3 = (!icmp_ln647_fu_309_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln647_fu_309_p2.read()[0].to_bool())? xor_ln647_fu_338_p2.read(): zext_ln647_fu_315_p1.read());
}

void mm_changeARate::thread_select_ln647_fu_350_p3() {
    select_ln647_fu_350_p3 = (!icmp_ln647_fu_309_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln647_fu_309_p2.read()[0].to_bool())? sub_ln647_fu_332_p2.read(): sub_ln647_1_fu_344_p2.read());
}

void mm_changeARate::thread_sext_ln13_fu_228_p1() {
    sext_ln13_fu_228_p1 = esl_sext<32,25>(select_ln13_reg_423.read());
}

void mm_changeARate::thread_sub_ln13_1_fu_212_p2() {
    sub_ln13_1_fu_212_p2 = (!ap_const_lv25_0.is_01() || !zext_ln13_fu_209_p1.read().is_01())? sc_lv<25>(): (sc_biguint<25>(ap_const_lv25_0) - sc_biguint<25>(zext_ln13_fu_209_p1.read()));
}

void mm_changeARate::thread_sub_ln13_fu_183_p2() {
    sub_ln13_fu_183_p2 = (!ap_const_lv32_0.is_01() || !N_dout.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(N_dout.read()));
}

void mm_changeARate::thread_sub_ln647_1_fu_344_p2() {
    sub_ln647_1_fu_344_p2 = (!zext_ln647_1_fu_319_p1.read().is_01() || !zext_ln647_fu_315_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln647_1_fu_319_p1.read()) - sc_biguint<10>(zext_ln647_fu_315_p1.read()));
}

void mm_changeARate::thread_sub_ln647_2_fu_373_p2() {
    sub_ln647_2_fu_373_p2 = (!ap_const_lv10_1FF.is_01() || !select_ln647_fu_350_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1FF) - sc_biguint<10>(select_ln647_fu_350_p3.read()));
}

void mm_changeARate::thread_sub_ln647_fu_332_p2() {
    sub_ln647_fu_332_p2 = (!zext_ln647_fu_315_p1.read().is_01() || !zext_ln647_1_fu_319_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln647_fu_315_p1.read()) - sc_biguint<10>(zext_ln647_1_fu_319_p1.read()));
}

void mm_changeARate::thread_tmp_23_fu_323_p4() {
    tmp_23_fu_323_p4 = p_Val2_s_reg_469.read().range(0, 511);
}

void mm_changeARate::thread_tmp_4_fu_231_p3() {
    tmp_4_fu_231_p3 = esl_concat<25,11>(select_ln13_reg_423.read(), ap_const_lv11_0);
}

void mm_changeARate::thread_trunc_ln21_fu_291_p1() {
    trunc_ln21_fu_291_p1 = i_0_i_reg_164.read().range(5-1, 0);
}

void mm_changeARate::thread_xor_ln647_fu_338_p2() {
    xor_ln647_fu_338_p2 = (zext_ln647_fu_315_p1.read() ^ ap_const_lv10_1FF);
}

void mm_changeARate::thread_zext_ln13_1_fu_218_p1() {
    zext_ln13_1_fu_218_p1 = esl_zext<25,24>(tmp_3_reg_418.read());
}

void mm_changeARate::thread_zext_ln13_fu_209_p1() {
    zext_ln13_fu_209_p1 = esl_zext<25,24>(tmp_s_reg_413.read());
}

void mm_changeARate::thread_zext_ln647_1_fu_319_p1() {
    zext_ln647_1_fu_319_p1 = esl_zext<10,9>(or_ln21_fu_303_p2.read());
}

void mm_changeARate::thread_zext_ln647_2_fu_379_p1() {
    zext_ln647_2_fu_379_p1 = esl_zext<512,10>(select_ln647_2_fu_365_p3.read());
}

void mm_changeARate::thread_zext_ln647_3_fu_389_p1() {
    zext_ln647_3_fu_389_p1 = esl_zext<512,10>(sub_ln647_2_reg_484.read());
}

void mm_changeARate::thread_zext_ln647_fu_315_p1() {
    zext_ln647_fu_315_p1 = esl_zext<10,9>(Lo_assign_fu_295_p3.read());
}

void mm_changeARate::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, N_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, N_out_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())) && esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln13_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AStreamWide_V_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln19_fu_279_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln19_fu_279_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXX";
            break;
    }
}

}

